config EMBTK_DOTCONFIG boolean {
 default [y] if []
}
menu "Architecture/variants/options Selection" {
 choice boolean {
  prompt "Architecture" if []
  default [EMBTK_ARCH_MIPS] if []
  config EMBTK_ARCH_ARM boolean {
   prompt "ARM" if [<choice>]
   select EMBTK_TARGET_ARCH_32BITS if [<choice>]
   select EMBTK_32BITS_FS if [<choice>]
   inherited [<choice>]
  }
  config EMBTK_ARCH_MIPS boolean {
   prompt "MIPS" if [<choice>]
   inherited [<choice>]
  }
 }
 config EMBTK_TARGET_ARCH_64BITS boolean {
  depends on [!EMBTK_TARGET_ARCH_32BITS]
  inherited [!EMBTK_TARGET_ARCH_32BITS]
 }
 config EMBTK_TARGET_ARCH_32BITS boolean {
  depends on [!EMBTK_TARGET_ARCH_64BITS]
  inherited [!EMBTK_TARGET_ARCH_64BITS]
 }
 config EMBTK_32BITS_FS boolean {
  depends on [!EMBTK_64BITS_FS]
  inherited [!EMBTK_64BITS_FS]
 }
 config EMBTK_64BITS_FS boolean {
  depends on [!EMBTK_32BITS_FS]
  inherited [!EMBTK_32BITS_FS]
 }
 config EMBTK_64BITS_FS_COMPAT32 boolean {
  depends on [!EMBTK_32BITS_FS]
  inherited [!EMBTK_32BITS_FS]
 }
 config EMBTK_TARGET_ARCH_LITTLE_ENDIAN boolean {
  depends on [!EMBTK_TARGET_ARCH_BIG_ENDIAN]
  inherited [!EMBTK_TARGET_ARCH_BIG_ENDIAN]
 }
 config EMBTK_TARGET_ARCH_BIG_ENDIAN boolean {
  depends on [!EMBTK_TARGET_ARCH_LITTLE_ENDIAN]
  inherited [!EMBTK_TARGET_ARCH_LITTLE_ENDIAN]
 }
 if [EMBTK_ARCH_ARM] {
  choice boolean {
   prompt "ARM Endian" if [EMBTK_ARCH_ARM]
   depends on [EMBTK_ARCH_ARM]
   config EMBTK_ARCH_ARM_LITTLE_ENDIAN boolean {
    prompt "armel: Little endian" if [<choice>]
    select EMBTK_TARGET_ARCH_LITTLE_ENDIAN if [<choice>]
    inherited [<choice>]
   }
   config EMBTK_ARCH_ARM_BIG_ENDIAN boolean {
    prompt "armeb: Big endian" if [<choice>]
    select EMBTK_TARGET_ARCH_BIG_ENDIAN if [<choice>]
    inherited [<choice>]
   }
  }
  choice boolean {
   prompt "ARM ABI to use" if [EMBTK_ARCH_ARM]
   depends on [EMBTK_ARCH_ARM]
   config EMBTK_ARCH_ARM_ABI_EABI boolean {
    prompt "eabi" if [<choice>]
    inherited [<choice>]
   }
  }
  choice boolean {
   prompt "ARM Family" if [EMBTK_ARCH_ARM]
   depends on [EMBTK_ARCH_ARM]
   config EMBTK_ARCH_ARM_FAMILY_ARM7TDMI boolean {
    prompt "arm7tdmi" if [<choice>]
    inherited [<choice>]
   }
   config EMBTK_ARCH_ARM_FAMILY_STRONGARM boolean {
    prompt "StrongARM" if [<choice>]
    inherited [<choice>]
   }
   config EMBTK_ARCH_ARM_FAMILY_ARM8 boolean {
    prompt "arm8" if [<choice>]
    inherited [<choice>]
   }
   config EMBTK_ARCH_ARM_FAMILY_ARM9TDMI boolean {
    prompt "arm9tdmi" if [<choice>]
    inherited [<choice>]
   }
   config EMBTK_ARCH_ARM_FAMILY_ARM9E boolean {
    prompt "arm9e" if [<choice>]
    inherited [<choice>]
   }
   config EMBTK_ARCH_ARM_FAMILY_ARM10E boolean {
    prompt "arm10e" if [<choice>]
    inherited [<choice>]
   }
   config EMBTK_ARCH_ARM_FAMILY_XSCALE boolean {
    prompt "xscale" if [<choice>]
    inherited [<choice>]
   }
   config EMBTK_ARCH_ARM_FAMILY_ARM11 boolean {
    prompt "arm11" if [<choice>]
    inherited [<choice>]
   }
   config EMBTK_ARCH_ARM_FAMILY_CORTEX boolean {
    prompt "cortex" if [<choice>]
    inherited [<choice>]
   }
   config EMBTK_ARCH_ARM_FAMILY_IWMMXT boolean {
    prompt "iwmmxt" if [<choice>]
    inherited [<choice>]
   }
  }
  choice boolean {
   prompt "ARM core" if [EMBTK_ARCH_ARM]
   depends on [EMBTK_ARCH_ARM]
   config EMBTK_ARCH_ARM_FAMILY_ARM7TDMI_ARM7TDMI boolean {
    depends on [EMBTK_ARCH_ARM_FAMILY_ARM7TDMI]
    prompt "arm7tdmi" if [<choice> && EMBTK_ARCH_ARM_FAMILY_ARM7TDMI]
    inherited [<choice> && EMBTK_ARCH_ARM_FAMILY_ARM7TDMI]
   }
   config EMBTK_ARCH_ARM_FAMILY_ARM7TDMI_ARM7TDMI-S boolean {
    depends on [EMBTK_ARCH_ARM_FAMILY_ARM7TDMI]
    prompt "arm7tdmi-s" if [<choice> && EMBTK_ARCH_ARM_FAMILY_ARM7TDMI]
    inherited [<choice> && EMBTK_ARCH_ARM_FAMILY_ARM7TDMI]
   }
   config EMBTK_ARCH_ARM_FAMILY_ARM7TDMI_ARM710T boolean {
    depends on [EMBTK_ARCH_ARM_FAMILY_ARM7TDMI]
    prompt "arm710t" if [<choice> && EMBTK_ARCH_ARM_FAMILY_ARM7TDMI]
    inherited [<choice> && EMBTK_ARCH_ARM_FAMILY_ARM7TDMI]
   }
   config EMBTK_ARCH_ARM_FAMILY_ARM7TDMI_ARM720T boolean {
    depends on [EMBTK_ARCH_ARM_FAMILY_ARM7TDMI]
    prompt "arm720t" if [<choice> && EMBTK_ARCH_ARM_FAMILY_ARM7TDMI]
    inherited [<choice> && EMBTK_ARCH_ARM_FAMILY_ARM7TDMI]
   }
   config EMBTK_ARCH_ARM_FAMILY_ARM7TDMI_ARM740T boolean {
    depends on [EMBTK_ARCH_ARM_FAMILY_ARM7TDMI]
    prompt "arm740t" if [<choice> && EMBTK_ARCH_ARM_FAMILY_ARM7TDMI]
    inherited [<choice> && EMBTK_ARCH_ARM_FAMILY_ARM7TDMI]
   }
   config EMBTK_ARCH_ARM_FAMILY_STRONGARM_SA boolean {
    depends on [EMBTK_ARCH_ARM_FAMILY_STRONGARM]
    prompt "strongarm" if [<choice> && EMBTK_ARCH_ARM_FAMILY_STRONGARM]
    inherited [<choice> && EMBTK_ARCH_ARM_FAMILY_STRONGARM]
   }
   config EMBTK_ARCH_ARM_FAMILY_STRONGARM_SA-110 boolean {
    depends on [EMBTK_ARCH_ARM_FAMILY_STRONGARM]
    prompt "strongarm110" if [<choice> && EMBTK_ARCH_ARM_FAMILY_STRONGARM]
    inherited [<choice> && EMBTK_ARCH_ARM_FAMILY_STRONGARM]
   }
   config EMBTK_ARCH_ARM_FAMILY_STRONGARM_SA-1100 boolean {
    depends on [EMBTK_ARCH_ARM_FAMILY_STRONGARM]
    prompt "strongarm1100" if [<choice> && EMBTK_ARCH_ARM_FAMILY_STRONGARM]
    inherited [<choice> && EMBTK_ARCH_ARM_FAMILY_STRONGARM]
   }
   config EMBTK_ARCH_ARM_FAMILY_STRONGARM_SA-1110 boolean {
    depends on [EMBTK_ARCH_ARM_FAMILY_STRONGARM]
    prompt "strongarm1110" if [<choice> && EMBTK_ARCH_ARM_FAMILY_STRONGARM]
    inherited [<choice> && EMBTK_ARCH_ARM_FAMILY_STRONGARM]
   }
   config EMBTK_ARCH_ARM_FAMILY_ARM8_ARM810 boolean {
    depends on [EMBTK_ARCH_ARM_FAMILY_ARM8]
    prompt "arm810" if [<choice> && EMBTK_ARCH_ARM_FAMILY_ARM8]
    inherited [<choice> && EMBTK_ARCH_ARM_FAMILY_ARM8]
   }
   config EMBTK_ARCH_ARM_FAMILY_ARM9TDMI_ARM9TDMI boolean {
    depends on [EMBTK_ARCH_ARM_FAMILY_ARM9TDMI]
    prompt "arm9tdmi" if [<choice> && EMBTK_ARCH_ARM_FAMILY_ARM9TDMI]
    inherited [<choice> && EMBTK_ARCH_ARM_FAMILY_ARM9TDMI]
   }
   config EMBTK_ARCH_ARM_FAMILY_ARM9TDMI_ARM920T boolean {
    depends on [EMBTK_ARCH_ARM_FAMILY_ARM9TDMI]
    prompt "arm920t" if [<choice> && EMBTK_ARCH_ARM_FAMILY_ARM9TDMI]
    inherited [<choice> && EMBTK_ARCH_ARM_FAMILY_ARM9TDMI]
   }
   config EMBTK_ARCH_ARM_FAMILY_ARM9TDMI_ARM922T boolean {
    depends on [EMBTK_ARCH_ARM_FAMILY_ARM9TDMI]
    prompt "arm922t" if [<choice> && EMBTK_ARCH_ARM_FAMILY_ARM9TDMI]
    inherited [<choice> && EMBTK_ARCH_ARM_FAMILY_ARM9TDMI]
   }
   config EMBTK_ARCH_ARM_FAMILY_ARM9TDMI_ARM940T boolean {
    depends on [EMBTK_ARCH_ARM_FAMILY_ARM9TDMI]
    prompt "arm940t" if [<choice> && EMBTK_ARCH_ARM_FAMILY_ARM9TDMI]
    inherited [<choice> && EMBTK_ARCH_ARM_FAMILY_ARM9TDMI]
   }
   config EMBTK_ARCH_ARM_FAMILY_ARM9E_ARM946E-S boolean {
    depends on [EMBTK_ARCH_ARM_FAMILY_ARM9E]
    prompt "arm946e-s" if [<choice> && EMBTK_ARCH_ARM_FAMILY_ARM9E]
    inherited [<choice> && EMBTK_ARCH_ARM_FAMILY_ARM9E]
   }
   config EMBTK_ARCH_ARM_FAMILY_ARM9E_ARM966E-S boolean {
    depends on [EMBTK_ARCH_ARM_FAMILY_ARM9E]
    prompt "arm966e-s" if [<choice> && EMBTK_ARCH_ARM_FAMILY_ARM9E]
    inherited [<choice> && EMBTK_ARCH_ARM_FAMILY_ARM9E]
   }
   config EMBTK_ARCH_ARM_FAMILY_ARM9E_ARM968E-S boolean {
    depends on [EMBTK_ARCH_ARM_FAMILY_ARM9E]
    prompt "arm968e-s" if [<choice> && EMBTK_ARCH_ARM_FAMILY_ARM9E]
    inherited [<choice> && EMBTK_ARCH_ARM_FAMILY_ARM9E]
   }
   config EMBTK_ARCH_ARM_FAMILY_ARM9E_ARM926EJ-S boolean {
    depends on [EMBTK_ARCH_ARM_FAMILY_ARM9E]
    prompt "arm926ej-s" if [<choice> && EMBTK_ARCH_ARM_FAMILY_ARM9E]
    inherited [<choice> && EMBTK_ARCH_ARM_FAMILY_ARM9E]
   }
   config EMBTK_ARCH_ARM_FAMILY_ARM10E_ARM1020E boolean {
    depends on [EMBTK_ARCH_ARM_FAMILY_ARM10E]
    prompt "arm1020e" if [<choice> && EMBTK_ARCH_ARM_FAMILY_ARM10E]
    inherited [<choice> && EMBTK_ARCH_ARM_FAMILY_ARM10E]
   }
   config EMBTK_ARCH_ARM_FAMILY_ARM10E_ARM1022E boolean {
    depends on [EMBTK_ARCH_ARM_FAMILY_ARM10E]
    prompt "arm1022e" if [<choice> && EMBTK_ARCH_ARM_FAMILY_ARM10E]
    inherited [<choice> && EMBTK_ARCH_ARM_FAMILY_ARM10E]
   }
   config EMBTK_ARCH_ARM_FAMILY_ARM10E_ARM1026EJ-S boolean {
    depends on [EMBTK_ARCH_ARM_FAMILY_ARM10E]
    prompt "arm1026ej-s" if [<choice> && EMBTK_ARCH_ARM_FAMILY_ARM10E]
    inherited [<choice> && EMBTK_ARCH_ARM_FAMILY_ARM10E]
   }
   config EMBTK_ARCH_ARM_FAMILY_XSCALE_XSCALE boolean {
    depends on [EMBTK_ARCH_ARM_FAMILY_XSCALE]
    prompt "xscale" if [<choice> && EMBTK_ARCH_ARM_FAMILY_XSCALE]
    inherited [<choice> && EMBTK_ARCH_ARM_FAMILY_XSCALE]
   }
   config EMBTK_ARCH_ARM_FAMILY_ARM11_ARM1136J-S boolean {
    depends on [EMBTK_ARCH_ARM_FAMILY_ARM11]
    prompt "arm1136j-s" if [<choice> && EMBTK_ARCH_ARM_FAMILY_ARM11]
    inherited [<choice> && EMBTK_ARCH_ARM_FAMILY_ARM11]
   }
   config EMBTK_ARCH_ARM_FAMILY_ARM11_ARM1136JF-S boolean {
    depends on [EMBTK_ARCH_ARM_FAMILY_ARM11]
    prompt "arm1136jf-s" if [<choice> && EMBTK_ARCH_ARM_FAMILY_ARM11]
    inherited [<choice> && EMBTK_ARCH_ARM_FAMILY_ARM11]
   }
   config EMBTK_ARCH_ARM_FAMILY_ARM11_ARM1156T2-S boolean {
    depends on [EMBTK_ARCH_ARM_FAMILY_ARM11]
    prompt "arm1156t2-s" if [<choice> && EMBTK_ARCH_ARM_FAMILY_ARM11]
    inherited [<choice> && EMBTK_ARCH_ARM_FAMILY_ARM11]
   }
   config EMBTK_ARCH_ARM_FAMILY_ARM11_ARM1176JZ-S boolean {
    depends on [EMBTK_ARCH_ARM_FAMILY_ARM11]
    prompt "arm1176jz-s" if [<choice> && EMBTK_ARCH_ARM_FAMILY_ARM11]
    inherited [<choice> && EMBTK_ARCH_ARM_FAMILY_ARM11]
   }
   config EMBTK_ARCH_ARM_FAMILY_ARM11_ARM1176JZF-S boolean {
    depends on [EMBTK_ARCH_ARM_FAMILY_ARM11]
    prompt "arm1176jzf-s" if [<choice> && EMBTK_ARCH_ARM_FAMILY_ARM11]
    inherited [<choice> && EMBTK_ARCH_ARM_FAMILY_ARM11]
   }
   config EMBTK_ARCH_ARM_FAMILY_ARM11_MPCORE boolean {
    depends on [EMBTK_ARCH_ARM_FAMILY_ARM11]
    prompt "mpcore" if [<choice> && EMBTK_ARCH_ARM_FAMILY_ARM11]
    inherited [<choice> && EMBTK_ARCH_ARM_FAMILY_ARM11]
   }
   config EMBTK_ARCH_ARM_FAMILY_CORTEX_CORTEX-A8 boolean {
    depends on [EMBTK_ARCH_ARM_FAMILY_CORTEX]
    prompt "cortex-a8" if [<choice> && EMBTK_ARCH_ARM_FAMILY_CORTEX]
    inherited [<choice> && EMBTK_ARCH_ARM_FAMILY_CORTEX]
   }
   config EMBTK_ARCH_ARM_FAMILY_CORTEX_CORTEX-A9 boolean {
    depends on [EMBTK_ARCH_ARM_FAMILY_CORTEX]
    prompt "cortex-a9" if [<choice> && EMBTK_ARCH_ARM_FAMILY_CORTEX]
    inherited [<choice> && EMBTK_ARCH_ARM_FAMILY_CORTEX]
   }
   config EMBTK_ARCH_ARM_FAMILY_CORTEX_CORTEX-R4 boolean {
    depends on [EMBTK_ARCH_ARM_FAMILY_CORTEX]
    prompt "cortex-r4" if [<choice> && EMBTK_ARCH_ARM_FAMILY_CORTEX]
    inherited [<choice> && EMBTK_ARCH_ARM_FAMILY_CORTEX]
   }
   config EMBTK_ARCH_ARM_FAMILY_CORTEX_CORTEX-R4F boolean {
    depends on [EMBTK_ARCH_ARM_FAMILY_CORTEX]
    prompt "cortex-r4f" if [<choice> && EMBTK_ARCH_ARM_FAMILY_CORTEX]
    inherited [<choice> && EMBTK_ARCH_ARM_FAMILY_CORTEX]
   }
   config EMBTK_ARCH_ARM_FAMILY_CORTEX_CORTEX-M3 boolean {
    depends on [EMBTK_ARCH_ARM_FAMILY_CORTEX]
    prompt "cortex-m3" if [<choice> && EMBTK_ARCH_ARM_FAMILY_CORTEX]
    inherited [<choice> && EMBTK_ARCH_ARM_FAMILY_CORTEX]
   }
   config EMBTK_ARCH_ARM_FAMILY_CORTEX_CORTEX-M1 boolean {
    depends on [EMBTK_ARCH_ARM_FAMILY_CORTEX]
    prompt "cortex-m1" if [<choice> && EMBTK_ARCH_ARM_FAMILY_CORTEX]
    inherited [<choice> && EMBTK_ARCH_ARM_FAMILY_CORTEX]
   }
   config EMBTK_ARCH_ARM_FAMILY_IWMMXT_IWMMXT boolean {
    depends on [EMBTK_ARCH_ARM_FAMILY_IWMMXT]
    prompt "iwmmxt" if [<choice> && EMBTK_ARCH_ARM_FAMILY_IWMMXT]
    inherited [<choice> && EMBTK_ARCH_ARM_FAMILY_IWMMXT]
   }
   config EMBTK_ARCH_ARM_FAMILY_IWMMXT_IWMMXT2 boolean {
    depends on [EMBTK_ARCH_ARM_FAMILY_IWMMXT]
    prompt "iwmmxt2" if [<choice> && EMBTK_ARCH_ARM_FAMILY_IWMMXT]
    inherited [<choice> && EMBTK_ARCH_ARM_FAMILY_IWMMXT]
   }
  }
  config EMBTK_ARM_MCU_STRING string {
   depends on [EMBTK_ARCH_ARM]
   default ["arm7tdmi"] if [EMBTK_ARCH_ARM && EMBTK_ARCH_ARM_FAMILY_ARM7TDMI_ARM7TDMI]
   default ["arm7tdmi-s"] if [EMBTK_ARCH_ARM && EMBTK_ARCH_ARM_FAMILY_ARM7TDMI_ARM7TDMI-S]
   default ["arm710t"] if [EMBTK_ARCH_ARM && EMBTK_ARCH_ARM_FAMILY_ARM7TDMI_ARM710T]
   default ["arm720t"] if [EMBTK_ARCH_ARM && EMBTK_ARCH_ARM_FAMILY_ARM7TDMI_ARM720T]
   default ["arm740t"] if [EMBTK_ARCH_ARM && EMBTK_ARCH_ARM_FAMILY_ARM7TDMI_ARM740T]
   default ["strongarm"] if [EMBTK_ARCH_ARM && EMBTK_ARCH_ARM_FAMILY_STRONGARM_SA]
   default ["strongarm110"] if [EMBTK_ARCH_ARM && EMBTK_ARCH_ARM_FAMILY_STRONGARM_SA-110]
   default ["strongarm1100"] if [EMBTK_ARCH_ARM && EMBTK_ARCH_ARM_FAMILY_STRONGARM_SA-1100]
   default ["strongarm1110"] if [EMBTK_ARCH_ARM && EMBTK_ARCH_ARM_FAMILY_STRONGARM_SA-1110]
   default ["arm810"] if [EMBTK_ARCH_ARM && EMBTK_ARCH_ARM_FAMILY_ARM8_ARM810]
   default ["arm9tdmi"] if [EMBTK_ARCH_ARM && EMBTK_ARCH_ARM_FAMILY_ARM9TDMI_ARM9TDMI]
   default ["arm920t"] if [EMBTK_ARCH_ARM && EMBTK_ARCH_ARM_FAMILY_ARM9TDMI_ARM920T]
   default ["arm922t"] if [EMBTK_ARCH_ARM && EMBTK_ARCH_ARM_FAMILY_ARM9TDMI_ARM922T]
   default ["arm940t"] if [EMBTK_ARCH_ARM && EMBTK_ARCH_ARM_FAMILY_ARM9TDMI_ARM940T]
   default ["arm946e-s"] if [EMBTK_ARCH_ARM && EMBTK_ARCH_ARM_FAMILY_ARM9E_ARM946E-S]
   default ["arm966e-s"] if [EMBTK_ARCH_ARM && EMBTK_ARCH_ARM_FAMILY_ARM9E_ARM966E-S]
   default ["arm968e-s"] if [EMBTK_ARCH_ARM && EMBTK_ARCH_ARM_FAMILY_ARM9E_ARM968E-S]
   default ["arm926ej-s"] if [EMBTK_ARCH_ARM && EMBTK_ARCH_ARM_FAMILY_ARM9E_ARM926EJ-S]
   default ["arm1020e"] if [EMBTK_ARCH_ARM && EMBTK_ARCH_ARM_FAMILY_ARM10E_ARM1020E]
   default ["arm1022e"] if [EMBTK_ARCH_ARM && EMBTK_ARCH_ARM_FAMILY_ARM10E_ARM1022E]
   default ["arm1026ej-s"] if [EMBTK_ARCH_ARM && EMBTK_ARCH_ARM_FAMILY_ARM10E_ARM1026EJ-S]
   default ["xscale"] if [EMBTK_ARCH_ARM && EMBTK_ARCH_ARM_FAMILY_XSCALE_XSCALE]
   default ["arm1136j-s"] if [EMBTK_ARCH_ARM && EMBTK_ARCH_ARM_FAMILY_ARM11_ARM1136J-S]
   default ["arm1136jf-s"] if [EMBTK_ARCH_ARM && EMBTK_ARCH_ARM_FAMILY_ARM11_ARM1136JF-S]
   default ["arm1156t2-s"] if [EMBTK_ARCH_ARM && EMBTK_ARCH_ARM_FAMILY_ARM11_ARM1156T2-S]
   default ["arm1176jz-s"] if [EMBTK_ARCH_ARM && EMBTK_ARCH_ARM_FAMILY_ARM11_ARM1176JZ-S]
   default ["arm1176jzf-s"] if [EMBTK_ARCH_ARM && EMBTK_ARCH_ARM_FAMILY_ARM11_ARM1176JZF-S]
   default ["mpcore"] if [EMBTK_ARCH_ARM && EMBTK_ARCH_ARM_FAMILY_ARM11_MPCORE]
   default ["cortex-a8"] if [EMBTK_ARCH_ARM && EMBTK_ARCH_ARM_FAMILY_CORTEX_CORTEX-A8]
   default ["cortex-a9"] if [EMBTK_ARCH_ARM && EMBTK_ARCH_ARM_FAMILY_CORTEX_CORTEX-A9]
   default ["cortex-r4"] if [EMBTK_ARCH_ARM && EMBTK_ARCH_ARM_FAMILY_CORTEX_CORTEX-R4]
   default ["cortex-r4f"] if [EMBTK_ARCH_ARM && EMBTK_ARCH_ARM_FAMILY_CORTEX_CORTEX-R4F]
   default ["cortex-m3"] if [EMBTK_ARCH_ARM && EMBTK_ARCH_ARM_FAMILY_CORTEX_CORTEX-M3]
   default ["cortex-m1"] if [EMBTK_ARCH_ARM && EMBTK_ARCH_ARM_FAMILY_CORTEX_CORTEX-M1]
   default ["iwmmxt"] if [EMBTK_ARCH_ARM && EMBTK_ARCH_ARM_FAMILY_IWMMXT_IWMMXT]
   default ["iwmmxt2"] if [EMBTK_ARCH_ARM && EMBTK_ARCH_ARM_FAMILY_IWMMXT_IWMMXT2]
   inherited [EMBTK_ARCH_ARM]
  }
 }
 if [EMBTK_ARCH_MIPS] {
  choice boolean {
   prompt "MIPS architecture variant" if [EMBTK_ARCH_MIPS]
   depends on [EMBTK_ARCH_MIPS]
   default [EMBTK_ARCH_MIPS_MIPS32_LITTLE] if [EMBTK_ARCH_MIPS]
   config EMBTK_ARCH_MIPS_MIPS1_LITTLE boolean {
    prompt "MIPS I little endian" if [<choice>]
    select EMBTK_TARGET_ARCH_32BITS if [<choice>]
    select EMBTK_ARCH_MIPS_LITTLE_ENDIAN if [<choice>]
    inherited [<choice>]
   }
   config EMBTK_ARCH_MIPS_MIPS1_BIG boolean {
    prompt "MIPS I big endian" if [<choice>]
    select EMBTK_TARGET_ARCH_32BITS if [<choice>]
    select EMBTK_ARCH_MIPS_BIG_ENDIAN if [<choice>]
    inherited [<choice>]
   }
   config EMBTK_ARCH_MIPS_MIPS2_LITTLE boolean {
    prompt "MIPS II little endian" if [<choice>]
    select EMBTK_TARGET_ARCH_32BITS if [<choice>]
    select EMBTK_ARCH_MIPS_LITTLE_ENDIAN if [<choice>]
    inherited [<choice>]
   }
   config EMBTK_ARCH_MIPS_MIPS2_BIG boolean {
    prompt "MIPS II big endian" if [<choice>]
    select EMBTK_TARGET_ARCH_32BITS if [<choice>]
    select EMBTK_ARCH_MIPS_BIG_ENDIAN if [<choice>]
    inherited [<choice>]
   }
   config EMBTK_ARCH_MIPS_MIPS3_LITTLE boolean {
    prompt "MIPS III little endian" if [<choice>]
    select EMBTK_TARGET_ARCH_64BITS if [<choice>]
    select EMBTK_ARCH_MIPS_LITTLE_ENDIAN if [<choice>]
    inherited [<choice>]
   }
   config EMBTK_ARCH_MIPS_MIPS3_BIG boolean {
    prompt "MIPS III big endian" if [<choice>]
    select EMBTK_TARGET_ARCH_64BITS if [<choice>]
    select EMBTK_ARCH_MIPS_BIG_ENDIAN if [<choice>]
    inherited [<choice>]
   }
   config EMBTK_ARCH_MIPS_MIPS4_LITTLE boolean {
    prompt "MIPS IV little endian" if [<choice>]
    select EMBTK_TARGET_ARCH_64BITS if [<choice>]
    select EMBTK_ARCH_MIPS_LITTLE_ENDIAN if [<choice>]
    inherited [<choice>]
   }
   config EMBTK_ARCH_MIPS_MIPS4_BIG boolean {
    prompt "MIPS IV big endian" if [<choice>]
    select EMBTK_TARGET_ARCH_64BITS if [<choice>]
    select EMBTK_ARCH_MIPS_BIG_ENDIAN if [<choice>]
    inherited [<choice>]
   }
   config EMBTK_ARCH_MIPS_MIPS32_LITTLE boolean {
    prompt "MIPS32 little endian" if [<choice>]
    select EMBTK_TARGET_ARCH_32BITS if [<choice>]
    select EMBTK_ARCH_MIPS_LITTLE_ENDIAN if [<choice>]
    inherited [<choice>]
   }
   config EMBTK_ARCH_MIPS_MIPS32_BIG boolean {
    prompt "MIPS32 big endian" if [<choice>]
    select EMBTK_TARGET_ARCH_32BITS if [<choice>]
    select EMBTK_ARCH_MIPS_BIG_ENDIAN if [<choice>]
    inherited [<choice>]
   }
   config EMBTK_ARCH_MIPS_MIPS32R2_LITTLE boolean {
    prompt "MIPS32 release 2 little endian" if [<choice>]
    select EMBTK_TARGET_ARCH_32BITS if [<choice>]
    select EMBTK_ARCH_MIPS_LITTLE_ENDIAN if [<choice>]
    inherited [<choice>]
   }
   config EMBTK_ARCH_MIPS_MIPS32R2_BIG boolean {
    prompt "MIPS32 release 2 big endian" if [<choice>]
    select EMBTK_TARGET_ARCH_32BITS if [<choice>]
    select EMBTK_ARCH_MIPS_BIG_ENDIAN if [<choice>]
    inherited [<choice>]
   }
   config EMBTK_ARCH_MIPS_MIPS64_LITTLE boolean {
    prompt "MIPS64 little endian" if [<choice>]
    select EMBTK_TARGET_ARCH_64BITS if [<choice>]
    select EMBTK_ARCH_MIPS_LITTLE_ENDIAN if [<choice>]
    inherited [<choice>]
   }
   config EMBTK_ARCH_MIPS_MIPS64_BIG boolean {
    prompt "MIPS64 big endian" if [<choice>]
    select EMBTK_TARGET_ARCH_64BITS if [<choice>]
    select EMBTK_ARCH_MIPS_BIG_ENDIAN if [<choice>]
    inherited [<choice>]
   }
   config EMBTK_ARCH_MIPS_MIPS64R2_LITTLE boolean {
    prompt "MIPS64 release 2 little endian" if [<choice>]
    select EMBTK_TARGET_ARCH_64BITS if [<choice>]
    select EMBTK_ARCH_MIPS_LITTLE_ENDIAN if [<choice>]
    inherited [<choice>]
   }
   config EMBTK_ARCH_MIPS_MIPS64R2_BIG boolean {
    prompt "MIPS64 release 2 big endian" if [<choice>]
    select EMBTK_TARGET_ARCH_64BITS if [<choice>]
    select EMBTK_ARCH_MIPS_BIG_ENDIAN if [<choice>]
    inherited [<choice>]
   }
  }
  choice boolean {
   prompt "ABI" if [EMBTK_ARCH_MIPS]
   depends on [EMBTK_ARCH_MIPS]
   default [EMBTK_ARCH_MIPS_ABI_O32] if [EMBTK_ARCH_MIPS]
   config EMBTK_ARCH_MIPS_ABI_O32 boolean {
    prompt "o32" if [<choice>]
    select EMBTK_32BITS_FS if [<choice>]
    inherited [<choice>]
   }
   config EMBTK_ARCH_MIPS_ABI_N32 boolean {
    prompt "n32" if [<choice> && !EMBTK_TARGET_ARCH_32BITS]
    select EMBTK_64BITS_FS_COMPAT32 if [<choice>]
    inherited [<choice>]
   }
   config EMBTK_ARCH_MIPS_ABI_N64 boolean {
    prompt "n64" if [<choice> && !EMBTK_TARGET_ARCH_32BITS]
    select EMBTK_64BITS_FS if [<choice>]
    inherited [<choice>]
   }
  }
  config EMBTK_ARCH_MIPS_BIG_ENDIAN boolean {
   select EMBTK_TARGET_ARCH_BIG_ENDIAN if [EMBTK_ARCH_MIPS]
   inherited [EMBTK_ARCH_MIPS]
  }
  config EMBTK_ARCH_MIPS_LITTLE_ENDIAN boolean {
   select EMBTK_TARGET_ARCH_LITTLE_ENDIAN if [EMBTK_ARCH_MIPS]
   inherited [EMBTK_ARCH_MIPS]
  }
 }
 choice boolean {
  prompt "Floating point type" if []
  config EMBTK_SOFTFLOAT boolean {
   prompt "Soft floating point" if [<choice>]
   inherited [<choice>]
  }
  config EMBTK_HARDFLOAT boolean {
   prompt "Hard floating point" if [<choice>]
   inherited [<choice>]
  }
 }
}
config EMBTK_OLDPACKAGES boolean {
 prompt "Show old revision of some packages" if []
}
menu "Toolchain configuration" {
 menu "C library to use" {
  choice boolean {
   prompt "Choose which C library to use" if []
   config EMBTK_CLIB_EGLIBC boolean {
    prompt "eglibc" if [<choice>]
    inherited [<choice>]
   }
   config EMBTK_CLIB_UCLIBC boolean {
    prompt "uClibc" if [<choice>]
    inherited [<choice>]
   }
  }
  if [EMBTK_CLIB_EGLIBC] {
   choice boolean {
    prompt "EGLIBC branch to checkout" if [EMBTK_CLIB_EGLIBC]
    config EMBTK_EGLIBC_VERSION_2_12 boolean {
     prompt "eglibc-2.12" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_EGLIBC_VERSION_2_11 boolean {
     prompt "eglibc-2.11" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_EGLIBC_VERSION_2_10 boolean {
     prompt "eglibc-2.10" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_EGLIBC_VERSION_2_9 boolean {
     prompt "eglibc-2.9" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_EGLIBC_VERSION_TRUNK boolean {
     prompt "trunk (development version)" if [<choice>]
     inherited [<choice>]
    }
   }
   config EMBTK_EGLIBC_SVN_REVISION integer {
    prompt "EGLIBC SVN revision to checkout (Please read the help below)" if [EMBTK_CLIB_EGLIBC]
    default [11306] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
    default [10690] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
    default [10152] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
    default [10153] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
    default [11305] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
    inherited [EMBTK_CLIB_EGLIBC]
   }
   config EMBTK_EGLIBC_BRANCH_STRING string {
    default ["2_12"] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
    default ["2_11"] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
    default ["2_10"] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
    default ["2_9"] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
    inherited [EMBTK_CLIB_EGLIBC]
   }
   config EMBTK_EGLIBC_VERSION_STRING string {
    default ["2.12"] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
    default ["2.11"] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
    default ["2.10"] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
    default ["2.9"] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
    default ["trunk"] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
    inherited [EMBTK_CLIB_EGLIBC]
   }
   config EMBTK_EGLIBC_NEED_PATCH boolean {
    default [y] if [EMBTK_CLIB_EGLIBC]
    inherited [EMBTK_CLIB_EGLIBC]
   }
   if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12] {
    config KEMBTK_EGLIBC_OPTION_EGLIBC_BACKTRACE boolean {
     prompt "Functions for producing backtraces" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Functions for producing backtraces" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Functions for producing backtraces" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Functions for producing backtraces" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Functions for producing backtraces" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_BIG_MACROS boolean {
     prompt "Use extensive inline code" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Use extensive inline code" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "Use extensive inline code" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_BSD boolean {
     prompt "BSD-specific functions, and their compatibility stubs" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "BSD-specific functions, and their compatibility stubs" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "BSD-specific functions, and their compatibility stubs" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "BSD-specific functions, and their compatibility stubs" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "BSD-specific functions, and their compatibility stubs" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_CXX_TESTS boolean {
     prompt "Tests that link against the standard C++ library." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO && KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
     depends on [KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO]
     depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
     prompt "Tests that link against the standard C++ library." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO && KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
     depends on [KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO]
     depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
     prompt "Tests that link against the standard C++ library." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO && KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
     depends on [KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO]
     depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
     prompt "Tests that link against the standard C++ library." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO && KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
     depends on [KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO]
     depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
     prompt "Tests that link against the standard C++ library." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO && KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
     depends on [KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO]
     depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO && KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_CHARSETS boolean {
     prompt "iconv/gconv character set conversion libraries" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "iconv/gconv character set conversion libraries" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "iconv/gconv character set conversion libraries" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "iconv/gconv character set conversion libraries" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "iconv/gconv character set conversion libraries" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_CRYPT boolean {
     prompt "Encryption library" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Encryption library" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     config KEMBTK_EGLIBC_OPTION_EGLIBC_CRYPT_UFC boolean {
      prompt "Ultra fast `crypt' implementation" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_CRYPT]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_CRYPT]
      prompt "Ultra fast `crypt' implementation" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_CRYPT]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_CRYPT]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_CRYPT]
     }
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_DB_ALIASES boolean {
     prompt "Functions for accessing the mail aliases database" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Functions for accessing the mail aliases database" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "Functions for accessing the mail aliases database" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Functions for accessing the mail aliases database" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Functions for accessing the mail aliases database" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_ENVZ boolean {
     prompt "Functions for handling envz-style environment vectors." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Functions for handling envz-style environment vectors." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "Functions for handling envz-style environment vectors." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Functions for handling envz-style environment vectors." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Functions for handling envz-style environment vectors." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_FCVT boolean {
     prompt "Functions for converting floating-point numbers to strings" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Functions for converting floating-point numbers to strings" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "Functions for converting floating-point numbers to strings" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Functions for converting floating-point numbers to strings" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_FMTMSG boolean {
     prompt "Functions for formatting messages" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Functions for formatting messages" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "Functions for formatting messages" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Functions for formatting messages" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_FSTAB boolean {
     prompt "Access functions for 'fstab'" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Access functions for 'fstab'" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Access functions for 'fstab'" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Access functions for 'fstab'" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Access functions for 'fstab'" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_FTRAVERSE boolean {
     prompt "Functions for traversing file hierarchies" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Functions for traversing file hierarchies" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Functions for traversing file hierarchies" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Functions for traversing file hierarchies" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_INET boolean {
     prompt "Networking support" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Networking support" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Networking support" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Networking support" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Networking support" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     config KEMBTK_EGLIBC_OPTION_EGLIBC_SUNRPC boolean {
      prompt "Support for the Sun 'RPC' protocol." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for the Sun 'RPC' protocol." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for the Sun 'RPC' protocol." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for the Sun 'RPC' protocol." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for the Sun 'RPC' protocol." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
     }
     config KEMBTK_EGLIBC_OPTION_EGLIBC_NIS boolean {
      prompt "Support for NIS, NIS+, and the special 'compat' services." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for NIS, NIS+, and the special 'compat' services." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for NIS, NIS+, and the special 'compat' services." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for NIS, NIS+, and the special 'compat' services." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for NIS, NIS+, and the special 'compat' services." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
     }
     config KEMBTK_EGLIBC_OPTION_EGLIBC_ADVANCED_INET6 boolean {
      prompt "IPv6 Advanced Sockets API support (RFC3542)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "IPv6 Advanced Sockets API support (RFC3542)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "IPv6 Advanced Sockets API support (RFC3542)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "IPv6 Advanced Sockets API support (RFC3542)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "IPv6 Advanced Sockets API support (RFC3542)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
     }
     config KEMBTK_EGLIBC_OPTION_EGLIBC_INET_ANL boolean {
      prompt "Asynchronous name lookup" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Asynchronous name lookup" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
     }
     config KEMBTK_EGLIBC_OPTION_EGLIBC_RCMD boolean {
      prompt "Support for 'rcmd' and related library functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for 'rcmd' and related library functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for 'rcmd' and related library functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for 'rcmd' and related library functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for 'rcmd' and related library functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
     }
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM boolean {
     prompt "libm (math library)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "libm (math library)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "libm (math library)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "libm (math library)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "libm (math library)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     config KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM_BIG boolean {
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
      prompt "Math library with double precision functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
      default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
      prompt "Math library with double precision functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
      default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
     }
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALES boolean {
     prompt "Locale definitions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Locale definitions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "Locale definitions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Locale definitions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Locale definitions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_MEMUSAGE boolean {
     prompt "Memory profiling library" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Memory profiling library" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "Memory profiling library" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     config EMBTK_EGLIBC_OPTION_EGLIBC_MEMUSAGE_DEFAULT_BUFFER_SIZE integer {
      prompt "Libmemusage library buffers size" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_MEMUSAGE]
      default [512] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_MEMUSAGE]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_MEMUSAGE]
      prompt "Libmemusage library buffers size" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_MEMUSAGE]
      default [512] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_MEMUSAGE]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_MEMUSAGE]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_MEMUSAGE]
     }
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH boolean {
     prompt "Name service switch (nsswitch) support" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Name service switch (nsswitch) support" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Name service switch (nsswitch) support" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Name service switch (nsswitch) support" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     config KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH_FIXED_CONFIG string {
      prompt "Alternate file for nsswitch.conf (see below help please)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      depends on [!KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      prompt "Alternate file for nsswitch.conf (see below help please)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      depends on [!KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      depends on [!KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      prompt "Alternate file for nsswitch.conf (see below help please)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      depends on [!KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      prompt "Alternate file for nsswitch.conf (see below help please)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      prompt "Alternate file for nsswitch.conf (see below help please)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      depends on [!KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
     }
     config KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH_FIXED_FUNCTIONS string {
      prompt "Alternate nss/fixed-nsswitch.functions file (see below help please)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      depends on [!KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      prompt "Alternate nss/fixed-nsswitch.functions file (see below help please)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      depends on [!KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      depends on [!KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      prompt "Alternate nss/fixed-nsswitch.functions file (see below help please)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      depends on [!KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      prompt "Alternate nss/fixed-nsswitch.functions file (see below help please)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      prompt "Alternate nss/fixed-nsswitch.functions file (see below help please)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      depends on [!KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
     }
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_RTLD_DEBUG boolean {
     prompt "Runtime linker debug print outs" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Runtime linker debug print outs" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_SPAWN boolean {
     prompt "Support for POSIX posix_spawn functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Support for POSIX posix_spawn functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "Support for POSIX posix_spawn functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Support for POSIX posix_spawn functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Support for POSIX posix_spawn functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_STREAMS boolean {
     prompt "Support for accessing STREAMS." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Support for accessing STREAMS." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "Support for accessing STREAMS." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Support for accessing STREAMS." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Support for accessing STREAMS." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP boolean {
     prompt "Older access functions for 'utmp' login records" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Older access functions for 'utmp' login records" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "Older access functions for 'utmp' login records" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Older access functions for 'utmp' login records" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Older access functions for 'utmp' login records" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     config KEMBTK_EGLIBC_OPTION_EGLIBC_GETLOGIN boolean {
      prompt "The getlogin function" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      prompt "The getlogin function" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      prompt "The getlogin function" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      prompt "The getlogin function" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      prompt "The getlogin function" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
     }
     config KEMBTK_EGLIBC_OPTION_EGLIBC_UTMPX boolean {
      prompt "POSIX access functions for 'utmp' login records" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      prompt "POSIX access functions for 'utmp' login records" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      prompt "POSIX access functions for 'utmp' login records" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      prompt "POSIX access functions for 'utmp' login records" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      prompt "POSIX access functions for 'utmp' login records" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
     }
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_IDN boolean {
     prompt "International domain names support" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "International domain names support" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_WORDEXP boolean {
     prompt "Shell-style word expansion" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Shell-style word expansion" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Shell-style word expansion" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Shell-style word expansion" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Shell-style word expansion" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
    }
    config KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR boolean {
     prompt "ISO C library wide character functions, excluding I/O" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "ISO C library wide character functions, excluding I/O" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "ISO C library wide character functions, excluding I/O" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "ISO C library wide character functions, excluding I/O" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "ISO C library wide character functions, excluding I/O" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     config KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO boolean {
      prompt "Input and output functions for wide characters" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      prompt "Input and output functions for wide characters" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      prompt "Input and output functions for wide characters" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      prompt "Input and output functions for wide characters" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      prompt "Input and output functions for wide characters" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
     }
     config KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE boolean {
      prompt "Locale functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      prompt "Locale functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      prompt "Locale functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      prompt "Locale functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      prompt "Locale functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      config KEMBTK_EGLIBC_OPTION_EGLIBC_CATGETS boolean {
       prompt "Functions for accessing message catalogs" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE]
       depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE]
       prompt "Functions for accessing message catalogs" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE]
       depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE]
       prompt "Functions for accessing message catalogs" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE]
       depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE]
       prompt "Functions for accessing message catalogs" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE]
       depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE]
       prompt "Functions for accessing message catalogs" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE]
       depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE]
       inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE]
      }
     }
    }
    config KEMBTK_EGLIBC_OPTION_POSIX_REGEXP boolean {
     prompt "Regular expressions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Regular expressions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Regular expressions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Regular expressions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Regular expressions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     config KEMBTK_EGLIBC_OPTION_POSIX_REGEXP_GLIBC boolean {
      prompt "Regular expressions from GLIBC" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_POSIX_REGEXP]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_REGEXP]
      prompt "Regular expressions from GLIBC" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_POSIX_REGEXP]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_REGEXP]
      prompt "Regular expressions from GLIBC" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_POSIX_REGEXP]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_REGEXP]
      prompt "Regular expressions from GLIBC" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_POSIX_REGEXP]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_REGEXP]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_POSIX_REGEXP]
     }
    }
   }
   if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11] {
    config KEMBTK_EGLIBC_OPTION_EGLIBC_BACKTRACE boolean {
     prompt "Functions for producing backtraces" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Functions for producing backtraces" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Functions for producing backtraces" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Functions for producing backtraces" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Functions for producing backtraces" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_BIG_MACROS boolean {
     prompt "Use extensive inline code" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Use extensive inline code" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "Use extensive inline code" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_BSD boolean {
     prompt "BSD-specific functions, and their compatibility stubs" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "BSD-specific functions, and their compatibility stubs" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "BSD-specific functions, and their compatibility stubs" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "BSD-specific functions, and their compatibility stubs" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "BSD-specific functions, and their compatibility stubs" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_CXX_TESTS boolean {
     prompt "Tests that link against the standard C++ library." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO && KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
     depends on [KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO]
     depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
     prompt "Tests that link against the standard C++ library." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO && KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
     depends on [KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO]
     depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
     prompt "Tests that link against the standard C++ library." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO && KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
     depends on [KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO]
     depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
     prompt "Tests that link against the standard C++ library." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO && KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
     depends on [KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO]
     depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
     prompt "Tests that link against the standard C++ library." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO && KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
     depends on [KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO]
     depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO && KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_CHARSETS boolean {
     prompt "iconv/gconv character set conversion libraries" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "iconv/gconv character set conversion libraries" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "iconv/gconv character set conversion libraries" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "iconv/gconv character set conversion libraries" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "iconv/gconv character set conversion libraries" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_DB_ALIASES boolean {
     prompt "Functions for accessing the mail aliases database" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Functions for accessing the mail aliases database" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "Functions for accessing the mail aliases database" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Functions for accessing the mail aliases database" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Functions for accessing the mail aliases database" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_ENVZ boolean {
     prompt "Functions for handling envz-style environment vectors." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Functions for handling envz-style environment vectors." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "Functions for handling envz-style environment vectors." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Functions for handling envz-style environment vectors." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Functions for handling envz-style environment vectors." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_FCVT boolean {
     prompt "Functions for converting floating-point numbers to strings" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Functions for converting floating-point numbers to strings" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "Functions for converting floating-point numbers to strings" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Functions for converting floating-point numbers to strings" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_FMTMSG boolean {
     prompt "Functions for formatting messages" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Functions for formatting messages" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "Functions for formatting messages" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Functions for formatting messages" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_FSTAB boolean {
     prompt "Access functions for 'fstab'" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Access functions for 'fstab'" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Access functions for 'fstab'" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Access functions for 'fstab'" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Access functions for 'fstab'" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_FTRAVERSE boolean {
     prompt "Functions for traversing file hierarchies" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Functions for traversing file hierarchies" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Functions for traversing file hierarchies" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Functions for traversing file hierarchies" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_INET boolean {
     prompt "Networking support" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Networking support" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Networking support" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Networking support" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Networking support" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     config KEMBTK_EGLIBC_OPTION_EGLIBC_SUNRPC boolean {
      prompt "Support for the Sun 'RPC' protocol." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for the Sun 'RPC' protocol." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for the Sun 'RPC' protocol." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for the Sun 'RPC' protocol." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for the Sun 'RPC' protocol." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
     }
     config KEMBTK_EGLIBC_OPTION_EGLIBC_NIS boolean {
      prompt "Support for NIS, NIS+, and the special 'compat' services." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for NIS, NIS+, and the special 'compat' services." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for NIS, NIS+, and the special 'compat' services." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for NIS, NIS+, and the special 'compat' services." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for NIS, NIS+, and the special 'compat' services." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
     }
     config KEMBTK_EGLIBC_OPTION_EGLIBC_ADVANCED_INET6 boolean {
      prompt "IPv6 Advanced Sockets API support (RFC3542)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "IPv6 Advanced Sockets API support (RFC3542)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "IPv6 Advanced Sockets API support (RFC3542)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "IPv6 Advanced Sockets API support (RFC3542)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "IPv6 Advanced Sockets API support (RFC3542)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
     }
     config KEMBTK_EGLIBC_OPTION_EGLIBC_RCMD boolean {
      prompt "Support for 'rcmd' and related library functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for 'rcmd' and related library functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for 'rcmd' and related library functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for 'rcmd' and related library functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for 'rcmd' and related library functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
     }
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM boolean {
     prompt "libm (math library)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "libm (math library)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "libm (math library)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "libm (math library)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "libm (math library)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALES boolean {
     prompt "Locale definitions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Locale definitions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "Locale definitions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Locale definitions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Locale definitions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_MEMUSAGE boolean {
     prompt "Memory profiling library" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Memory profiling library" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "Memory profiling library" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     config KEMBTK_EGLIBC_OPTION_EGLIBC_MEMUSAGE_DEFAULT_BUFFER_SIZE integer {
      prompt "Libmemusage library buffers size" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_EGLIBC_MEMUSAGE]
      default [512] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_EGLIBC_MEMUSAGE]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_MEMUSAGE]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_EGLIBC_MEMUSAGE]
     }
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH boolean {
     prompt "Name service switch (nsswitch) support" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Name service switch (nsswitch) support" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Name service switch (nsswitch) support" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Name service switch (nsswitch) support" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     config KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH_FIXED_CONFIG string {
      prompt "Alternate file for nsswitch.conf (see below help please)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      depends on [!KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      prompt "Alternate file for nsswitch.conf (see below help please)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      depends on [!KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      depends on [!KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      prompt "Alternate file for nsswitch.conf (see below help please)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      depends on [!KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      prompt "Alternate file for nsswitch.conf (see below help please)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      prompt "Alternate file for nsswitch.conf (see below help please)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      depends on [!KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
     }
     config KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH_FIXED_FUNCTIONS string {
      prompt "Alternate nss/fixed-nsswitch.functions file (see below help please)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      depends on [!KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      prompt "Alternate nss/fixed-nsswitch.functions file (see below help please)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      depends on [!KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      depends on [!KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      prompt "Alternate nss/fixed-nsswitch.functions file (see below help please)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      depends on [!KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      prompt "Alternate nss/fixed-nsswitch.functions file (see below help please)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      prompt "Alternate nss/fixed-nsswitch.functions file (see below help please)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      depends on [!KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
     }
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_SPAWN boolean {
     prompt "Support for POSIX posix_spawn functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Support for POSIX posix_spawn functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "Support for POSIX posix_spawn functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Support for POSIX posix_spawn functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Support for POSIX posix_spawn functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_STREAMS boolean {
     prompt "Support for accessing STREAMS." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Support for accessing STREAMS." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "Support for accessing STREAMS." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Support for accessing STREAMS." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Support for accessing STREAMS." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP boolean {
     prompt "Older access functions for 'utmp' login records" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Older access functions for 'utmp' login records" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "Older access functions for 'utmp' login records" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Older access functions for 'utmp' login records" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Older access functions for 'utmp' login records" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     config KEMBTK_EGLIBC_OPTION_EGLIBC_GETLOGIN boolean {
      prompt "The getlogin function" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      prompt "The getlogin function" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      prompt "The getlogin function" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      prompt "The getlogin function" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      prompt "The getlogin function" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
     }
     config KEMBTK_EGLIBC_OPTION_EGLIBC_UTMPX boolean {
      prompt "POSIX access functions for 'utmp' login records" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      prompt "POSIX access functions for 'utmp' login records" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      prompt "POSIX access functions for 'utmp' login records" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      prompt "POSIX access functions for 'utmp' login records" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      prompt "POSIX access functions for 'utmp' login records" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
     }
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_WORDEXP boolean {
     prompt "Shell-style word expansion" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Shell-style word expansion" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Shell-style word expansion" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Shell-style word expansion" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Shell-style word expansion" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
    }
    config KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR boolean {
     prompt "ISO C library wide character functions, excluding I/O" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "ISO C library wide character functions, excluding I/O" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "ISO C library wide character functions, excluding I/O" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "ISO C library wide character functions, excluding I/O" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "ISO C library wide character functions, excluding I/O" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     config KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO boolean {
      prompt "Input and output functions for wide characters" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      prompt "Input and output functions for wide characters" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      prompt "Input and output functions for wide characters" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      prompt "Input and output functions for wide characters" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      prompt "Input and output functions for wide characters" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
     }
     config KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE boolean {
      prompt "Locale functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      prompt "Locale functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      prompt "Locale functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      prompt "Locale functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      prompt "Locale functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      config KEMBTK_EGLIBC_OPTION_EGLIBC_CATGETS boolean {
       prompt "Functions for accessing message catalogs" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE]
       depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE]
       prompt "Functions for accessing message catalogs" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE]
       depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE]
       prompt "Functions for accessing message catalogs" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE]
       depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE]
       prompt "Functions for accessing message catalogs" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE]
       depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE]
       prompt "Functions for accessing message catalogs" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE]
       depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE]
       inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE]
      }
     }
    }
    config KEMBTK_EGLIBC_OPTION_POSIX_REGEXP boolean {
     prompt "Regular expressions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Regular expressions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Regular expressions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Regular expressions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Regular expressions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     config KEMBTK_EGLIBC_OPTION_POSIX_REGEXP_GLIBC boolean {
      prompt "Regular expressions from GLIBC" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_POSIX_REGEXP]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_REGEXP]
      prompt "Regular expressions from GLIBC" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_POSIX_REGEXP]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_REGEXP]
      prompt "Regular expressions from GLIBC" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_POSIX_REGEXP]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_REGEXP]
      prompt "Regular expressions from GLIBC" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_POSIX_REGEXP]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_REGEXP]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_POSIX_REGEXP]
     }
    }
   }
   if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10] {
    config KEMBTK_EGLIBC_OPTION_EGLIBC_BACKTRACE boolean {
     prompt "Functions for producing backtraces" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Functions for producing backtraces" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Functions for producing backtraces" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Functions for producing backtraces" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Functions for producing backtraces" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_BSD boolean {
     prompt "BSD-specific functions, and their compatibility stubs" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "BSD-specific functions, and their compatibility stubs" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "BSD-specific functions, and their compatibility stubs" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "BSD-specific functions, and their compatibility stubs" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "BSD-specific functions, and their compatibility stubs" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_CXX_TESTS boolean {
     prompt "Tests that link against the standard C++ library." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO && KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
     depends on [KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO]
     depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
     prompt "Tests that link against the standard C++ library." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO && KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
     depends on [KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO]
     depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
     prompt "Tests that link against the standard C++ library." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO && KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
     depends on [KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO]
     depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
     prompt "Tests that link against the standard C++ library." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO && KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
     depends on [KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO]
     depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
     prompt "Tests that link against the standard C++ library." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO && KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
     depends on [KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO]
     depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO && KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM boolean {
     prompt "libm (math library)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "libm (math library)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "libm (math library)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "libm (math library)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "libm (math library)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_CHARSETS boolean {
     prompt "iconv/gconv character set conversion libraries" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "iconv/gconv character set conversion libraries" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "iconv/gconv character set conversion libraries" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "iconv/gconv character set conversion libraries" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "iconv/gconv character set conversion libraries" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_DB_ALIASES boolean {
     prompt "Functions for accessing the mail aliases database" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Functions for accessing the mail aliases database" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "Functions for accessing the mail aliases database" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Functions for accessing the mail aliases database" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Functions for accessing the mail aliases database" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_ENVZ boolean {
     prompt "Functions for handling envz-style environment vectors." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Functions for handling envz-style environment vectors." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "Functions for handling envz-style environment vectors." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Functions for handling envz-style environment vectors." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Functions for handling envz-style environment vectors." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_FCVT boolean {
     prompt "Functions for converting floating-point numbers to strings" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Functions for converting floating-point numbers to strings" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "Functions for converting floating-point numbers to strings" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Functions for converting floating-point numbers to strings" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_FMTMSG boolean {
     prompt "Functions for formatting messages" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Functions for formatting messages" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "Functions for formatting messages" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Functions for formatting messages" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_FSTAB boolean {
     prompt "Access functions for 'fstab'" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Access functions for 'fstab'" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Access functions for 'fstab'" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Access functions for 'fstab'" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Access functions for 'fstab'" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_FTRAVERSE boolean {
     prompt "Functions for traversing file hierarchies" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Functions for traversing file hierarchies" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Functions for traversing file hierarchies" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Functions for traversing file hierarchies" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_INET boolean {
     prompt "Networking support" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Networking support" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Networking support" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Networking support" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Networking support" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     config KEMBTK_EGLIBC_OPTION_EGLIBC_ADVANCED_INET6 boolean {
      prompt "IPv6 Advanced Sockets API support (RFC3542)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "IPv6 Advanced Sockets API support (RFC3542)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "IPv6 Advanced Sockets API support (RFC3542)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "IPv6 Advanced Sockets API support (RFC3542)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "IPv6 Advanced Sockets API support (RFC3542)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
     }
     config KEMBTK_EGLIBC_OPTION_EGLIBC_SUNRPC boolean {
      prompt "Support for the Sun 'RPC' protocol." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for the Sun 'RPC' protocol." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for the Sun 'RPC' protocol." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for the Sun 'RPC' protocol." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for the Sun 'RPC' protocol." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
     }
     config KEMBTK_EGLIBC_OPTION_EGLIBC_NIS boolean {
      prompt "Support for NIS, NIS+, and the special 'compat' services." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for NIS, NIS+, and the special 'compat' services." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for NIS, NIS+, and the special 'compat' services." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for NIS, NIS+, and the special 'compat' services." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for NIS, NIS+, and the special 'compat' services." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
     }
     config KEMBTK_EGLIBC_OPTION_EGLIBC_RCMD boolean {
      prompt "Support for 'rcmd' and related library functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for 'rcmd' and related library functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for 'rcmd' and related library functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for 'rcmd' and related library functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for 'rcmd' and related library functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
     }
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALES boolean {
     prompt "Locale definitions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Locale definitions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "Locale definitions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Locale definitions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Locale definitions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH boolean {
     prompt "Name service switch (nsswitch) support" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Name service switch (nsswitch) support" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Name service switch (nsswitch) support" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Name service switch (nsswitch) support" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     config KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH_FIXED_CONFIG string {
      prompt "Alternate file for nsswitch.conf (see below help please)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      depends on [!KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      prompt "Alternate file for nsswitch.conf (see below help please)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      depends on [!KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      depends on [!KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      prompt "Alternate file for nsswitch.conf (see below help please)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      depends on [!KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      prompt "Alternate file for nsswitch.conf (see below help please)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      prompt "Alternate file for nsswitch.conf (see below help please)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      depends on [!KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
     }
     config KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH_FIXED_FUNCTIONS string {
      prompt "Alternate nss/fixed-nsswitch.functions file (see below help please)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      depends on [!KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      prompt "Alternate nss/fixed-nsswitch.functions file (see below help please)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      depends on [!KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      depends on [!KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      prompt "Alternate nss/fixed-nsswitch.functions file (see below help please)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      depends on [!KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      prompt "Alternate nss/fixed-nsswitch.functions file (see below help please)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      prompt "Alternate nss/fixed-nsswitch.functions file (see below help please)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      depends on [!KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
     }
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_SPAWN boolean {
     prompt "Support for POSIX posix_spawn functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Support for POSIX posix_spawn functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "Support for POSIX posix_spawn functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Support for POSIX posix_spawn functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Support for POSIX posix_spawn functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_STREAMS boolean {
     prompt "Support for accessing STREAMS." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Support for accessing STREAMS." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "Support for accessing STREAMS." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Support for accessing STREAMS." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Support for accessing STREAMS." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP boolean {
     prompt "Older access functions for 'utmp' login records" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Older access functions for 'utmp' login records" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "Older access functions for 'utmp' login records" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Older access functions for 'utmp' login records" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Older access functions for 'utmp' login records" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     config KEMBTK_EGLIBC_OPTION_EGLIBC_GETLOGIN boolean {
      prompt "The getlogin function" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      prompt "The getlogin function" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      prompt "The getlogin function" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      prompt "The getlogin function" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      prompt "The getlogin function" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
     }
     config KEMBTK_EGLIBC_OPTION_EGLIBC_UTMPX boolean {
      prompt "POSIX access functions for 'utmp' login records" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      prompt "POSIX access functions for 'utmp' login records" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      prompt "POSIX access functions for 'utmp' login records" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      prompt "POSIX access functions for 'utmp' login records" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      prompt "POSIX access functions for 'utmp' login records" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
     }
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_WORDEXP boolean {
     prompt "Shell-style word expansion" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Shell-style word expansion" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Shell-style word expansion" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Shell-style word expansion" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Shell-style word expansion" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
    }
    config KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR boolean {
     prompt "ISO C library wide character functions, excluding I/O" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "ISO C library wide character functions, excluding I/O" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "ISO C library wide character functions, excluding I/O" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "ISO C library wide character functions, excluding I/O" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "ISO C library wide character functions, excluding I/O" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     config KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE boolean {
      prompt "Locale functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      prompt "Locale functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      prompt "Locale functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      prompt "Locale functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      prompt "Locale functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      config KEMBTK_EGLIBC_OPTION_EGLIBC_CATGETS boolean {
       prompt "Functions for accessing message catalogs" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE]
       depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE]
       prompt "Functions for accessing message catalogs" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE]
       depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE]
       prompt "Functions for accessing message catalogs" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE]
       depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE]
       prompt "Functions for accessing message catalogs" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE]
       depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE]
       prompt "Functions for accessing message catalogs" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE]
       depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE]
       inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE]
      }
     }
     config KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO boolean {
      prompt "Input and output functions for wide characters" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      prompt "Input and output functions for wide characters" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      prompt "Input and output functions for wide characters" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      prompt "Input and output functions for wide characters" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      prompt "Input and output functions for wide characters" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
     }
    }
    config KEMBTK_EGLIBC_OPTION_POSIX_REGEXP boolean {
     prompt "Regular expressions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Regular expressions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Regular expressions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Regular expressions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Regular expressions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     config KEMBTK_EGLIBC_OPTION_POSIX_REGEXP_GLIBC boolean {
      prompt "Regular expressions from GLIBC" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_POSIX_REGEXP]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_REGEXP]
      prompt "Regular expressions from GLIBC" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_POSIX_REGEXP]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_REGEXP]
      prompt "Regular expressions from GLIBC" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_POSIX_REGEXP]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_REGEXP]
      prompt "Regular expressions from GLIBC" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_POSIX_REGEXP]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_REGEXP]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_POSIX_REGEXP]
     }
    }
   }
   if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9] {
    config KEMBTK_EGLIBC_OPTION_EGLIBC_BACKTRACE boolean {
     prompt "Functions for producing backtraces" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Functions for producing backtraces" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Functions for producing backtraces" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Functions for producing backtraces" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Functions for producing backtraces" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_BSD boolean {
     prompt "BSD-specific functions, and their compatibility stubs" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "BSD-specific functions, and their compatibility stubs" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "BSD-specific functions, and their compatibility stubs" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "BSD-specific functions, and their compatibility stubs" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "BSD-specific functions, and their compatibility stubs" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_CXX_TESTS boolean {
     prompt "Tests that link against the standard C++ library." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO && KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
     depends on [KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO]
     depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
     prompt "Tests that link against the standard C++ library." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO && KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
     depends on [KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO]
     depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
     prompt "Tests that link against the standard C++ library." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO && KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
     depends on [KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO]
     depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
     prompt "Tests that link against the standard C++ library." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO && KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
     depends on [KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO]
     depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
     prompt "Tests that link against the standard C++ library." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO && KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
     depends on [KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO]
     depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO && KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_CHARSETS boolean {
     prompt "iconv/gconv character set conversion libraries" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "iconv/gconv character set conversion libraries" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "iconv/gconv character set conversion libraries" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "iconv/gconv character set conversion libraries" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "iconv/gconv character set conversion libraries" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_DB_ALIASES boolean {
     prompt "Functions for accessing the mail aliases database" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Functions for accessing the mail aliases database" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "Functions for accessing the mail aliases database" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Functions for accessing the mail aliases database" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Functions for accessing the mail aliases database" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_ENVZ boolean {
     prompt "Functions for handling envz-style environment vectors." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Functions for handling envz-style environment vectors." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "Functions for handling envz-style environment vectors." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Functions for handling envz-style environment vectors." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Functions for handling envz-style environment vectors." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_FSTAB boolean {
     prompt "Access functions for 'fstab'" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Access functions for 'fstab'" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Access functions for 'fstab'" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Access functions for 'fstab'" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Access functions for 'fstab'" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_INET boolean {
     prompt "Networking support" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Networking support" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Networking support" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Networking support" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Networking support" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     config KEMBTK_EGLIBC_OPTION_EGLIBC_ADVANCED_INET6 boolean {
      prompt "IPv6 Advanced Sockets API support (RFC3542)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "IPv6 Advanced Sockets API support (RFC3542)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "IPv6 Advanced Sockets API support (RFC3542)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "IPv6 Advanced Sockets API support (RFC3542)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "IPv6 Advanced Sockets API support (RFC3542)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
     }
     config KEMBTK_EGLIBC_OPTION_EGLIBC_RCMD boolean {
      prompt "Support for 'rcmd' and related library functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for 'rcmd' and related library functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for 'rcmd' and related library functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for 'rcmd' and related library functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for 'rcmd' and related library functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
     }
     config KEMBTK_EGLIBC_OPTION_EGLIBC_SUNRPC boolean {
      prompt "Support for the Sun 'RPC' protocol." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for the Sun 'RPC' protocol." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for the Sun 'RPC' protocol." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for the Sun 'RPC' protocol." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for the Sun 'RPC' protocol." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
     }
     config KEMBTK_EGLIBC_OPTION_EGLIBC_NIS boolean {
      prompt "Support for NIS, NIS+, and the special 'compat' services." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for NIS, NIS+, and the special 'compat' services." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for NIS, NIS+, and the special 'compat' services." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for NIS, NIS+, and the special 'compat' services." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for NIS, NIS+, and the special 'compat' services." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
     }
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM boolean {
     prompt "libm (math library)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "libm (math library)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "libm (math library)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "libm (math library)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "libm (math library)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALES boolean {
     prompt "Locale definitions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Locale definitions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "Locale definitions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Locale definitions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Locale definitions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH boolean {
     prompt "Name service switch (nsswitch) support" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Name service switch (nsswitch) support" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Name service switch (nsswitch) support" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Name service switch (nsswitch) support" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     config KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH_FIXED_CONFIG string {
      prompt "Alternate file for nsswitch.conf (see below help please)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      depends on [!KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      prompt "Alternate file for nsswitch.conf (see below help please)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      depends on [!KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      depends on [!KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      prompt "Alternate file for nsswitch.conf (see below help please)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      depends on [!KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      prompt "Alternate file for nsswitch.conf (see below help please)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      prompt "Alternate file for nsswitch.conf (see below help please)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      depends on [!KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
     }
     config KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH_FIXED_FUNCTIONS string {
      prompt "Alternate nss/fixed-nsswitch.functions file (see below help please)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      depends on [!KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      prompt "Alternate nss/fixed-nsswitch.functions file (see below help please)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      depends on [!KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      depends on [!KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      prompt "Alternate nss/fixed-nsswitch.functions file (see below help please)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      depends on [!KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      prompt "Alternate nss/fixed-nsswitch.functions file (see below help please)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      prompt "Alternate nss/fixed-nsswitch.functions file (see below help please)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      depends on [!KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
     }
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_SPAWN boolean {
     prompt "Support for POSIX posix_spawn functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Support for POSIX posix_spawn functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "Support for POSIX posix_spawn functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Support for POSIX posix_spawn functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Support for POSIX posix_spawn functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_STREAMS boolean {
     prompt "Support for accessing STREAMS." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Support for accessing STREAMS." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "Support for accessing STREAMS." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Support for accessing STREAMS." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Support for accessing STREAMS." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP boolean {
     prompt "Older access functions for 'utmp' login records" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Older access functions for 'utmp' login records" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "Older access functions for 'utmp' login records" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Older access functions for 'utmp' login records" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Older access functions for 'utmp' login records" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     config KEMBTK_EGLIBC_OPTION_EGLIBC_GETLOGIN boolean {
      prompt "The getlogin function" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      prompt "The getlogin function" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      prompt "The getlogin function" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      prompt "The getlogin function" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      prompt "The getlogin function" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
     }
     config KEMBTK_EGLIBC_OPTION_EGLIBC_UTMPX boolean {
      prompt "POSIX access functions for 'utmp' login records" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      prompt "POSIX access functions for 'utmp' login records" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      prompt "POSIX access functions for 'utmp' login records" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      prompt "POSIX access functions for 'utmp' login records" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      prompt "POSIX access functions for 'utmp' login records" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
     }
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_WORDEXP boolean {
     prompt "Shell-style word expansion" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Shell-style word expansion" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Shell-style word expansion" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Shell-style word expansion" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Shell-style word expansion" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
    }
    config KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR boolean {
     prompt "ISO C library wide character functions, excluding I/O" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "ISO C library wide character functions, excluding I/O" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "ISO C library wide character functions, excluding I/O" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "ISO C library wide character functions, excluding I/O" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "ISO C library wide character functions, excluding I/O" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     config KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE boolean {
      prompt "Locale functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      prompt "Locale functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      prompt "Locale functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      prompt "Locale functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      prompt "Locale functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      config KEMBTK_EGLIBC_OPTION_EGLIBC_CATGETS boolean {
       prompt "Functions for accessing message catalogs" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE]
       depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE]
       prompt "Functions for accessing message catalogs" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE]
       depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE]
       prompt "Functions for accessing message catalogs" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE]
       depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE]
       prompt "Functions for accessing message catalogs" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE]
       depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE]
       prompt "Functions for accessing message catalogs" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE]
       depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE]
       inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE]
      }
     }
     config KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO boolean {
      prompt "Input and output functions for wide characters" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      prompt "Input and output functions for wide characters" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      prompt "Input and output functions for wide characters" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      prompt "Input and output functions for wide characters" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      prompt "Input and output functions for wide characters" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
     }
    }
    config KEMBTK_EGLIBC_OPTION_POSIX_REGEXP boolean {
     prompt "Regular expressions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Regular expressions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Regular expressions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Regular expressions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Regular expressions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
    }
   }
   if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK] {
    config KEMBTK_EGLIBC_OPTION_EGLIBC_BACKTRACE boolean {
     prompt "Functions for producing backtraces" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Functions for producing backtraces" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Functions for producing backtraces" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Functions for producing backtraces" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Functions for producing backtraces" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_BIG_MACROS boolean {
     prompt "Use extensive inline code" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Use extensive inline code" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "Use extensive inline code" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_BSD boolean {
     prompt "BSD-specific functions, and their compatibility stubs" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "BSD-specific functions, and their compatibility stubs" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "BSD-specific functions, and their compatibility stubs" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "BSD-specific functions, and their compatibility stubs" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "BSD-specific functions, and their compatibility stubs" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_CXX_TESTS boolean {
     prompt "Tests that link against the standard C++ library." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO && KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
     depends on [KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO]
     depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
     prompt "Tests that link against the standard C++ library." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO && KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
     depends on [KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO]
     depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
     prompt "Tests that link against the standard C++ library." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO && KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
     depends on [KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO]
     depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
     prompt "Tests that link against the standard C++ library." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO && KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
     depends on [KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO]
     depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
     prompt "Tests that link against the standard C++ library." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO && KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
     depends on [KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO]
     depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO && KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_CHARSETS boolean {
     prompt "iconv/gconv character set conversion libraries" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "iconv/gconv character set conversion libraries" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "iconv/gconv character set conversion libraries" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "iconv/gconv character set conversion libraries" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "iconv/gconv character set conversion libraries" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_CRYPT boolean {
     prompt "Encryption library" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Encryption library" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     config KEMBTK_EGLIBC_OPTION_EGLIBC_CRYPT_UFC boolean {
      prompt "Ultra fast `crypt' implementation" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_CRYPT]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_CRYPT]
      prompt "Ultra fast `crypt' implementation" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_CRYPT]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_CRYPT]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_CRYPT]
     }
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_DB_ALIASES boolean {
     prompt "Functions for accessing the mail aliases database" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Functions for accessing the mail aliases database" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "Functions for accessing the mail aliases database" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Functions for accessing the mail aliases database" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Functions for accessing the mail aliases database" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_ENVZ boolean {
     prompt "Functions for handling envz-style environment vectors." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Functions for handling envz-style environment vectors." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "Functions for handling envz-style environment vectors." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Functions for handling envz-style environment vectors." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Functions for handling envz-style environment vectors." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_FCVT boolean {
     prompt "Functions for converting floating-point numbers to strings" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Functions for converting floating-point numbers to strings" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "Functions for converting floating-point numbers to strings" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Functions for converting floating-point numbers to strings" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_FMTMSG boolean {
     prompt "Functions for formatting messages" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Functions for formatting messages" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "Functions for formatting messages" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Functions for formatting messages" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_FSTAB boolean {
     prompt "Access functions for 'fstab'" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Access functions for 'fstab'" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Access functions for 'fstab'" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Access functions for 'fstab'" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Access functions for 'fstab'" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_FTRAVERSE boolean {
     prompt "Functions for traversing file hierarchies" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Functions for traversing file hierarchies" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Functions for traversing file hierarchies" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Functions for traversing file hierarchies" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_INET boolean {
     prompt "Networking support" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Networking support" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Networking support" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Networking support" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Networking support" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     config KEMBTK_EGLIBC_OPTION_EGLIBC_SUNRPC boolean {
      prompt "Support for the Sun 'RPC' protocol." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for the Sun 'RPC' protocol." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for the Sun 'RPC' protocol." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for the Sun 'RPC' protocol." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for the Sun 'RPC' protocol." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
     }
     config KEMBTK_EGLIBC_OPTION_EGLIBC_NIS boolean {
      prompt "Support for NIS, NIS+, and the special 'compat' services." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for NIS, NIS+, and the special 'compat' services." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for NIS, NIS+, and the special 'compat' services." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for NIS, NIS+, and the special 'compat' services." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for NIS, NIS+, and the special 'compat' services." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
     }
     config KEMBTK_EGLIBC_OPTION_EGLIBC_ADVANCED_INET6 boolean {
      prompt "IPv6 Advanced Sockets API support (RFC3542)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "IPv6 Advanced Sockets API support (RFC3542)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "IPv6 Advanced Sockets API support (RFC3542)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "IPv6 Advanced Sockets API support (RFC3542)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "IPv6 Advanced Sockets API support (RFC3542)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
     }
     config KEMBTK_EGLIBC_OPTION_EGLIBC_INET_ANL boolean {
      prompt "Asynchronous name lookup" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Asynchronous name lookup" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
     }
     config KEMBTK_EGLIBC_OPTION_EGLIBC_RCMD boolean {
      prompt "Support for 'rcmd' and related library functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for 'rcmd' and related library functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for 'rcmd' and related library functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for 'rcmd' and related library functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      prompt "Support for 'rcmd' and related library functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_INET]
     }
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM boolean {
     prompt "libm (math library)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "libm (math library)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "libm (math library)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "libm (math library)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "libm (math library)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     config KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM_BIG boolean {
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
      prompt "Math library with double precision functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
      default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
      prompt "Math library with double precision functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
      default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM]
     }
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALES boolean {
     prompt "Locale definitions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Locale definitions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "Locale definitions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Locale definitions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Locale definitions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_MEMUSAGE boolean {
     prompt "Memory profiling library" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Memory profiling library" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "Memory profiling library" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     config EMBTK_EGLIBC_OPTION_EGLIBC_MEMUSAGE_DEFAULT_BUFFER_SIZE integer {
      prompt "Libmemusage library buffers size" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_MEMUSAGE]
      default [512] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_MEMUSAGE]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_MEMUSAGE]
      prompt "Libmemusage library buffers size" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_MEMUSAGE]
      default [512] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_MEMUSAGE]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_MEMUSAGE]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_MEMUSAGE]
     }
    }
    config EMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH boolean {
     prompt "Name service switch (nsswitch) support" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH_FIXED_CONFIG string {
     prompt "Alternate file for nsswitch.conf (see below help please)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
     depends on [!KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
     prompt "Alternate file for nsswitch.conf (see below help please)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
     depends on [!KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
     depends on [!KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
     prompt "Alternate file for nsswitch.conf (see below help please)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
     depends on [!KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
     prompt "Alternate file for nsswitch.conf (see below help please)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
     prompt "Alternate file for nsswitch.conf (see below help please)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
     depends on [!KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH_FIXED_FUNCTIONS string {
     prompt "Alternate nss/fixed-nsswitch.functions file (see below help please)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
     depends on [!KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
     prompt "Alternate nss/fixed-nsswitch.functions file (see below help please)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
     depends on [!KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
     depends on [!KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
     prompt "Alternate nss/fixed-nsswitch.functions file (see below help please)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
     depends on [!KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
     prompt "Alternate nss/fixed-nsswitch.functions file (see below help please)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
     prompt "Alternate nss/fixed-nsswitch.functions file (see below help please)" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
     depends on [!KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && !KEMBTK_EGLIBC_OPTION_EGLIBC_NSSWITCH]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_RTLD_DEBUG boolean {
     prompt "Runtime linker debug print outs" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Runtime linker debug print outs" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_SPAWN boolean {
     prompt "Support for POSIX posix_spawn functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Support for POSIX posix_spawn functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "Support for POSIX posix_spawn functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Support for POSIX posix_spawn functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Support for POSIX posix_spawn functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_STREAMS boolean {
     prompt "Support for accessing STREAMS." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Support for accessing STREAMS." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "Support for accessing STREAMS." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Support for accessing STREAMS." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Support for accessing STREAMS." if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP boolean {
     prompt "Older access functions for 'utmp' login records" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Older access functions for 'utmp' login records" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "Older access functions for 'utmp' login records" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Older access functions for 'utmp' login records" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Older access functions for 'utmp' login records" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     config KEMBTK_EGLIBC_OPTION_EGLIBC_GETLOGIN boolean {
      prompt "The getlogin function" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      prompt "The getlogin function" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      prompt "The getlogin function" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      prompt "The getlogin function" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      prompt "The getlogin function" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
     }
     config KEMBTK_EGLIBC_OPTION_EGLIBC_UTMPX boolean {
      prompt "POSIX access functions for 'utmp' login records" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      prompt "POSIX access functions for 'utmp' login records" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      prompt "POSIX access functions for 'utmp' login records" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      prompt "POSIX access functions for 'utmp' login records" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      prompt "POSIX access functions for 'utmp' login records" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_UTMP]
     }
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_IDN boolean {
     prompt "International domain names support" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "International domain names support" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
    }
    config KEMBTK_EGLIBC_OPTION_EGLIBC_WORDEXP boolean {
     prompt "Shell-style word expansion" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Shell-style word expansion" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Shell-style word expansion" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Shell-style word expansion" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Shell-style word expansion" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
    }
    config KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR boolean {
     prompt "ISO C library wide character functions, excluding I/O" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "ISO C library wide character functions, excluding I/O" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     prompt "ISO C library wide character functions, excluding I/O" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "ISO C library wide character functions, excluding I/O" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "ISO C library wide character functions, excluding I/O" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     config KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO boolean {
      prompt "Input and output functions for wide characters" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      prompt "Input and output functions for wide characters" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      prompt "Input and output functions for wide characters" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      prompt "Input and output functions for wide characters" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      prompt "Input and output functions for wide characters" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
     }
     config KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE boolean {
      prompt "Locale functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      prompt "Locale functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      prompt "Locale functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      prompt "Locale functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      prompt "Locale functions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR]
      config KEMBTK_EGLIBC_OPTION_EGLIBC_CATGETS boolean {
       prompt "Functions for accessing message catalogs" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE]
       depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE]
       prompt "Functions for accessing message catalogs" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE]
       depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE]
       prompt "Functions for accessing message catalogs" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE]
       depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE]
       prompt "Functions for accessing message catalogs" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9 && KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE]
       depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE]
       prompt "Functions for accessing message catalogs" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE]
       depends on [KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE]
       inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE]
      }
     }
    }
    config KEMBTK_EGLIBC_OPTION_POSIX_REGEXP boolean {
     prompt "Regular expressions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12]
     prompt "Regular expressions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     prompt "Regular expressions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Regular expressions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_9]
     prompt "Regular expressions" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     default [y] if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK]
     config KEMBTK_EGLIBC_OPTION_POSIX_REGEXP_GLIBC boolean {
      prompt "Regular expressions from GLIBC" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_12 && KEMBTK_EGLIBC_OPTION_POSIX_REGEXP]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_REGEXP]
      prompt "Regular expressions from GLIBC" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_11 && KEMBTK_EGLIBC_OPTION_POSIX_REGEXP]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_REGEXP]
      prompt "Regular expressions from GLIBC" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_2_10 && KEMBTK_EGLIBC_OPTION_POSIX_REGEXP]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_REGEXP]
      prompt "Regular expressions from GLIBC" if [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_POSIX_REGEXP]
      depends on [KEMBTK_EGLIBC_OPTION_POSIX_REGEXP]
      inherited [EMBTK_CLIB_EGLIBC && EMBTK_EGLIBC_VERSION_TRUNK && KEMBTK_EGLIBC_OPTION_POSIX_REGEXP]
     }
    }
   }
  }
  if [EMBTK_CLIB_UCLIBC] {
   choice boolean {
    prompt "uClibc version to use" if [EMBTK_CLIB_UCLIBC]
    config EMBTK_UCLIBC_VERSION_0_9_30_1 boolean {
     prompt "uClibc-0.9.30.1" if [<choice>]
     select EMBTK_UCLIBC_VERSION_SERIES_0_9_30_X if [<choice>]
     select EMBTK_UCLIBC_NEED_PATCH if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_UCLIBC_VERSION_0_9_30 boolean {
     prompt "uClibc-0.9.30" if [<choice> && EMBTK_OLDPACKAGES]
     select EMBTK_UCLIBC_VERSION_SERIES_0_9_30_X if [<choice> && EMBTK_OLDPACKAGES]
     select EMBTK_UCLIBC_NEED_PATCH if [<choice> && EMBTK_OLDPACKAGES]
     depends on [EMBTK_OLDPACKAGES]
     inherited [<choice> && EMBTK_OLDPACKAGES]
    }
    config EMBTK_UCLIBC_VERSION_GIT boolean {
     prompt "Use a branch of uClibc git repository" if [<choice>]
     select EMBTK_UCLIBC_VERSION_SERIES_1_0_X if [<choice>]
     inherited [<choice>]
    }
   }
   config EMBTK_UCLIBC_VERSION_STRING string {
    default ["0.9.30.1"] if [EMBTK_CLIB_UCLIBC && EMBTK_UCLIBC_VERSION_0_9_30_1]
    default ["0.9.30"] if [EMBTK_CLIB_UCLIBC && EMBTK_UCLIBC_VERSION_0_9_30]
    default ["git"] if [EMBTK_CLIB_UCLIBC && EMBTK_UCLIBC_VERSION_GIT]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config EMBTK_UCLIBC_VERSION_SERIES_1_0_X boolean {
    select EMBTK_UCLIBC_VERSION_SERIES_0_9_31_X if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config EMBTK_UCLIBC_VERSION_SERIES_0_9_31_X boolean {
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config EMBTK_UCLIBC_VERSION_SERIES_0_9_30_X boolean {
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config EMBTK_UCLIBC_GIT_BRANCH string {
    prompt "Branch to use" if [EMBTK_CLIB_UCLIBC && EMBTK_UCLIBC_VERSION_GIT]
    default ["master"] if [EMBTK_CLIB_UCLIBC && EMBTK_UCLIBC_VERSION_GIT]
    depends on [EMBTK_UCLIBC_VERSION_GIT]
    inherited [EMBTK_CLIB_UCLIBC && EMBTK_UCLIBC_VERSION_GIT]
   }
   config EMBTK_UCLIBC_GIT_REVISION string {
    prompt "Revision to checkout" if [EMBTK_CLIB_UCLIBC && EMBTK_UCLIBC_VERSION_GIT]
    default ["HEAD"] if [EMBTK_CLIB_UCLIBC && EMBTK_UCLIBC_VERSION_GIT]
    depends on [EMBTK_UCLIBC_VERSION_GIT]
    inherited [EMBTK_CLIB_UCLIBC && EMBTK_UCLIBC_VERSION_GIT]
   }
   config EMBTK_UCLIBC_NEED_PATCH boolean {
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_TARGET_alpha boolean {
    default [n] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_TARGET_arm boolean {
    default [y] if [EMBTK_CLIB_UCLIBC && EMBTK_ARCH_ARM]
    default [n] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_TARGET_avr32 boolean {
    default [n] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_TARGET_bfin boolean {
    default [n] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_TARGET_cris boolean {
    default [n] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_TARGET_e1 boolean {
    default [n] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_TARGET_frv boolean {
    default [n] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_TARGET_h8300 boolean {
    default [n] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_TARGET_hppa boolean {
    default [n] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_TARGET_i386 boolean {
    default [n] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_TARGET_i960 boolean {
    default [n] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_TARGET_ia64 boolean {
    default [n] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_TARGET_m68k boolean {
    default [n] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_TARGET_microblaze boolean {
    default [n] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_TARGET_mips boolean {
    default [y] if [EMBTK_CLIB_UCLIBC && EMBTK_ARCH_MIPS]
    default [n] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_TARGET_nios boolean {
    default [n] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_TARGET_nios2 boolean {
    default [n] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_TARGET_powerpc boolean {
    default [n] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_TARGET_sh boolean {
    default [n] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_TARGET_sh64 boolean {
    default [n] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_TARGET_sparc boolean {
    default [n] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_TARGET_v850 boolean {
    default [n] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_TARGET_vax boolean {
    default [n] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_TARGET_x86_64 boolean {
    default [n] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_TARGET_xtensa boolean {
    default [n] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm] {
    config KEMBTK_UCLIBC_CONFIG_GENERIC_ARM boolean {
     default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm && (EMBTK_ARCH_ARM_FAMILY_STRONGARM_SA || EMBTK_ARCH_ARM_FAMILY_STRONGARM_SA-1110 || EMBTK_ARCH_ARM_FAMILY_ARM8_ARM810 || EMBTK_ARCH_ARM_FAMILY_ARM11_MPCORE || EMBTK_ARCH_ARM_FAMILY_CORTEX_CORTEX-A8 || EMBTK_ARCH_ARM_FAMILY_CORTEX_CORTEX-A9 || EMBTK_ARCH_ARM_FAMILY_CORTEX_CORTEX-R4 || EMBTK_ARCH_ARM_FAMILY_CORTEX_CORTEX-R4F)]
     default [n] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
    }
    config KEMBTK_UCLIBC_CONFIG_ARM610 boolean {
     select KEMBTK_UCLIBC_ARCH_HAS_MMU if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
     default [n] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
    }
    config KEMBTK_UCLIBC_TARGET_ARCH string {
     default ["arm"] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
     default ["mips"] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_mips]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
    }
    config KEMBTK_UCLIBC_FORCE_OPTIONS_FOR_ARCH boolean {
     default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
     select KEMBTK_UCLIBC_ARCH_ANY_ENDIAN if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
     default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_mips]
     select KEMBTK_UCLIBC_ARCH_ANY_ENDIAN if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_mips]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
    }
    config KEMBTK_UCLIBC_CONFIG_ARM_EABI boolean {
     default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
    }
    config KEMBTK_UCLIBC_CONFIG_ARM_OABI boolean {
     default [n] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
    }
    config KEMBTK_UCLIBC_USE_BX boolean {
     prompt "Use BX in function return" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm && !KEMBTK_UCLIBC_CONFIG_GENERIC_ARM && !KEMBTK_UCLIBC_CONFIG_ARM610 && !KEMBTK_UCLIBC_CONFIG_ARM710]
     default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm && !KEMBTK_UCLIBC_CONFIG_GENERIC_ARM && !KEMBTK_UCLIBC_CONFIG_ARM610 && !KEMBTK_UCLIBC_CONFIG_ARM710]
     depends on [!KEMBTK_UCLIBC_CONFIG_GENERIC_ARM && !KEMBTK_UCLIBC_CONFIG_ARM610 && !KEMBTK_UCLIBC_CONFIG_ARM710]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm && !KEMBTK_UCLIBC_CONFIG_GENERIC_ARM && !KEMBTK_UCLIBC_CONFIG_ARM610 && !KEMBTK_UCLIBC_CONFIG_ARM710]
    }
    config KEMBTK_UCLIBC_CONFIG_ARM710 boolean {
     default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm && EMBTK_ARCH_ARM_FAMILY_ARM7TDMI_ARM710T]
     select KEMBTK_UCLIBC_ARCH_HAS_MMU if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
     default [n] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
    }
    config KEMBTK_UCLIBC_CONFIG_ARM7TDMI boolean {
     default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm && (EMBTK_ARCH_ARM_FAMILY_ARM7TDMI_ARM7TDMI || EMBTK_ARCH_ARM_FAMILY_ARM7TDMI_ARM7TDMI-S || EMBTK_ARCH_ARM_FAMILY_ARM7TDMI_ARM740T)]
     select KEMBTK_UCLIBC_ARCH_HAS_NO_MMU if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
     default [n] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
    }
    config KEMBTK_UCLIBC_CONFIG_ARM720T boolean {
     default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm && EMBTK_ARCH_ARM_FAMILY_ARM7TDMI_ARM720T]
     select KEMBTK_UCLIBC_ARCH_HAS_MMU if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
     default [n] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
    }
    config KEMBTK_UCLIBC_CONFIG_ARM920T boolean {
     default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm && (EMBTK_ARCH_ARM_FAMILY_ARM9TDMI_ARM920T || EMBTK_ARCH_ARM_FAMILY_ARM9TDMI_ARM9TDMI || EMBTK_ARCH_ARM_FAMILY_ARM9TDMI_ARM940T)]
     select KEMBTK_UCLIBC_ARCH_HAS_MMU if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
     default [n] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
    }
    config KEMBTK_UCLIBC_CONFIG_ARM922T boolean {
     default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm && EMBTK_ARCH_ARM_FAMILY_ARM9TDMI_ARM922T]
     select KEMBTK_UCLIBC_ARCH_HAS_MMU if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
     default [n] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
    }
    config KEMBTK_UCLIBC_CONFIG_ARM926T boolean {
     default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm && (EMBTK_ARCH_ARM_FAMILY_ARM9E_ARM926EJ-S || EMBTK_ARCH_ARM_FAMILY_ARM9E_ARM946E-S || EMBTK_ARCH_ARM_FAMILY_ARM9E_ARM966E-S || EMBTK_ARCH_ARM_FAMILY_ARM9E_ARM968E-S)]
     select KEMBTK_UCLIBC_ARCH_HAS_MMU if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
     default [n] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
    }
    config KEMBTK_UCLIBC_CONFIG_ARM10T boolean {
     default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm && (EMBTK_ARCH_ARM_FAMILY_ARM10E_ARM1020E || EMBTK_ARCH_ARM_FAMILY_ARM10E_ARM1026EJ-S)]
     select KEMBTK_UCLIBC_ARCH_HAS_MMU if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
     default [n] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
    }
    config KEMBTK_UCLIBC_CONFIG_ARM1136JF_S boolean {
     default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm && (EMBTK_ARCH_ARM_FAMILY_ARM11_ARM1136JF-S || EMBTK_ARCH_ARM_FAMILY_ARM11_ARM1136J-S || EMBTK_ARCH_ARM_FAMILY_ARM11_ARM1156T2-S)]
     select KEMBTK_UCLIBC_ARCH_HAS_MMU if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
     default [n] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
    }
    config KEMBTK_UCLIBC_CONFIG_ARM1176JZ_S boolean {
     default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm && EMBTK_ARCH_ARM_FAMILY_ARM11_ARM1176JZ-S]
     select KEMBTK_UCLIBC_ARCH_HAS_MMU if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
     default [n] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
    }
    config KEMBTK_UCLIBC_CONFIG_ARM1176JZF_S boolean {
     default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm && EMBTK_ARCH_ARM_FAMILY_ARM11_ARM1176JZF-S]
     select KEMBTK_UCLIBC_ARCH_HAS_MMU if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
     default [n] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
    }
    config KEMBTK_UCLIBC_CONFIG_ARM_CORTEX_M3 boolean {
     default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm && EMBTK_ARCH_ARM_FAMILY_CORTEX_CORTEX-M3]
     select KEMBTK_UCLIBC_ARCH_HAS_NO_MMU if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
     select KEMBTK_UCLIBC_USE_BX if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
     default [n] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
    }
    config KEMBTK_UCLIBC_CONFIG_ARM_CORTEX_M1 boolean {
     default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm && EMBTK_ARCH_ARM_FAMILY_CORTEX_CORTEX-M1]
     select KEMBTK_UCLIBC_ARCH_HAS_NO_MMU if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
     select KEMBTK_UCLIBC_USE_BX if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
     default [n] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
    }
    config KEMBTK_UCLIBC_CONFIG_ARM_SA110 boolean {
     default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm && EMBTK_ARCH_ARM_FAMILY_STRONGARM_SA-110]
     select KEMBTK_UCLIBC_ARCH_HAS_MMU if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
     default [n] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
    }
    config KEMBTK_UCLIBC_CONFIG_ARM_SA1100 boolean {
     default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm && EMBTK_ARCH_ARM_FAMILY_STRONGARM_SA-1100]
     select KEMBTK_UCLIBC_ARCH_HAS_MMU if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
     default [n] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
    }
    config KEMBTK_UCLIBC_CONFIG_ARM_XSCALE boolean {
     default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm && EMBTK_ARCH_ARM_FAMILY_XSCALE_XSCALE]
     select KEMBTK_UCLIBC_ARCH_HAS_MMU if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
     default [n] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
    }
    config KEMBTK_UCLIBC_CONFIG_ARM_IWMMXT boolean {
     default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm && (EMBTK_ARCH_ARM_FAMILY_IWMMXT_IWMMXT || EMBTK_ARCH_ARM_FAMILY_IWMMXT_IWMMXT2)]
     select KEMBTK_UCLIBC_ARCH_HAS_MMU if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
     default [n] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
    }
   }
   if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_mips] {
    config KEMBTK_UCLIBC_TARGET_ARCH string {
     default ["arm"] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
     default ["mips"] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_mips]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_mips]
    }
    config KEMBTK_UCLIBC_FORCE_OPTIONS_FOR_ARCH boolean {
     default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
     select KEMBTK_UCLIBC_ARCH_ANY_ENDIAN if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_arm]
     default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_mips]
     select KEMBTK_UCLIBC_ARCH_ANY_ENDIAN if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_mips]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_mips]
    }
    config KEMBTK_UCLIBC_ARCH_CFLAGS string {
     default ["-mno-split-addresses"] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_mips]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_mips]
    }
    config KEMBTK_UCLIBC_CONFIG_MIPS_O32_ABI boolean {
     default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_mips && EMBTK_ARCH_MIPS_ABI_O32]
     default [n] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_mips]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_mips]
    }
    config KEMBTK_UCLIBC_CONFIG_MIPS_N32_ABI boolean {
     default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_mips && EMBTK_ARCH_MIPS_ABI_N32]
     default [n] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_mips]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_mips]
    }
    config KEMBTK_UCLIBC_CONFIG_MIPS_N64_ABI boolean {
     default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_mips && EMBTK_ARCH_MIPS_ABI_N64]
     default [n] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_mips]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_mips]
    }
    config KEMBTK_UCLIBC_CONFIG_MIPS_ISA_1 boolean {
     default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_mips && (EMBTK_ARCH_MIPS_MIPS1_LITTLE || EMBTK_ARCH_MIPS_MIPS1_BIG)]
     default [n] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_mips]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_mips]
    }
    config KEMBTK_UCLIBC_CONFIG_MIPS_ISA_2 boolean {
     default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_mips && (EMBTK_ARCH_MIPS_MIPS2_LITTLE || EMBTK_ARCH_MIPS_MIPS2_BIG)]
     default [n] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_mips]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_mips]
    }
    config KEMBTK_UCLIBC_CONFIG_MIPS_ISA_3 boolean {
     default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_mips && (EMBTK_ARCH_MIPS_MIPS3_LITTLE || EMBTK_ARCH_MIPS_MIPS3_BIG)]
     default [n] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_mips]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_mips]
    }
    config KEMBTK_UCLIBC_CONFIG_MIPS_ISA_4 boolean {
     default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_mips && (EMBTK_ARCH_MIPS_MIPS4_LITTLE || EMBTK_ARCH_MIPS_MIPS4_BIG)]
     default [n] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_mips]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_mips]
    }
    config KEMBTK_UCLIBC_CONFIG_MIPS_ISA_MIPS32 boolean {
     default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_mips && (EMBTK_ARCH_MIPS_MIPS32_LITTLE || EMBTK_ARCH_MIPS_MIPS32_BIG)]
     default [n] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_mips]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_mips]
    }
    config KEMBTK_UCLIBC_CONFIG_MIPS_ISA_MIPS32R2 boolean {
     default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_mips && (EMBTK_ARCH_MIPS_MIPS32R2_LITTLE || EMBTK_ARCH_MIPS_MIPS32R2_BIG)]
     default [n] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_mips]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_mips]
    }
    config KEMBTK_UCLIBC_CONFIG_MIPS_ISA_MIPS64 boolean {
     default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_mips && (EMBTK_ARCH_MIPS_MIPS64_LITTLE || EMBTK_ARCH_MIPS_MIPS64_BIG || EMBTK_ARCH_MIPS_MIPS64R2_LITTLE || EMBTK_ARCH_MIPS_MIPS64R2_BIG)]
     default [n] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_mips]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_TARGET_mips]
    }
   }
   config KEMBTK_UCLIBC_TARGET_SUBARCH string {
    default [""] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   if [EMBTK_CLIB_UCLIBC && !KEMBTK_UCLIBC_ARCH_USE_MMU] {
    choice boolean {
     prompt "Target File Format" if [EMBTK_CLIB_UCLIBC && !KEMBTK_UCLIBC_ARCH_USE_MMU]
     config KEMBTK_UCLIBC_UCLIBC_FORMAT_ELF boolean {
      prompt "ELF" if [<choice> && KEMBTK_UCLIBC_ARCH_USE_MMU]
      depends on [KEMBTK_UCLIBC_ARCH_USE_MMU]
      inherited [<choice> && KEMBTK_UCLIBC_ARCH_USE_MMU]
     }
     config KEMBTK_UCLIBC_UCLIBC_FORMAT_FDPIC_ELF boolean {
      prompt "FDPIC ELF" if [<choice> && !KEMBTK_UCLIBC_ARCH_USE_MMU]
      depends on [!KEMBTK_UCLIBC_ARCH_USE_MMU]
      inherited [<choice> && !KEMBTK_UCLIBC_ARCH_USE_MMU]
     }
     config KEMBTK_UCLIBC_UCLIBC_FORMAT_FLAT boolean {
      prompt "STATIC FLAT" if [<choice> && !KEMBTK_UCLIBC_ARCH_USE_MMU]
      depends on [!KEMBTK_UCLIBC_ARCH_USE_MMU]
      select KEMBTK_UCLIBC_ARCH_HAS_NO_LDSO if [<choice> && !KEMBTK_UCLIBC_ARCH_USE_MMU]
      inherited [<choice> && !KEMBTK_UCLIBC_ARCH_USE_MMU]
     }
     config KEMBTK_UCLIBC_UCLIBC_FORMAT_FLAT_SEP_DATA boolean {
      prompt "STATIC FLAT (sep-data)" if [<choice> && !KEMBTK_UCLIBC_ARCH_USE_MMU]
      depends on [!KEMBTK_UCLIBC_ARCH_USE_MMU]
      select KEMBTK_UCLIBC_ARCH_HAS_NO_LDSO if [<choice> && !KEMBTK_UCLIBC_ARCH_USE_MMU]
      inherited [<choice> && !KEMBTK_UCLIBC_ARCH_USE_MMU]
     }
     config KEMBTK_UCLIBC_UCLIBC_FORMAT_SHARED_FLAT boolean {
      prompt "SHARED FLAT" if [<choice> && !KEMBTK_UCLIBC_ARCH_USE_MMU]
      depends on [!KEMBTK_UCLIBC_ARCH_USE_MMU]
      select KEMBTK_UCLIBC_ARCH_HAS_NO_LDSO if [<choice> && !KEMBTK_UCLIBC_ARCH_USE_MMU]
      inherited [<choice> && !KEMBTK_UCLIBC_ARCH_USE_MMU]
     }
    }
   }
   if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_ARCH_USE_MMU] {
   }
   config KEMBTK_UCLIBC_UCLIBC_SHARED_FLAT_ID integer {
    prompt "Shared library ID" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_FORMAT_SHARED_FLAT]
    default [1] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_FORMAT_SHARED_FLAT]
    depends on [KEMBTK_UCLIBC_UCLIBC_FORMAT_SHARED_FLAT]
    inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_FORMAT_SHARED_FLAT]
   }
   config KEMBTK_UCLIBC_ARCH_ANY_ENDIAN boolean {
    default [n] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_ARCH_BIG_ENDIAN boolean {
    default [n] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_ARCH_LITTLE_ENDIAN boolean {
    default [n] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_ARCH_ANY_ENDIAN] {
    config KEMBTK_UCLIBC_ARCH_WANTS_BIG_ENDIAN boolean {
     default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_ARCH_ANY_ENDIAN && (EMBTK_ARCH_ARM_BIG_ENDIAN || EMBTK_ARCH_MIPS_BIG_ENDIAN)]
     select KEMBTK_UCLIBC_ARCH_BIG_ENDIAN if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_ARCH_ANY_ENDIAN]
     default [n] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_ARCH_ANY_ENDIAN]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_ARCH_ANY_ENDIAN]
    }
    config KEMBTK_UCLIBC_ARCH_WANTS_LITTLE_ENDIAN boolean {
     default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_ARCH_ANY_ENDIAN && (EMBTK_ARCH_ARM_LITTLE_ENDIAN || EMBTK_ARCH_MIPS_LITTLE_ENDIAN)]
     select KEMBTK_UCLIBC_ARCH_LITTLE_ENDIAN if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_ARCH_ANY_ENDIAN]
     default [n] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_ARCH_ANY_ENDIAN]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_ARCH_ANY_ENDIAN]
    }
   }
   if [EMBTK_CLIB_UCLIBC && !KEMBTK_UCLIBC_ARCH_ANY_ENDIAN && KEMBTK_UCLIBC_ARCH_LITTLE_ENDIAN] {
   }
   if [EMBTK_CLIB_UCLIBC && !KEMBTK_UCLIBC_ARCH_ANY_ENDIAN && KEMBTK_UCLIBC_ARCH_BIG_ENDIAN] {
   }
   config KEMBTK_UCLIBC_ARCH_HAS_NO_MMU boolean {
    inherited [EMBTK_CLIB_UCLIBC]
   }
   if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_ARCH_HAS_NO_MMU] {
   }
   config KEMBTK_UCLIBC_ARCH_HAS_MMU boolean {
    prompt "Target CPU has a memory management unit (MMU)" if [EMBTK_CLIB_UCLIBC && !KEMBTK_UCLIBC_ARCH_HAS_NO_MMU]
    depends on [!KEMBTK_UCLIBC_ARCH_HAS_NO_MMU]
    default [y] if [EMBTK_CLIB_UCLIBC && !KEMBTK_UCLIBC_ARCH_HAS_NO_MMU]
    inherited [EMBTK_CLIB_UCLIBC && !KEMBTK_UCLIBC_ARCH_HAS_NO_MMU]
    config KEMBTK_UCLIBC_ARCH_USE_MMU boolean {
     prompt "Do you want to utilize the MMU?" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_ARCH_HAS_MMU]
     depends on [KEMBTK_UCLIBC_ARCH_HAS_MMU]
     default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_ARCH_HAS_MMU]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_ARCH_HAS_MMU]
    }
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_FLOATS boolean {
    prompt "Enable floating point number support" if [EMBTK_CLIB_UCLIBC]
    default [y] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
    config KEMBTK_UCLIBC_UCLIBC_HAS_FPU boolean {
     depends on [KEMBTK_UCLIBC_UCLIBC_HAS_FLOATS]
     default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_FLOATS && EMBTK_HARDFLOAT]
     default [n] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_FLOATS && EMBTK_SOFTFLOAT]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_FLOATS]
    }
    config KEMBTK_UCLIBC_UCLIBC_HAS_SOFT_FLOAT boolean {
     depends on [KEMBTK_UCLIBC_UCLIBC_HAS_FLOATS && !KEMBTK_UCLIBC_UCLIBC_HAS_FPU]
     default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_FLOATS && !KEMBTK_UCLIBC_UCLIBC_HAS_FPU]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_FLOATS && !KEMBTK_UCLIBC_UCLIBC_HAS_FPU]
    }
    config KEMBTK_UCLIBC_DO_C99_MATH boolean {
     prompt "Enable full C99 math library support" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_FLOATS]
     depends on [KEMBTK_UCLIBC_UCLIBC_HAS_FLOATS]
     default [n] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_FLOATS]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_FLOATS]
    }
    config KEMBTK_UCLIBC_DO_XSI_MATH boolean {
     prompt "Enable XSI math extensions to the ISO C standard (bessel)" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_FLOATS && EMBTK_UCLIBC_VERSION_SERIES_0_9_31_X]
     depends on [KEMBTK_UCLIBC_UCLIBC_HAS_FLOATS]
     depends on [EMBTK_UCLIBC_VERSION_SERIES_0_9_31_X]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_FLOATS && EMBTK_UCLIBC_VERSION_SERIES_0_9_31_X]
    }
    config KEMBTK_UCLIBC_UCLIBC_HAS_FENV boolean {
     depends on [KEMBTK_UCLIBC_UCLIBC_HAS_FLOATS]
     default [n] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_FLOATS]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_FLOATS]
    }
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_LONG_DOUBLE_MATH boolean {
    prompt "Enable long double support" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_DO_C99_MATH && (KEMBTK_UCLIBC_TARGET_i386 || KEMBTK_UCLIBC_TARGET_m68k || KEMBTK_UCLIBC_TARGET_sparc || KEMBTK_UCLIBC_TARGET_x86_64 || KEMBTK_UCLIBC_TARGET_powerpc)]
    depends on [KEMBTK_UCLIBC_DO_C99_MATH]
    depends on [KEMBTK_UCLIBC_TARGET_i386 || KEMBTK_UCLIBC_TARGET_m68k || KEMBTK_UCLIBC_TARGET_sparc || KEMBTK_UCLIBC_TARGET_x86_64 || KEMBTK_UCLIBC_TARGET_powerpc]
    default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_DO_C99_MATH && (KEMBTK_UCLIBC_TARGET_i386 || KEMBTK_UCLIBC_TARGET_m68k || KEMBTK_UCLIBC_TARGET_sparc || KEMBTK_UCLIBC_TARGET_x86_64 || KEMBTK_UCLIBC_TARGET_powerpc)]
    inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_DO_C99_MATH && (KEMBTK_UCLIBC_TARGET_i386 || KEMBTK_UCLIBC_TARGET_m68k || KEMBTK_UCLIBC_TARGET_sparc || KEMBTK_UCLIBC_TARGET_x86_64 || KEMBTK_UCLIBC_TARGET_powerpc)]
   }
   config KEMBTK_UCLIBC_KERNEL_HEADERS string {
    default ["/usr/include"] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_UCLIBC_UCLINUX_BROKEN_MUNMAP boolean {
    depends on [!KEMBTK_UCLIBC_ARCH_USE_MMU]
    default [y] if [EMBTK_CLIB_UCLIBC && !KEMBTK_UCLIBC_ARCH_USE_MMU]
    inherited [EMBTK_CLIB_UCLIBC && !KEMBTK_UCLIBC_ARCH_USE_MMU]
   }
   config KEMBTK_UCLIBC_EXCLUDE_BRK boolean {
    depends on [!KEMBTK_UCLIBC_ARCH_USE_MMU]
    default [y] if [EMBTK_CLIB_UCLIBC && !KEMBTK_UCLIBC_ARCH_USE_MMU]
    inherited [EMBTK_CLIB_UCLIBC && !KEMBTK_UCLIBC_ARCH_USE_MMU]
   }
   config KEMBTK_UCLIBC_HAVE_DOT_CONFIG boolean {
    default [y] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_HAVE_NO_PIC boolean {
    default [n] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_DOPIC boolean {
    prompt "Generate only Position Independent Code (PIC)" if [EMBTK_CLIB_UCLIBC && !KEMBTK_UCLIBC_HAVE_NO_PIC]
    default [y] if [EMBTK_CLIB_UCLIBC && !KEMBTK_UCLIBC_HAVE_NO_PIC]
    depends on [!KEMBTK_UCLIBC_HAVE_NO_PIC]
    inherited [EMBTK_CLIB_UCLIBC && !KEMBTK_UCLIBC_HAVE_NO_PIC]
   }
   config KEMBTK_UCLIBC_ARCH_HAS_NO_SHARED boolean {
    default [n] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_ARCH_HAS_NO_LDSO boolean {
    select KEMBTK_UCLIBC_ARCH_HAS_NO_SHARED if [EMBTK_CLIB_UCLIBC]
    default [n] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_HAVE_SHARED boolean {
    prompt "Enable support for shared libraries" if [EMBTK_CLIB_UCLIBC && !KEMBTK_UCLIBC_ARCH_HAS_NO_SHARED]
    depends on [!KEMBTK_UCLIBC_ARCH_HAS_NO_SHARED]
    default [y] if [EMBTK_CLIB_UCLIBC && !KEMBTK_UCLIBC_ARCH_HAS_NO_SHARED]
    inherited [EMBTK_CLIB_UCLIBC && !KEMBTK_UCLIBC_ARCH_HAS_NO_SHARED]
    config KEMBTK_UCLIBC_FORCE_SHAREABLE_TEXT_SEGMENTS boolean {
     prompt "Only load shared libraries which can share their text segment" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_HAVE_SHARED]
     depends on [KEMBTK_UCLIBC_HAVE_SHARED]
     default [n] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_HAVE_SHARED]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_HAVE_SHARED]
    }
    config KEMBTK_UCLIBC_LDSO_LDD_SUPPORT boolean {
     prompt "Native 'ldd' support" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_HAVE_SHARED]
     depends on [KEMBTK_UCLIBC_HAVE_SHARED]
     default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_HAVE_SHARED]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_HAVE_SHARED]
    }
    config KEMBTK_UCLIBC_LDSO_CACHE_SUPPORT boolean {
     prompt "Enable library loader cache (ld.so.conf)" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_HAVE_SHARED]
     depends on [KEMBTK_UCLIBC_HAVE_SHARED]
     default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_HAVE_SHARED]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_HAVE_SHARED]
    }
    config KEMBTK_UCLIBC_LDSO_PRELOAD_ENV_SUPPORT boolean {
     prompt "Enable library loader LD_PRELOAD environment" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_HAVE_SHARED && EMBTK_UCLIBC_VERSION_SERIES_1_0_X]
     depends on [KEMBTK_UCLIBC_HAVE_SHARED]
     depends on [EMBTK_UCLIBC_VERSION_SERIES_1_0_X]
     default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_HAVE_SHARED && EMBTK_UCLIBC_VERSION_SERIES_1_0_X]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_HAVE_SHARED && EMBTK_UCLIBC_VERSION_SERIES_1_0_X]
    }
    config KEMBTK_UCLIBC_LDSO_PRELOAD_FILE_SUPPORT boolean {
     prompt "Enable library loader preload file (ld.so.preload)" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_HAVE_SHARED]
     depends on [KEMBTK_UCLIBC_HAVE_SHARED]
     default [n] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_HAVE_SHARED]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_HAVE_SHARED]
     config KEMBTK_UCLIBC_LDSO_BASE_FILENAME string {
      depends on [KEMBTK_UCLIBC_HAVE_SHARED && (KEMBTK_UCLIBC_LDSO_CACHE_SUPPORT || KEMBTK_UCLIBC_LDSO_PRELOAD_FILE_SUPPORT)]
      default ["ld.so"] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_HAVE_SHARED && (KEMBTK_UCLIBC_LDSO_CACHE_SUPPORT || KEMBTK_UCLIBC_LDSO_PRELOAD_FILE_SUPPORT)]
      depends on [KEMBTK_UCLIBC_HAVE_SHARED && (KEMBTK_UCLIBC_LDSO_CACHE_SUPPORT || KEMBTK_UCLIBC_LDSO_PRELOAD_FILE_SUPPORT)]
      default ["ld.so"] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_HAVE_SHARED && (KEMBTK_UCLIBC_LDSO_CACHE_SUPPORT || KEMBTK_UCLIBC_LDSO_PRELOAD_FILE_SUPPORT)]
      inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_HAVE_SHARED && (KEMBTK_UCLIBC_LDSO_CACHE_SUPPORT || KEMBTK_UCLIBC_LDSO_PRELOAD_FILE_SUPPORT)]
     }
     config KEMBTK_UCLIBC_LDSO_BASE_FILENAME string {
      depends on [KEMBTK_UCLIBC_HAVE_SHARED && (KEMBTK_UCLIBC_LDSO_CACHE_SUPPORT || KEMBTK_UCLIBC_LDSO_PRELOAD_FILE_SUPPORT)]
      default ["ld.so"] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_HAVE_SHARED && (KEMBTK_UCLIBC_LDSO_CACHE_SUPPORT || KEMBTK_UCLIBC_LDSO_PRELOAD_FILE_SUPPORT)]
      depends on [KEMBTK_UCLIBC_HAVE_SHARED && (KEMBTK_UCLIBC_LDSO_CACHE_SUPPORT || KEMBTK_UCLIBC_LDSO_PRELOAD_FILE_SUPPORT)]
      default ["ld.so"] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_HAVE_SHARED && (KEMBTK_UCLIBC_LDSO_CACHE_SUPPORT || KEMBTK_UCLIBC_LDSO_PRELOAD_FILE_SUPPORT)]
      inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_HAVE_SHARED && (KEMBTK_UCLIBC_LDSO_CACHE_SUPPORT || KEMBTK_UCLIBC_LDSO_PRELOAD_FILE_SUPPORT)]
     }
    }
    config KEMBTK_UCLIBC_UCLIBC_STATIC_LDCONFIG boolean {
     prompt "Link ldconfig statically" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_HAVE_SHARED]
     depends on [KEMBTK_UCLIBC_HAVE_SHARED]
     default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_HAVE_SHARED]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_HAVE_SHARED]
    }
    config KEMBTK_UCLIBC_LDSO_RUNPATH boolean {
     prompt "Enable ELF RUNPATH tag support" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_HAVE_SHARED]
     depends on [KEMBTK_UCLIBC_HAVE_SHARED]
     default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_HAVE_SHARED]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_HAVE_SHARED]
    }
    config KEMBTK_UCLIBC_LDSO_SEARCH_INTERP_PATH boolean {
     prompt "Add ldso path to lib search path" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_HAVE_SHARED && EMBTK_UCLIBC_VERSION_SERIES_0_9_31_X]
     depends on [KEMBTK_UCLIBC_HAVE_SHARED]
     depends on [EMBTK_UCLIBC_VERSION_SERIES_0_9_31_X]
     default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_HAVE_SHARED && EMBTK_UCLIBC_VERSION_SERIES_0_9_31_X]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_HAVE_SHARED && EMBTK_UCLIBC_VERSION_SERIES_0_9_31_X]
    }
   }
   config KEMBTK_UCLIBC_UCLIBC_CTOR_DTOR boolean {
    prompt "Support global constructors and destructors" if [EMBTK_CLIB_UCLIBC]
    default [y] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_LDSO_GNU_HASH_SUPPORT boolean {
    prompt "Enable GNU hash style support" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_HAVE_SHARED]
    depends on [KEMBTK_UCLIBC_HAVE_SHARED]
    default [n] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_HAVE_SHARED]
    inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_HAVE_SHARED]
   }
   choice boolean {
    prompt "Thread support" if [EMBTK_CLIB_UCLIBC]
    config KEMBTK_UCLIBC_LINUXTHREADS_OLD boolean {
     prompt "Use the older (stable) version of linuxthreads" if [<choice>]
     select KEMBTK_UCLIBC_UCLIBC_HAS_THREADS if [<choice>]
     inherited [<choice>]
    }
    config KEMBTK_UCLIBC_UCLIBC_HAS_THREADS_NATIVE boolean {
     prompt "Native POSIX Threading (NPTL)" if [<choice> && EMBTK_UCLIBC_VERSION_SERIES_1_0_X]
     select KEMBTK_UCLIBC_UCLIBC_HAS_TLS if [<choice> && EMBTK_UCLIBC_VERSION_SERIES_1_0_X]
     select KEMBTK_UCLIBC_UCLIBC_HAS_STDIO_FUTEXES if [<choice> && EMBTK_UCLIBC_VERSION_SERIES_1_0_X]
     select KEMBTK_UCLIBC_EXTRA_WARNINGS if [<choice> && EMBTK_UCLIBC_VERSION_SERIES_1_0_X]
     depends on [EMBTK_UCLIBC_VERSION_SERIES_1_0_X]
     inherited [<choice> && EMBTK_UCLIBC_VERSION_SERIES_1_0_X]
    }
    config KEMBTK_UCLIBC_HAS_NO_THREADS boolean {
     prompt "none" if [<choice>]
     inherited [<choice>]
    }
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_THREADS boolean {
    default [y] if [EMBTK_CLIB_UCLIBC && !KEMBTK_UCLIBC_HAS_NO_THREADS]
    default [n] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_HAS_NO_THREADS]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_TLS boolean {
    prompt "Thread-Local Storage" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_THREADS_NATIVE && EMBTK_UCLIBC_VERSION_SERIES_1_0_X]
    depends on [KEMBTK_UCLIBC_UCLIBC_HAS_THREADS_NATIVE]
    depends on [EMBTK_UCLIBC_VERSION_SERIES_1_0_X]
    default [n] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_THREADS_NATIVE && EMBTK_UCLIBC_VERSION_SERIES_1_0_X]
    inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_THREADS_NATIVE && EMBTK_UCLIBC_VERSION_SERIES_1_0_X]
   }
   config KEMBTK_UCLIBC_LINUXTHREADS_NEW boolean {
    default [n] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_PTHREADS_DEBUG_SUPPORT boolean {
    prompt "Build pthreads debugging support" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_THREADS]
    default [n] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_THREADS]
    depends on [KEMBTK_UCLIBC_UCLIBC_HAS_THREADS]
    inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_THREADS]
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_SYSLOG boolean {
    prompt "Syslog support" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_NETWORK_SUPPORT]
    default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_NETWORK_SUPPORT]
    depends on [KEMBTK_UCLIBC_UCLIBC_HAS_NETWORK_SUPPORT]
    select KEMBTK_UCLIBC_UCLIBC_HAS_SOCKET if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_NETWORK_SUPPORT]
    inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_NETWORK_SUPPORT]
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_LFS boolean {
    prompt "Large File Support" if [EMBTK_CLIB_UCLIBC]
    default [y] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   choice boolean {
    prompt "Malloc Implementation" if [EMBTK_CLIB_UCLIBC]
    default [KEMBTK_UCLIBC_MALLOC] if [EMBTK_CLIB_UCLIBC && !KEMBTK_UCLIBC_ARCH_USE_MMU]
    default [KEMBTK_UCLIBC_MALLOC_STANDARD] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_ARCH_USE_MMU]
    config KEMBTK_UCLIBC_MALLOC boolean {
     prompt "malloc" if [<choice>]
     inherited [<choice>]
    }
    config KEMBTK_UCLIBC_MALLOC_SIMPLE boolean {
     prompt "malloc-simple" if [<choice>]
     inherited [<choice>]
    }
    config KEMBTK_UCLIBC_MALLOC_STANDARD boolean {
     prompt "malloc-standard" if [<choice> && KEMBTK_UCLIBC_ARCH_USE_MMU]
     depends on [KEMBTK_UCLIBC_ARCH_USE_MMU]
     inherited [<choice> && KEMBTK_UCLIBC_ARCH_USE_MMU]
    }
   }
   config KEMBTK_UCLIBC_MALLOC_GLIBC_COMPAT boolean {
    default [y] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_UCLIBC_DYNAMIC_ATEXIT boolean {
    prompt "Dynamic atexit() Support" if [EMBTK_CLIB_UCLIBC]
    default [y] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_COMPAT_ATEXIT boolean {
    prompt "Old (visible) atexit Support" if [EMBTK_CLIB_UCLIBC]
    default [n] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_UCLIBC_SUSV3_LEGACY boolean {
    prompt "Enable SuSv3 LEGACY functions" if [EMBTK_CLIB_UCLIBC]
    default [n] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_UCLIBC_SUSV3_LEGACY_MACROS boolean {
    prompt "Enable SuSv3 LEGACY macros" if [EMBTK_CLIB_UCLIBC]
    default [n] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_UCLIBC_SUSV4_LEGACY boolean {
    prompt "Enable SuSv4 LEGACY or obsolescent functions" if [EMBTK_CLIB_UCLIBC && EMBTK_UCLIBC_VERSION_SERIES_0_9_31_X]
    depends on [EMBTK_UCLIBC_VERSION_SERIES_0_9_31_X]
    inherited [EMBTK_CLIB_UCLIBC && EMBTK_UCLIBC_VERSION_SERIES_0_9_31_X]
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_STUBS boolean {
    prompt "Provide stubs for unavailable functionality" if [EMBTK_CLIB_UCLIBC]
    default [n] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_SHADOW boolean {
    prompt "Shadow Password Support" if [EMBTK_CLIB_UCLIBC]
    default [y] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_PROGRAM_INVOCATION_NAME boolean {
    prompt "Support for program_invocation_name" if [EMBTK_CLIB_UCLIBC]
    default [n] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
    config KEMBTK_UCLIBC_UCLIBC_HAS___PROGNAME boolean {
     prompt "Support for __progname" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_PROGRAM_INVOCATION_NAME]
     default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_PROGRAM_INVOCATION_NAME]
     depends on [KEMBTK_UCLIBC_UCLIBC_HAS_PROGRAM_INVOCATION_NAME]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_PROGRAM_INVOCATION_NAME]
    }
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_PTY boolean {
    prompt "Support for pseudo-terminals" if [EMBTK_CLIB_UCLIBC]
    default [y] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
    config KEMBTK_UCLIBC_ASSUME_DEVPTS boolean {
     prompt "Assume that /dev/pts is a devpts or devfs file system" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_PTY]
     default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_PTY]
     depends on [KEMBTK_UCLIBC_UCLIBC_HAS_PTY]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_PTY]
    }
    config KEMBTK_UCLIBC_UNIX98PTY_ONLY boolean {
     prompt "Support only Unix 98 PTYs" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_PTY]
     default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_PTY]
     depends on [KEMBTK_UCLIBC_UCLIBC_HAS_PTY]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_PTY]
     config KEMBTK_UCLIBC_UCLIBC_HAS_GETPT boolean {
      prompt "Support getpt() (glibc-compat)" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UNIX98PTY_ONLY]
      depends on [KEMBTK_UCLIBC_UNIX98PTY_ONLY]
      default [y] if [EMBTK_CLIB_UCLIBC && !KEMBTK_UCLIBC_UNIX98PTY_ONLY]
      inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UNIX98PTY_ONLY]
     }
    }
   }
   if [EMBTK_CLIB_UCLIBC && !KEMBTK_UCLIBC_UNIX98PTY_ONLY] {
    config KEMBTK_UCLIBC_UCLIBC_HAS_GETPT boolean {
     prompt "Support getpt() (glibc-compat)" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UNIX98PTY_ONLY]
     depends on [KEMBTK_UCLIBC_UNIX98PTY_ONLY]
     default [y] if [EMBTK_CLIB_UCLIBC && !KEMBTK_UCLIBC_UNIX98PTY_ONLY]
     inherited [EMBTK_CLIB_UCLIBC && !KEMBTK_UCLIBC_UNIX98PTY_ONLY]
    }
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_LIBUTIL boolean {
    prompt "Provide libutil library and functions" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_PTY && EMBTK_UCLIBC_VERSION_SERIES_0_9_31_X]
    depends on [KEMBTK_UCLIBC_UCLIBC_HAS_PTY]
    depends on [EMBTK_UCLIBC_VERSION_SERIES_0_9_31_X]
    inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_PTY && EMBTK_UCLIBC_VERSION_SERIES_0_9_31_X]
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_TM_EXTENSIONS boolean {
    prompt "Support 'struct tm' timezone extension fields" if [EMBTK_CLIB_UCLIBC]
    default [y] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_TZ_CACHING boolean {
    prompt "Enable caching of the last valid timezone 'TZ' string" if [EMBTK_CLIB_UCLIBC]
    default [y] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_TZ_FILE boolean {
    prompt "Enable '/etc/TZ' file support to set a default timezone (uClibc-specific)" if [EMBTK_CLIB_UCLIBC]
    default [y] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
    config KEMBTK_UCLIBC_UCLIBC_HAS_TZ_FILE_READ_MANY boolean {
     prompt "Repeatedly read the '/etc/TZ' file" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_TZ_FILE]
     depends on [KEMBTK_UCLIBC_UCLIBC_HAS_TZ_FILE]
     default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_TZ_FILE]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_TZ_FILE]
    }
    config KEMBTK_UCLIBC_UCLIBC_TZ_FILE_PATH string {
     prompt "Path to the 'TZ' file for setting the global timezone" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_TZ_FILE]
     depends on [KEMBTK_UCLIBC_UCLIBC_HAS_TZ_FILE]
     default ["/etc/TZ"] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_TZ_FILE]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_TZ_FILE]
    }
    config KEMBTK_UCLIBC_UCLIBC_FALLBACK_TO_ETC_LOCALTIME boolean {
     prompt "Use /etc/localtime as a fallback" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_TZ_FILE && EMBTK_UCLIBC_VERSION_SERIES_1_0_X]
     depends on [KEMBTK_UCLIBC_UCLIBC_HAS_TZ_FILE]
     depends on [EMBTK_UCLIBC_VERSION_SERIES_1_0_X]
     default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_TZ_FILE && EMBTK_UCLIBC_VERSION_SERIES_1_0_X]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_TZ_FILE && EMBTK_UCLIBC_VERSION_SERIES_1_0_X]
    }
   }
   config KEMBTK_UCLIBC_UCLIBC_PWD_BUFFER_SIZE integer {
    prompt "Buffer size for getpwnam() and friends" if [EMBTK_CLIB_UCLIBC]
    default [256] if [EMBTK_CLIB_UCLIBC]
    range [12 1024] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_UCLIBC_GRP_BUFFER_SIZE integer {
    prompt "Buffer size for getgrnam() and friends" if [EMBTK_CLIB_UCLIBC]
    default [256] if [EMBTK_CLIB_UCLIBC]
    range [12 1024] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_UCLIBC_LINUX_MODULE_24 boolean {
    prompt "Linux kernel module functions" if [EMBTK_CLIB_UCLIBC]
    default [y] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_UCLIBC_LINUX_SPECIFIC boolean {
    prompt "Linux specific functions" if [EMBTK_CLIB_UCLIBC]
    default [y] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_GNU_ERROR boolean {
    prompt "Support GNU extensions for error-reporting" if [EMBTK_CLIB_UCLIBC]
    default [y] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_UCLIBC_BSD_SPECIFIC boolean {
    prompt "BSD specific functions" if [EMBTK_CLIB_UCLIBC]
    default [y] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_BSD_ERR boolean {
    prompt "BSD err functions" if [EMBTK_CLIB_UCLIBC]
    default [y] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_OBSOLETE_BSD_SIGNAL boolean {
    prompt "BSD obsolete signal functions" if [EMBTK_CLIB_UCLIBC]
    default [n] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_OBSOLETE_SYSV_SIGNAL boolean {
    prompt "SYSV obsolete signal functions" if [EMBTK_CLIB_UCLIBC]
    default [n] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_UCLIBC_NTP_LEGACY boolean {
    prompt "ntp_*() aliases" if [EMBTK_CLIB_UCLIBC]
    default [n] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_UCLIBC_SV4_DEPRECATED boolean {
    prompt "Enable SVr4 deprecated functions" if [EMBTK_CLIB_UCLIBC]
    default [n] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_REALTIME boolean {
    prompt "Realtime-related family of SUSv functions" if [EMBTK_CLIB_UCLIBC]
    default [y] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
    config KEMBTK_UCLIBC_UCLIBC_HAS_ADVANCED_REALTIME boolean {
     prompt "Advanced realtime-related family of SUSv functions" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_REALTIME]
     default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_REALTIME]
     depends on [KEMBTK_UCLIBC_UCLIBC_HAS_REALTIME]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_REALTIME]
    }
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_EPOLL boolean {
    prompt "epoll" if [EMBTK_CLIB_UCLIBC]
    default [y] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_XATTR boolean {
    prompt "Extended Attributes" if [EMBTK_CLIB_UCLIBC]
    default [y] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_PROFILING boolean {
    prompt "Profiling support" if [EMBTK_CLIB_UCLIBC]
    default [y] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_CRYPT_IMPL boolean {
    prompt "libcrypt support" if [EMBTK_CLIB_UCLIBC]
    default [y] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
    config KEMBTK_UCLIBC_UCLIBC_HAS_CRYPT_STUB boolean {
     prompt "libcrypt stubs" if [EMBTK_CLIB_UCLIBC && !KEMBTK_UCLIBC_UCLIBC_HAS_CRYPT_IMPL]
     default [y] if [EMBTK_CLIB_UCLIBC && !KEMBTK_UCLIBC_UCLIBC_HAS_CRYPT_IMPL]
     depends on [!KEMBTK_UCLIBC_UCLIBC_HAS_CRYPT_IMPL]
     inherited [EMBTK_CLIB_UCLIBC && !KEMBTK_UCLIBC_UCLIBC_HAS_CRYPT_IMPL]
    }
    config KEMBTK_UCLIBC_UCLIBC_HAS_CRYPT boolean {
     default [y] if [EMBTK_CLIB_UCLIBC && (KEMBTK_UCLIBC_UCLIBC_HAS_CRYPT_IMPL || KEMBTK_UCLIBC_UCLIBC_HAS_CRYPT_STUB)]
     depends on [KEMBTK_UCLIBC_UCLIBC_HAS_CRYPT_IMPL || KEMBTK_UCLIBC_UCLIBC_HAS_CRYPT_STUB]
     inherited [EMBTK_CLIB_UCLIBC && (KEMBTK_UCLIBC_UCLIBC_HAS_CRYPT_IMPL || KEMBTK_UCLIBC_UCLIBC_HAS_CRYPT_STUB)]
    }
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_NETWORK_SUPPORT boolean {
    prompt "Networking Support" if [EMBTK_CLIB_UCLIBC]
    default [y] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
    config KEMBTK_UCLIBC_UCLIBC_HAS_SOCKET boolean {
     prompt "Socket support" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_NETWORK_SUPPORT]
     depends on [KEMBTK_UCLIBC_UCLIBC_HAS_NETWORK_SUPPORT]
     default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_NETWORK_SUPPORT]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_NETWORK_SUPPORT]
    }
    config KEMBTK_UCLIBC_UCLIBC_HAS_IPV4 boolean {
     prompt "IP version 4 support" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_NETWORK_SUPPORT]
     depends on [KEMBTK_UCLIBC_UCLIBC_HAS_NETWORK_SUPPORT]
     default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_NETWORK_SUPPORT]
     select KEMBTK_UCLIBC_UCLIBC_HAS_SOCKET if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_NETWORK_SUPPORT]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_NETWORK_SUPPORT]
    }
    config KEMBTK_UCLIBC_UCLIBC_HAS_IPV6 boolean {
     prompt "IP version 6 support" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_NETWORK_SUPPORT]
     depends on [KEMBTK_UCLIBC_UCLIBC_HAS_NETWORK_SUPPORT]
     select KEMBTK_UCLIBC_UCLIBC_HAS_SOCKET if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_NETWORK_SUPPORT]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_NETWORK_SUPPORT]
    }
    config KEMBTK_UCLIBC_UCLIBC_HAS_RPC boolean {
     prompt "Remote Procedure Call (RPC) support" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_NETWORK_SUPPORT]
     depends on [KEMBTK_UCLIBC_UCLIBC_HAS_NETWORK_SUPPORT]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_NETWORK_SUPPORT]
     config KEMBTK_UCLIBC_UCLIBC_HAS_FULL_RPC boolean {
      prompt "Full RPC support" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_RPC]
      depends on [KEMBTK_UCLIBC_UCLIBC_HAS_RPC]
      default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_RPC && !KEMBTK_UCLIBC_HAVE_SHARED]
      inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_RPC]
     }
     config KEMBTK_UCLIBC_UCLIBC_HAS_REENTRANT_RPC boolean {
      prompt "Reentrant RPC support" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_RPC]
      depends on [KEMBTK_UCLIBC_UCLIBC_HAS_RPC]
      default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_RPC && !KEMBTK_UCLIBC_HAVE_SHARED]
      inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_RPC]
     }
    }
   }
   config KEMBTK_UCLIBC_UCLIBC_USE_NETLINK boolean {
    prompt "Use netlink to query interfaces" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_SOCKET]
    depends on [KEMBTK_UCLIBC_UCLIBC_HAS_SOCKET]
    inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_SOCKET]
    config KEMBTK_UCLIBC_UCLIBC_SUPPORT_AI_ADDRCONFIG boolean {
     prompt "Support the AI_ADDRCONFIG flag" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_USE_NETLINK]
     depends on [KEMBTK_UCLIBC_UCLIBC_USE_NETLINK]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_USE_NETLINK]
    }
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_BSD_RES_CLOSE boolean {
    prompt "Support res_close() (bsd-compat)" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_NETWORK_SUPPORT]
    depends on [KEMBTK_UCLIBC_UCLIBC_HAS_NETWORK_SUPPORT]
    inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_NETWORK_SUPPORT]
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_COMPAT_RES_STATE boolean {
    prompt "Use compatible but bloated _res" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_NETWORK_SUPPORT && EMBTK_UCLIBC_VERSION_SERIES_0_9_31_X]
    depends on [KEMBTK_UCLIBC_UCLIBC_HAS_NETWORK_SUPPORT]
    depends on [EMBTK_UCLIBC_VERSION_SERIES_0_9_31_X]
    default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_NETWORK_SUPPORT && EMBTK_UCLIBC_VERSION_SERIES_0_9_31_X]
    inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_NETWORK_SUPPORT && EMBTK_UCLIBC_VERSION_SERIES_0_9_31_X]
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_EXTRA_COMPAT_RES_STATE boolean {
    prompt "Use extra compatible but extra bloated _res" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_NETWORK_SUPPORT && EMBTK_UCLIBC_VERSION_SERIES_0_9_31_X]
    depends on [KEMBTK_UCLIBC_UCLIBC_HAS_NETWORK_SUPPORT]
    depends on [EMBTK_UCLIBC_VERSION_SERIES_0_9_31_X]
    inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_NETWORK_SUPPORT && EMBTK_UCLIBC_VERSION_SERIES_0_9_31_X]
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_LIBRESOLV_STUB boolean {
    prompt "Provide libresolv stub" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_NETWORK_SUPPORT && EMBTK_UCLIBC_VERSION_SERIES_0_9_31_X]
    depends on [KEMBTK_UCLIBC_UCLIBC_HAS_NETWORK_SUPPORT]
    depends on [EMBTK_UCLIBC_VERSION_SERIES_0_9_31_X]
    inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_NETWORK_SUPPORT && EMBTK_UCLIBC_VERSION_SERIES_0_9_31_X]
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_LIBNSL_STUB boolean {
    prompt "Provide libnsl stub" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_NETWORK_SUPPORT && EMBTK_UCLIBC_VERSION_SERIES_0_9_31_X]
    depends on [KEMBTK_UCLIBC_UCLIBC_HAS_NETWORK_SUPPORT]
    depends on [EMBTK_UCLIBC_VERSION_SERIES_0_9_31_X]
    inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_NETWORK_SUPPORT && EMBTK_UCLIBC_VERSION_SERIES_0_9_31_X]
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_STRING_GENERIC_OPT boolean {
    prompt "Use faster (but larger) generic string functions" if [EMBTK_CLIB_UCLIBC]
    default [y] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_STRING_ARCH_OPT boolean {
    prompt "Use arch-specific assembly string functions (where available)" if [EMBTK_CLIB_UCLIBC]
    default [y] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_CTYPE_TABLES boolean {
    prompt "Use Table Versions Of 'ctype.h' Functions." if [EMBTK_CLIB_UCLIBC]
    default [y] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
    config KEMBTK_UCLIBC_UCLIBC_HAS_CTYPE_SIGNED boolean {
     prompt "Support Signed Characters In 'ctype.h' Functions." if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_CTYPE_TABLES]
     depends on [KEMBTK_UCLIBC_UCLIBC_HAS_CTYPE_TABLES]
     default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_CTYPE_TABLES]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_CTYPE_TABLES]
    }
    choice boolean {
     prompt "ctype argument checking" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_CTYPE_TABLES]
     depends on [KEMBTK_UCLIBC_UCLIBC_HAS_CTYPE_TABLES]
     default [KEMBTK_UCLIBC_UCLIBC_HAS_CTYPE_UNSAFE] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_CTYPE_TABLES]
     config KEMBTK_UCLIBC_UCLIBC_HAS_CTYPE_UNSAFE boolean {
      prompt "Do not check -- unsafe" if [<choice>]
      inherited [<choice>]
     }
     config KEMBTK_UCLIBC_UCLIBC_HAS_CTYPE_CHECKED boolean {
      prompt "Detect and handle appropriately" if [<choice>]
      inherited [<choice>]
     }
     config KEMBTK_UCLIBC_UCLIBC_HAS_CTYPE_ENFORCED boolean {
      prompt "Issue a diagnostic and abort()" if [<choice>]
      inherited [<choice>]
     }
    }
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_WCHAR boolean {
    prompt "Wide Character Support" if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_LOCALE boolean {
    prompt "Locale Support" if [EMBTK_CLIB_UCLIBC]
    select KEMBTK_UCLIBC_UCLIBC_HAS_WCHAR if [EMBTK_CLIB_UCLIBC]
    select KEMBTK_UCLIBC_UCLIBC_HAS_CTYPE_TABLES if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
    choice boolean {
     prompt "Locale data" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_LOCALE]
     depends on [KEMBTK_UCLIBC_UCLIBC_HAS_LOCALE]
     config KEMBTK_UCLIBC_UCLIBC_BUILD_ALL_LOCALE boolean {
      prompt "All locales" if [<choice>]
      inherited [<choice>]
     }
     config KEMBTK_UCLIBC_UCLIBC_BUILD_MINIMAL_LOCALE boolean {
      prompt "Only selected locales" if [<choice> && EMBTK_UCLIBC_VERSION_SERIES_0_9_31_X]
      depends on [EMBTK_UCLIBC_VERSION_SERIES_0_9_31_X]
      inherited [<choice> && EMBTK_UCLIBC_VERSION_SERIES_0_9_31_X]
     }
     config KEMBTK_UCLIBC_UCLIBC_PREGENERATED_LOCALE_DATA boolean {
      prompt "Use Pre-generated Locale Data" if [<choice> && KEMBTK_UCLIBC_UCLIBC_HAS_LOCALE]
      depends on [KEMBTK_UCLIBC_UCLIBC_HAS_LOCALE]
      inherited [<choice> && KEMBTK_UCLIBC_UCLIBC_HAS_LOCALE]
     }
    }
   }
   config KEMBTK_UCLIBC_UCLIBC_BUILD_MINIMAL_LOCALES string {
    prompt "locales to use" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_BUILD_MINIMAL_LOCALE && EMBTK_UCLIBC_VERSION_SERIES_0_9_31_X]
    depends on [KEMBTK_UCLIBC_UCLIBC_BUILD_MINIMAL_LOCALE]
    depends on [EMBTK_UCLIBC_VERSION_SERIES_0_9_31_X]
    default ["en_US"] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_BUILD_MINIMAL_LOCALE && EMBTK_UCLIBC_VERSION_SERIES_0_9_31_X]
    inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_BUILD_MINIMAL_LOCALE && EMBTK_UCLIBC_VERSION_SERIES_0_9_31_X]
   }
   config KEMBTK_UCLIBC_UCLIBC_DOWNLOAD_PREGENERATED_LOCALE_DATA boolean {
    prompt "Automagically Download the Pre-generated Locale Data (if necessary)" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_PREGENERATED_LOCALE_DATA]
    depends on [KEMBTK_UCLIBC_UCLIBC_PREGENERATED_LOCALE_DATA]
    inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_PREGENERATED_LOCALE_DATA]
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_XLOCALE boolean {
    prompt "Extended Locale Support (experimental/incomplete)" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_LOCALE]
    depends on [KEMBTK_UCLIBC_UCLIBC_HAS_LOCALE]
    inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_LOCALE]
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_HEXADECIMAL_FLOATS boolean {
    prompt "Support hexadecimal float notation" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_CTYPE_TABLES && KEMBTK_UCLIBC_UCLIBC_HAS_FLOATS]
    depends on [KEMBTK_UCLIBC_UCLIBC_HAS_CTYPE_TABLES]
    depends on [KEMBTK_UCLIBC_UCLIBC_HAS_FLOATS]
    default [n] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_CTYPE_TABLES && KEMBTK_UCLIBC_UCLIBC_HAS_FLOATS]
    inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_CTYPE_TABLES && KEMBTK_UCLIBC_UCLIBC_HAS_FLOATS]
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_GLIBC_DIGIT_GROUPING boolean {
    prompt "Support glibc's \"'\" flag for allowing locale-specific digit grouping" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_LOCALE && KEMBTK_UCLIBC_UCLIBC_HAS_FLOATS]
    depends on [KEMBTK_UCLIBC_UCLIBC_HAS_LOCALE]
    depends on [KEMBTK_UCLIBC_UCLIBC_HAS_FLOATS]
    default [n] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_LOCALE && KEMBTK_UCLIBC_UCLIBC_HAS_FLOATS]
    inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_LOCALE && KEMBTK_UCLIBC_UCLIBC_HAS_FLOATS]
    config KEMBTK_UCLIBC_UCLIBC_HAS_SCANF_LENIENT_DIGIT_GROUPING boolean {
     prompt "Do not require digit grouping when the \"'\" flag is specified" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_GLIBC_DIGIT_GROUPING]
     depends on [KEMBTK_UCLIBC_UCLIBC_HAS_GLIBC_DIGIT_GROUPING]
     default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_GLIBC_DIGIT_GROUPING]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_GLIBC_DIGIT_GROUPING]
    }
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_GLIBC_CUSTOM_PRINTF boolean {
    prompt "Support glibc's register_printf_function() (glibc-compat)" if [EMBTK_CLIB_UCLIBC && !KEMBTK_UCLIBC_USE_OLD_VFPRINTF]
    depends on [!KEMBTK_UCLIBC_USE_OLD_VFPRINTF]
    default [n] if [EMBTK_CLIB_UCLIBC && !KEMBTK_UCLIBC_USE_OLD_VFPRINTF]
    inherited [EMBTK_CLIB_UCLIBC && !KEMBTK_UCLIBC_USE_OLD_VFPRINTF]
   }
   config KEMBTK_UCLIBC_USE_OLD_VFPRINTF boolean {
    prompt "Use the old vfprintf implementation" if [EMBTK_CLIB_UCLIBC && !KEMBTK_UCLIBC_UCLIBC_HAS_WCHAR]
    depends on [!KEMBTK_UCLIBC_UCLIBC_HAS_WCHAR]
    default [n] if [EMBTK_CLIB_UCLIBC && !KEMBTK_UCLIBC_UCLIBC_HAS_WCHAR]
    inherited [EMBTK_CLIB_UCLIBC && !KEMBTK_UCLIBC_UCLIBC_HAS_WCHAR]
   }
   config KEMBTK_UCLIBC_UCLIBC_PRINTF_SCANF_POSITIONAL_ARGS integer {
    prompt "Maximum number of positional args.  Either 0 or >= 9." if [EMBTK_CLIB_UCLIBC && !KEMBTK_UCLIBC_USE_OLD_VFPRINTF]
    depends on [!KEMBTK_UCLIBC_USE_OLD_VFPRINTF]
    default [9] if [EMBTK_CLIB_UCLIBC && !KEMBTK_UCLIBC_USE_OLD_VFPRINTF]
    inherited [EMBTK_CLIB_UCLIBC && !KEMBTK_UCLIBC_USE_OLD_VFPRINTF]
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_SCANF_GLIBC_A_FLAG boolean {
    prompt "Support glibc's 'a' flag for scanf string conversions (not implemented)" if [EMBTK_CLIB_UCLIBC]
    default [n] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   choice boolean {
    prompt "Stdio buffer size" if [EMBTK_CLIB_UCLIBC]
    default [KEMBTK_UCLIBC_UCLIBC_HAS_STDIO_BUFSIZ_4096] if [EMBTK_CLIB_UCLIBC]
    config KEMBTK_UCLIBC_UCLIBC_HAS_STDIO_BUFSIZ_NONE boolean {
     prompt "none (WARNING - BUFSIZ will be 256 in stdio.h)" if [<choice> && !KEMBTK_UCLIBC_UCLIBC_HAS_WCHAR]
     depends on [!KEMBTK_UCLIBC_UCLIBC_HAS_WCHAR]
     inherited [<choice> && !KEMBTK_UCLIBC_UCLIBC_HAS_WCHAR]
    }
    config KEMBTK_UCLIBC_UCLIBC_HAS_STDIO_BUFSIZ_256 boolean {
     prompt "256 (minimum ANSI/ISO C99 value)" if [<choice>]
     inherited [<choice>]
    }
    config KEMBTK_UCLIBC_UCLIBC_HAS_STDIO_BUFSIZ_512 boolean {
     prompt "512" if [<choice>]
     inherited [<choice>]
    }
    config KEMBTK_UCLIBC_UCLIBC_HAS_STDIO_BUFSIZ_1024 boolean {
     prompt "1024" if [<choice>]
     inherited [<choice>]
    }
    config KEMBTK_UCLIBC_UCLIBC_HAS_STDIO_BUFSIZ_2048 boolean {
     prompt "2048" if [<choice>]
     inherited [<choice>]
    }
    config KEMBTK_UCLIBC_UCLIBC_HAS_STDIO_BUFSIZ_4096 boolean {
     prompt "4096" if [<choice>]
     inherited [<choice>]
    }
    config KEMBTK_UCLIBC_UCLIBC_HAS_STDIO_BUFSIZ_8192 boolean {
     prompt "8192" if [<choice>]
     inherited [<choice>]
    }
   }
   choice boolean {
    prompt "Stdio builtin buffer size (uClibc-specific)" if [EMBTK_CLIB_UCLIBC && !KEMBTK_UCLIBC_UCLIBC_HAS_STDIO_BUFSIZ_NONE]
    depends on [!KEMBTK_UCLIBC_UCLIBC_HAS_STDIO_BUFSIZ_NONE]
    default [KEMBTK_UCLIBC_UCLIBC_HAS_STDIO_BUILTIN_BUFFER_NONE] if [EMBTK_CLIB_UCLIBC && !KEMBTK_UCLIBC_UCLIBC_HAS_STDIO_BUFSIZ_NONE]
    config KEMBTK_UCLIBC_UCLIBC_HAS_STDIO_BUILTIN_BUFFER_NONE boolean {
     prompt "None" if [<choice>]
     inherited [<choice>]
    }
    config KEMBTK_UCLIBC_UCLIBC_HAS_STDIO_BUILTIN_BUFFER_4 boolean {
     prompt "4" if [<choice>]
     inherited [<choice>]
    }
    config KEMBTK_UCLIBC_UCLIBC_HAS_STDIO_BUILTIN_BUFFER_8 boolean {
     prompt "8" if [<choice>]
     inherited [<choice>]
    }
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_STDIO_SHUTDOWN_ON_ABORT boolean {
    prompt "Attempt to shutdown stdio subsystem when abort() is called." if [EMBTK_CLIB_UCLIBC]
    default [n] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_STDIO_GETC_MACRO boolean {
    prompt "Provide a macro version of getc()" if [EMBTK_CLIB_UCLIBC && !KEMBTK_UCLIBC_UCLIBC_HAS_STDIO_BUFSIZ_NONE]
    depends on [!KEMBTK_UCLIBC_UCLIBC_HAS_STDIO_BUFSIZ_NONE]
    default [y] if [EMBTK_CLIB_UCLIBC && !KEMBTK_UCLIBC_UCLIBC_HAS_STDIO_BUFSIZ_NONE]
    inherited [EMBTK_CLIB_UCLIBC && !KEMBTK_UCLIBC_UCLIBC_HAS_STDIO_BUFSIZ_NONE]
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_STDIO_PUTC_MACRO boolean {
    prompt "Provide a macro version of putc()" if [EMBTK_CLIB_UCLIBC && !KEMBTK_UCLIBC_UCLIBC_HAS_STDIO_BUFSIZ_NONE]
    depends on [!KEMBTK_UCLIBC_UCLIBC_HAS_STDIO_BUFSIZ_NONE]
    default [y] if [EMBTK_CLIB_UCLIBC && !KEMBTK_UCLIBC_UCLIBC_HAS_STDIO_BUFSIZ_NONE]
    inherited [EMBTK_CLIB_UCLIBC && !KEMBTK_UCLIBC_UCLIBC_HAS_STDIO_BUFSIZ_NONE]
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_STDIO_AUTO_RW_TRANSITION boolean {
    prompt "Support auto-r/w transition" if [EMBTK_CLIB_UCLIBC]
    default [y] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_FOPEN_LARGEFILE_MODE boolean {
    prompt "Support an fopen() 'F' flag for large file mode (uClibc-specific)" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_LFS]
    depends on [KEMBTK_UCLIBC_UCLIBC_HAS_LFS]
    default [n] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_LFS]
    inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_LFS]
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_FOPEN_EXCLUSIVE_MODE boolean {
    prompt "Support an fopen() 'x' flag for exclusive mode (glibc-compat)" if [EMBTK_CLIB_UCLIBC]
    default [n] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_GLIBC_CUSTOM_STREAMS boolean {
    prompt "Support fmemopen(), open_memstream(), and fopencookie() (glibc-compat)" if [EMBTK_CLIB_UCLIBC]
    default [n] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_PRINTF_M_SPEC boolean {
    prompt "Support the '%m' specifier in printf format strings (glibc-compat)" if [EMBTK_CLIB_UCLIBC]
    default [n] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_ERRNO_MESSAGES boolean {
    prompt "Include the errno message text in the library" if [EMBTK_CLIB_UCLIBC]
    default [y] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
    config KEMBTK_UCLIBC_UCLIBC_HAS_SYS_ERRLIST boolean {
     prompt "Support sys_errlist[] (obsolete-compat)" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_ERRNO_MESSAGES]
     depends on [KEMBTK_UCLIBC_UCLIBC_HAS_ERRNO_MESSAGES]
     default [n] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_ERRNO_MESSAGES]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_ERRNO_MESSAGES]
    }
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_SIGNUM_MESSAGES boolean {
    prompt "Include the signum message text in the library" if [EMBTK_CLIB_UCLIBC]
    default [y] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
    config KEMBTK_UCLIBC_UCLIBC_HAS_SYS_SIGLIST boolean {
     prompt "Support sys_siglist[] (bsd-compat)" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_SIGNUM_MESSAGES]
     depends on [KEMBTK_UCLIBC_UCLIBC_HAS_SIGNUM_MESSAGES]
     default [n] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_SIGNUM_MESSAGES]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_SIGNUM_MESSAGES]
    }
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_GETTEXT_AWARENESS boolean {
    prompt "Include gettext awareness" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_LOCALE && KEMBTK_UCLIBC_UCLIBC_MJN3_ONLY]
    depends on [KEMBTK_UCLIBC_UCLIBC_HAS_LOCALE && KEMBTK_UCLIBC_UCLIBC_MJN3_ONLY]
    default [n] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_LOCALE && KEMBTK_UCLIBC_UCLIBC_MJN3_ONLY]
    inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_LOCALE && KEMBTK_UCLIBC_UCLIBC_MJN3_ONLY]
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_GNU_GETOPT boolean {
    prompt "Support gnu getopt" if [EMBTK_CLIB_UCLIBC]
    default [y] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
    config KEMBTK_UCLIBC_UCLIBC_HAS_GETOPT_LONG boolean {
     prompt "Support getopt_long/getopt_long_only" if [EMBTK_CLIB_UCLIBC && !KEMBTK_UCLIBC_UCLIBC_HAS_GNU_GETOPT]
     depends on [!KEMBTK_UCLIBC_UCLIBC_HAS_GNU_GETOPT]
     default [y] if [EMBTK_CLIB_UCLIBC && !KEMBTK_UCLIBC_UCLIBC_HAS_GNU_GETOPT]
     inherited [EMBTK_CLIB_UCLIBC && !KEMBTK_UCLIBC_UCLIBC_HAS_GNU_GETOPT]
    }
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_GNU_GETSUBOPT boolean {
    prompt "Support glibc getsubopt" if [EMBTK_CLIB_UCLIBC]
    default [y] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_REGEX boolean {
    prompt "Regular Expression Support" if [EMBTK_CLIB_UCLIBC]
    default [y] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
    config KEMBTK_UCLIBC_UCLIBC_HAS_REGEX_OLD boolean {
     prompt "Use the older (stable) regular expression code" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_REGEX]
     depends on [KEMBTK_UCLIBC_UCLIBC_HAS_REGEX]
     default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_REGEX]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_REGEX]
    }
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_FNMATCH boolean {
    prompt "fnmatch Support" if [EMBTK_CLIB_UCLIBC]
    default [y] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
    config KEMBTK_UCLIBC_UCLIBC_HAS_FNMATCH_OLD boolean {
     prompt "Use the older (stable) fnmatch code" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_FNMATCH]
     depends on [KEMBTK_UCLIBC_UCLIBC_HAS_FNMATCH]
     default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_FNMATCH]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_FNMATCH]
    }
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_WORDEXP boolean {
    prompt "Support the wordexp() interface" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_GLOB]
    depends on [KEMBTK_UCLIBC_UCLIBC_HAS_GLOB]
    inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_GLOB]
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_NFTW boolean {
    prompt "Support the nftw() interface" if [EMBTK_CLIB_UCLIBC && EMBTK_UCLIBC_VERSION_SERIES_0_9_31_X]
    depends on [EMBTK_UCLIBC_VERSION_SERIES_0_9_31_X]
    inherited [EMBTK_CLIB_UCLIBC && EMBTK_UCLIBC_VERSION_SERIES_0_9_31_X]
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_FTW boolean {
    prompt "Support the ftw() and nftw() interfaces" if [EMBTK_CLIB_UCLIBC]
    default [n] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_GLOB boolean {
    prompt "Support the glob() interface" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_FNMATCH]
    depends on [KEMBTK_UCLIBC_UCLIBC_HAS_FNMATCH]
    default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_FNMATCH]
    inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_FNMATCH]
    config KEMBTK_UCLIBC_UCLIBC_HAS_GNU_GLOB boolean {
     prompt "Support gnu glob() interface" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_GLOB]
     depends on [KEMBTK_UCLIBC_UCLIBC_HAS_GLOB]
     default [n] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_GLOB]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_GLOB]
    }
   }
   config KEMBTK_UCLIBC_SHARED_LIB_LOADER_PREFIX string {
    depends on [KEMBTK_UCLIBC_HAVE_SHARED]
    default ["$(RUNTIME_PREFIX)lib"] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_HAVE_SHARED]
    inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_HAVE_SHARED]
   }
   config KEMBTK_UCLIBC_RUNTIME_PREFIX string {
    default ["/usr/$(TARGET_ARCH)-linux-uclibc/"] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_DEVEL_PREFIX string {
    default ["/usr/$(TARGET_ARCH)-linux-uclibc/usr/"] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_MULTILIB_DIR string {
    default ["lib"] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_HARDWIRED_ABSPATH boolean {
    prompt "Hardwire absolute paths into linker scripts" if [EMBTK_CLIB_UCLIBC && EMBTK_UCLIBC_VERSION_SERIES_0_9_31_X]
    depends on [EMBTK_UCLIBC_VERSION_SERIES_0_9_31_X]
    default [y] if [EMBTK_CLIB_UCLIBC && EMBTK_UCLIBC_VERSION_SERIES_0_9_31_X]
    inherited [EMBTK_CLIB_UCLIBC && EMBTK_UCLIBC_VERSION_SERIES_0_9_31_X]
   }
   config KEMBTK_UCLIBC_UCLIBC_BUILD_PIE boolean {
    prompt "Build utilities as ET_DYN/PIE executables" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_HAVE_SHARED && (KEMBTK_UCLIBC_TARGET_arm || KEMBTK_UCLIBC_TARGET_frv || KEMBTK_UCLIBC_TARGET_i386 || KEMBTK_UCLIBC_TARGET_mips || KEMBTK_UCLIBC_TARGET_powerpc)]
    depends on [KEMBTK_UCLIBC_HAVE_SHARED]
    depends on [KEMBTK_UCLIBC_TARGET_arm || KEMBTK_UCLIBC_TARGET_frv || KEMBTK_UCLIBC_TARGET_i386 || KEMBTK_UCLIBC_TARGET_mips || KEMBTK_UCLIBC_TARGET_powerpc]
    select KEMBTK_UCLIBC_FORCE_SHAREABLE_TEXT_SEGMENTS if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_HAVE_SHARED && (KEMBTK_UCLIBC_TARGET_arm || KEMBTK_UCLIBC_TARGET_frv || KEMBTK_UCLIBC_TARGET_i386 || KEMBTK_UCLIBC_TARGET_mips || KEMBTK_UCLIBC_TARGET_powerpc)]
    default [n] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_HAVE_SHARED && (KEMBTK_UCLIBC_TARGET_arm || KEMBTK_UCLIBC_TARGET_frv || KEMBTK_UCLIBC_TARGET_i386 || KEMBTK_UCLIBC_TARGET_mips || KEMBTK_UCLIBC_TARGET_powerpc)]
    inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_HAVE_SHARED && (KEMBTK_UCLIBC_TARGET_arm || KEMBTK_UCLIBC_TARGET_frv || KEMBTK_UCLIBC_TARGET_i386 || KEMBTK_UCLIBC_TARGET_mips || KEMBTK_UCLIBC_TARGET_powerpc)]
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_ARC4RANDOM boolean {
    prompt "Include the arc4random() function" if [EMBTK_CLIB_UCLIBC]
    default [n] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_HAVE_NO_SSP boolean {
    default [n] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_UCLIBC_HAS_SSP boolean {
    prompt "Support for GCC stack smashing protector" if [EMBTK_CLIB_UCLIBC && !KEMBTK_UCLIBC_HAVE_NO_SSP]
    depends on [!KEMBTK_UCLIBC_HAVE_NO_SSP]
    default [n] if [EMBTK_CLIB_UCLIBC && !KEMBTK_UCLIBC_HAVE_NO_SSP]
    inherited [EMBTK_CLIB_UCLIBC && !KEMBTK_UCLIBC_HAVE_NO_SSP]
    config KEMBTK_UCLIBC_UCLIBC_HAS_SSP_COMPAT boolean {
     prompt "Support for gcc-3.x propolice smashing stack protector" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_SSP]
     depends on [KEMBTK_UCLIBC_UCLIBC_HAS_SSP]
     default [n] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_SSP]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_SSP]
    }
    config KEMBTK_UCLIBC_SSP_QUICK_CANARY boolean {
     prompt "Use simple guard values without accessing /dev/urandom" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_SSP]
     depends on [KEMBTK_UCLIBC_UCLIBC_HAS_SSP]
     default [n] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_SSP]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_SSP]
    }
    choice boolean {
     prompt "Propolice protection blocking signal" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_SSP]
     depends on [KEMBTK_UCLIBC_UCLIBC_HAS_SSP]
     default [KEMBTK_UCLIBC_PROPOLICE_BLOCK_ABRT] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_SSP && !KEMBTK_UCLIBC_DODEBUG]
     default [KEMBTK_UCLIBC_PROPOLICE_BLOCK_SEGV] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_SSP && KEMBTK_UCLIBC_DODEBUG]
     config KEMBTK_UCLIBC_PROPOLICE_BLOCK_ABRT boolean {
      prompt "abort" if [<choice>]
      inherited [<choice>]
     }
     config KEMBTK_UCLIBC_PROPOLICE_BLOCK_SEGV boolean {
      prompt "segfault" if [<choice>]
      inherited [<choice>]
     }
    }
    config KEMBTK_UCLIBC_UCLIBC_BUILD_SSP boolean {
     prompt "Build uClibc with -fstack-protector" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_SSP]
     depends on [KEMBTK_UCLIBC_UCLIBC_HAS_SSP]
     default [n] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_SSP]
     inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_SSP]
    }
   }
   config KEMBTK_UCLIBC_UCLIBC_BUILD_RELRO boolean {
    prompt "Build uClibc with linker option -z RELRO" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_HAVE_SHARED]
    depends on [KEMBTK_UCLIBC_HAVE_SHARED]
    default [y] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_HAVE_SHARED]
    inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_HAVE_SHARED]
   }
   config KEMBTK_UCLIBC_UCLIBC_BUILD_NOW boolean {
    prompt "Build uClibc with linker option -z NOW" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_HAVE_SHARED]
    depends on [KEMBTK_UCLIBC_HAVE_SHARED]
    default [n] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_HAVE_SHARED]
    inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_HAVE_SHARED]
   }
   config KEMBTK_UCLIBC_UCLIBC_BUILD_NOEXECSTACK boolean {
    prompt "Build uClibc with noexecstack marking" if [EMBTK_CLIB_UCLIBC]
    default [y] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_CROSS_COMPILER_PREFIX string {
    default [""] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_UCLIBC_EXTRA_CFLAGS string {
    default [""] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_DODEBUG boolean {
    prompt "Build uClibc with debugging symbols" if [EMBTK_CLIB_UCLIBC]
    default [n] if [EMBTK_CLIB_UCLIBC]
    select KEMBTK_UCLIBC_EXTRA_WARNINGS if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_DODEBUG_PT boolean {
    prompt "Build pthread with debugging output" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_THREADS && KEMBTK_UCLIBC_LINUXTHREADS_OLD]
    depends on [KEMBTK_UCLIBC_UCLIBC_HAS_THREADS && KEMBTK_UCLIBC_LINUXTHREADS_OLD]
    default [n] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_THREADS && KEMBTK_UCLIBC_LINUXTHREADS_OLD]
    inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_UCLIBC_HAS_THREADS && KEMBTK_UCLIBC_LINUXTHREADS_OLD]
   }
   config KEMBTK_UCLIBC_DOSTRIP boolean {
    prompt "Strip libraries and executables" if [EMBTK_CLIB_UCLIBC && !KEMBTK_UCLIBC_DODEBUG]
    default [y] if [EMBTK_CLIB_UCLIBC && !KEMBTK_UCLIBC_DODEBUG]
    depends on [!KEMBTK_UCLIBC_DODEBUG]
    inherited [EMBTK_CLIB_UCLIBC && !KEMBTK_UCLIBC_DODEBUG]
   }
   config KEMBTK_UCLIBC_DOASSERTS boolean {
    prompt "Build uClibc with run-time assertion testing" if [EMBTK_CLIB_UCLIBC]
    default [n] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_SUPPORT_LD_DEBUG boolean {
    prompt "Build the shared library loader with debugging support" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_HAVE_SHARED]
    depends on [KEMBTK_UCLIBC_HAVE_SHARED]
    default [n] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_HAVE_SHARED]
    inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_HAVE_SHARED]
   }
   config KEMBTK_UCLIBC_SUPPORT_LD_DEBUG_EARLY boolean {
    prompt "Build the shared library loader with early debugging support" if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_HAVE_SHARED]
    depends on [KEMBTK_UCLIBC_HAVE_SHARED]
    default [n] if [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_HAVE_SHARED]
    inherited [EMBTK_CLIB_UCLIBC && KEMBTK_UCLIBC_HAVE_SHARED]
   }
   config KEMBTK_UCLIBC_UCLIBC_MALLOC_DEBUGGING boolean {
    prompt "Build malloc with debugging support" if [EMBTK_CLIB_UCLIBC && (KEMBTK_UCLIBC_MALLOC || KEMBTK_UCLIBC_MALLOC_STANDARD)]
    depends on [KEMBTK_UCLIBC_MALLOC || KEMBTK_UCLIBC_MALLOC_STANDARD]
    default [n] if [EMBTK_CLIB_UCLIBC && (KEMBTK_UCLIBC_MALLOC || KEMBTK_UCLIBC_MALLOC_STANDARD)]
    inherited [EMBTK_CLIB_UCLIBC && (KEMBTK_UCLIBC_MALLOC || KEMBTK_UCLIBC_MALLOC_STANDARD)]
   }
   config KEMBTK_UCLIBC_WARNINGS string {
    prompt "Compiler Warnings" if [EMBTK_CLIB_UCLIBC]
    default ["-Wall"] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_EXTRA_WARNINGS boolean {
    prompt "Enable extra annoying warnings" if [EMBTK_CLIB_UCLIBC]
    default [n] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_DOMULTI boolean {
    prompt "Compile all sources at once into an object" if [EMBTK_CLIB_UCLIBC]
    default [n] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
   config KEMBTK_UCLIBC_UCLIBC_MJN3_ONLY boolean {
    prompt "Manuel's hidden warnings" if [EMBTK_CLIB_UCLIBC]
    default [n] if [EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_CLIB_UCLIBC]
   }
  }
 }
 menu "GCC compiler" {
  choice boolean {
   prompt "GCC series to use" if []
   config EMBTK_GCC_VERSION_4_5_X boolean {
    prompt "gcc-4.5.x" if [<choice>]
    inherited [<choice>]
   }
   config EMBTK_GCC_VERSION_4_4_X boolean {
    prompt "gcc-4.4.x" if [<choice>]
    inherited [<choice>]
   }
   config EMBTK_GCC_VERSION_4_3_X boolean {
    prompt "gcc-4.3.x" if [<choice>]
    inherited [<choice>]
   }
   config EMBTK_GCC_VERSION_4_2_X boolean {
    prompt "gcc-4.2.x" if [<choice>]
    inherited [<choice>]
   }
   config EMBTK_GCC_VERSION_4_1_X boolean {
    prompt "gcc-4.1.x" if [<choice>]
    inherited [<choice>]
   }
  }
  choice boolean {
   prompt "Version of gcc-4.5.x you wish" if [EMBTK_GCC_VERSION_4_5_X]
   depends on [EMBTK_GCC_VERSION_4_5_X]
   config EMBTK_GCC_VERSION_4_5_1 boolean {
    prompt "gcc-4.5.1" if [<choice>]
    select EMBTK_GCC_NEED_PATCH if [<choice>]
    inherited [<choice>]
   }
   config EMBTK_GCC_VERSION_4_5_0 boolean {
    prompt "gcc-4.5.0" if [<choice> && EMBTK_OLDPACKAGES]
    depends on [EMBTK_OLDPACKAGES]
    inherited [<choice> && EMBTK_OLDPACKAGES]
   }
  }
  choice boolean {
   prompt "Version of gcc-4.4.x you wish" if [EMBTK_GCC_VERSION_4_4_X]
   depends on [EMBTK_GCC_VERSION_4_4_X]
   config EMBTK_GCC_VERSION_4_4_4 boolean {
    prompt "gcc-4.4.4" if [<choice>]
    select EMBTK_GCC_NEED_PATCH if [<choice>]
    inherited [<choice>]
   }
   config EMBTK_GCC_VERSION_4_4_3 boolean {
    depends on [EMBTK_OLDPACKAGES]
    prompt "gcc-4.4.3" if [<choice> && EMBTK_OLDPACKAGES]
    select EMBTK_GCC_NEED_PATCH if [<choice> && EMBTK_OLDPACKAGES]
    inherited [<choice> && EMBTK_OLDPACKAGES]
   }
   config EMBTK_GCC_VERSION_4_4_2 boolean {
    depends on [EMBTK_OLDPACKAGES]
    prompt "gcc-4.4.2" if [<choice> && EMBTK_OLDPACKAGES]
    select EMBTK_GCC_NEED_PATCH if [<choice> && EMBTK_OLDPACKAGES]
    inherited [<choice> && EMBTK_OLDPACKAGES]
   }
   config EMBTK_GCC_VERSION_4_4_1 boolean {
    depends on [EMBTK_OLDPACKAGES]
    prompt "gcc-4.4.1" if [<choice> && EMBTK_OLDPACKAGES]
    select EMBTK_GCC_NEED_PATCH if [<choice> && EMBTK_OLDPACKAGES]
    inherited [<choice> && EMBTK_OLDPACKAGES]
   }
  }
  choice boolean {
   prompt "Version of gcc-4.3.x you wish" if [EMBTK_GCC_VERSION_4_3_X]
   depends on [EMBTK_GCC_VERSION_4_3_X]
   config EMBTK_GCC_VERSION_4_3_5 boolean {
    prompt "gcc-4.3.5" if [<choice>]
    inherited [<choice>]
   }
   config EMBTK_GCC_VERSION_4_3_4 boolean {
    depends on [EMBTK_OLDPACKAGES]
    prompt "gcc-4.3.4" if [<choice> && EMBTK_OLDPACKAGES]
    select EMBTK_GCC_NEED_PATCH if [<choice> && EMBTK_OLDPACKAGES]
    inherited [<choice> && EMBTK_OLDPACKAGES]
   }
   config EMBTK_GCC_VERSION_4_3_3 boolean {
    depends on [EMBTK_OLDPACKAGES]
    prompt "gcc-4.3.3" if [<choice> && EMBTK_OLDPACKAGES]
    select EMBTK_GCC_NEED_PATCH if [<choice> && EMBTK_OLDPACKAGES]
    inherited [<choice> && EMBTK_OLDPACKAGES]
   }
   config EMBTK_GCC_VERSION_4_3_2 boolean {
    depends on [EMBTK_OLDPACKAGES]
    prompt "gcc-4.3.2" if [<choice> && EMBTK_OLDPACKAGES]
    select EMBTK_GCC_NEED_PATCH if [<choice> && EMBTK_OLDPACKAGES]
    inherited [<choice> && EMBTK_OLDPACKAGES]
   }
  }
  choice boolean {
   prompt "Version of gcc-4.2.x you wish" if [EMBTK_GCC_VERSION_4_2_X]
   depends on [EMBTK_GCC_VERSION_4_2_X]
   config EMBTK_GCC_VERSION_4_2_4 boolean {
    prompt "gcc-4.2.4" if [<choice>]
    inherited [<choice>]
   }
  }
  choice boolean {
   prompt "Version of gcc-4.1.x you wish" if [EMBTK_GCC_VERSION_4_1_X]
   depends on [EMBTK_GCC_VERSION_4_1_X]
   config EMBTK_GCC_VERSION_4_1_2 boolean {
    prompt "gcc-4.1.2" if [<choice>]
    select EMBTK_GCC_NEED_PATCH if [<choice>]
    inherited [<choice>]
   }
  }
  config EMBTK_GCC_NEED_PATCH boolean {
  }
  config EMBTK_GCC_HAVE_MIRROR boolean {
   prompt "Use a gcc mirror" if []
   config EMBTK_GCC_HAVE_MIRROR_SITE string {
    depends on [EMBTK_GCC_HAVE_MIRROR]
    prompt "Mirror site" if [EMBTK_GCC_HAVE_MIRROR]
    default ["ftp://ftp.lip6.fr/pub/gcc/releases/gcc-4.4.1"] if [EMBTK_GCC_HAVE_MIRROR]
    inherited [EMBTK_GCC_HAVE_MIRROR]
   }
  }
  config EMBTK_GCC_MORE_LANGUAGES boolean {
   prompt "Support additional languages" if []
   config EMBTK_GCC_LANGUAGE_CPP boolean {
    prompt "Support C++" if [EMBTK_GCC_MORE_LANGUAGES]
    depends on [EMBTK_GCC_MORE_LANGUAGES]
    select KEMBTK_UCLIBC_UCLIBC_HAS_FLOATS if [EMBTK_GCC_MORE_LANGUAGES && EMBTK_CLIB_UCLIBC]
    select KEMBTK_UCLIBC_UCLIBC_SUSV3_LEGACY if [EMBTK_GCC_MORE_LANGUAGES && EMBTK_CLIB_UCLIBC]
    select KEMBTK_UCLIBC_UCLIBC_CTOR_DTOR if [EMBTK_GCC_MORE_LANGUAGES && EMBTK_CLIB_UCLIBC]
    select KEMBTK_UCLIBC_UCLIBC_DYNAMIC_ATEXIT if [EMBTK_GCC_MORE_LANGUAGES && EMBTK_CLIB_UCLIBC]
    select KEMBTK_EGLIBC_OPTION_EGLIBC_LIBM if [EMBTK_GCC_MORE_LANGUAGES && EMBTK_CLIB_EGLIBC]
    select KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR if [EMBTK_GCC_MORE_LANGUAGES && EMBTK_CLIB_EGLIBC]
    select KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO if [EMBTK_GCC_MORE_LANGUAGES && EMBTK_CLIB_EGLIBC]
    inherited [EMBTK_GCC_MORE_LANGUAGES]
   }
   config EMBTK_GCC_LANGUAGE_OBJECTIVEC boolean {
    prompt "Support Objective-C" if [EMBTK_GCC_MORE_LANGUAGES && !EMBTK_CLIB_UCLIBC]
    depends on [EMBTK_GCC_MORE_LANGUAGES]
    depends on [!EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_GCC_MORE_LANGUAGES && !EMBTK_CLIB_UCLIBC]
   }
   config EMBTK_GCC_LANGUAGE_OBJECTIVECPP boolean {
    prompt "Support Objective-C++" if [EMBTK_GCC_MORE_LANGUAGES && !EMBTK_CLIB_UCLIBC]
    depends on [EMBTK_GCC_MORE_LANGUAGES]
    depends on [!EMBTK_CLIB_UCLIBC]
    inherited [EMBTK_GCC_MORE_LANGUAGES && !EMBTK_CLIB_UCLIBC]
   }
   config EMBTK_GCC_LANGUAGE_FORTRAN boolean {
    prompt "Support Fortran" if [EMBTK_GCC_MORE_LANGUAGES]
    depends on [EMBTK_GCC_MORE_LANGUAGES]
    inherited [EMBTK_GCC_MORE_LANGUAGES]
   }
  }
  config EMBTK_GCC_VERSION_STRING string {
   default ["4.5.1"] if [EMBTK_GCC_VERSION_4_5_1]
   default ["4.5.0"] if [EMBTK_GCC_VERSION_4_5_0]
   default ["4.4.4"] if [EMBTK_GCC_VERSION_4_4_4]
   default ["4.4.3"] if [EMBTK_GCC_VERSION_4_4_3]
   default ["4.4.2"] if [EMBTK_GCC_VERSION_4_4_2]
   default ["4.4.1"] if [EMBTK_GCC_VERSION_4_4_1]
   default ["4.3.5"] if [EMBTK_GCC_VERSION_4_3_5]
   default ["4.3.4"] if [EMBTK_GCC_VERSION_4_3_4]
   default ["4.3.3"] if [EMBTK_GCC_VERSION_4_3_3]
   default ["4.3.2"] if [EMBTK_GCC_VERSION_4_3_2]
   default ["4.2.4"] if [EMBTK_GCC_VERSION_4_2_4]
   default ["4.1.2"] if [EMBTK_GCC_VERSION_4_1_2]
  }
 }
 menu "Binutils" {
  choice boolean {
   prompt "Version of binutils you wish" if []
   config EMBTK_BINUTILS_VERSION_2_20_1 boolean {
    prompt "binutils-2.20.1" if [<choice>]
    inherited [<choice>]
   }
   config EMBTK_BINUTILS_VERSION_2_20 boolean {
    prompt "binutils-2.20" if [<choice>]
    inherited [<choice>]
   }
   config EMBTK_BINUTILS_VERSION_2_19_1 boolean {
    prompt "binutils-2.19.1" if [<choice>]
    select EMBTK_BINUTILS_NEED_PATCH if [<choice>]
    inherited [<choice>]
   }
  }
  config EMBTK_BINUTILS_NEED_PATCH boolean {
  }
  config EMBTK_BINUTILS_VERSION_STRING string {
   default ["2.20.1"] if [EMBTK_BINUTILS_VERSION_2_20_1]
   default ["2.20"] if [EMBTK_BINUTILS_VERSION_2_20]
   default ["2.19.1"] if [EMBTK_BINUTILS_VERSION_2_19_1]
  }
 }
 menu "Linux kernel headers" {
  choice boolean {
   prompt "Linux series to use" if []
   config EMBTK_LINUX_VERSION_2_6_35_X boolean {
    prompt "linux-2.6.35.x" if [<choice>]
    inherited [<choice>]
   }
   config EMBTK_LINUX_VERSION_2_6_34_X boolean {
    prompt "linux-2.6.34.x" if [<choice>]
    inherited [<choice>]
   }
   config EMBTK_LINUX_VERSION_2_6_33_X boolean {
    prompt "linux-2.6.33.x" if [<choice>]
    inherited [<choice>]
   }
   config EMBTK_LINUX_VERSION_2_6_32_X boolean {
    prompt "linux-2.6.32.x" if [<choice>]
    inherited [<choice>]
   }
   config EMBTK_LINUX_VERSION_2_6_31_X boolean {
    prompt "linux-2.6.31.x" if [<choice>]
    inherited [<choice>]
   }
   config EMBTK_LINUX_VERSION_2_6_30_X boolean {
    prompt "linux-2.6.30.x" if [<choice>]
    inherited [<choice>]
   }
   config EMBTK_LINUX_VERSION_2_6_29_X boolean {
    prompt "linux-2.6.29.x" if [<choice>]
    inherited [<choice>]
   }
   config EMBTK_LINUX_VERSION_2_6_28_X boolean {
    prompt "linux-2.6.28.x" if [<choice>]
    inherited [<choice>]
   }
   config EMBTK_LINUX_VERSION_2_6_27_X boolean {
    prompt "linux-2.6.27.x" if [<choice>]
    inherited [<choice>]
   }
  }
  if [EMBTK_LINUX_VERSION_2_6_35_X] {
   choice boolean {
    prompt "Linux v2.6.35.x series exact version to use." if [EMBTK_LINUX_VERSION_2_6_35_X]
    config EMBTK_LINUX_VERSION_2_6_35_3 boolean {
     prompt "linux-2.6.35.3" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_35_2 boolean {
     prompt "linux-2.6.35.2" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_35_1 boolean {
     prompt "linux-2.6.35.1" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_35 boolean {
     prompt "linux-2.6.35" if [<choice>]
     inherited [<choice>]
    }
   }
   config EMBTK_LINUX_VERSION_STRING string {
    default ["2.6.35.3"] if [EMBTK_LINUX_VERSION_2_6_35_X && EMBTK_LINUX_VERSION_2_6_35_3]
    default ["2.6.35.2"] if [EMBTK_LINUX_VERSION_2_6_35_X && EMBTK_LINUX_VERSION_2_6_35_2]
    default ["2.6.35.1"] if [EMBTK_LINUX_VERSION_2_6_35_X && EMBTK_LINUX_VERSION_2_6_35_1]
    default ["2.6.35"] if [EMBTK_LINUX_VERSION_2_6_35_X && EMBTK_LINUX_VERSION_2_6_35]
    default ["2.6.34.5"] if [EMBTK_LINUX_VERSION_2_6_34_X && EMBTK_LINUX_VERSION_2_6_34_5]
    default ["2.6.34.4"] if [EMBTK_LINUX_VERSION_2_6_34_X && EMBTK_LINUX_VERSION_2_6_34_4]
    default ["2.6.34.3"] if [EMBTK_LINUX_VERSION_2_6_34_X && EMBTK_LINUX_VERSION_2_6_34_3]
    default ["2.6.34.2"] if [EMBTK_LINUX_VERSION_2_6_34_X && EMBTK_LINUX_VERSION_2_6_34_2]
    default ["2.6.34.1"] if [EMBTK_LINUX_VERSION_2_6_34_X && EMBTK_LINUX_VERSION_2_6_34_1]
    default ["2.6.34"] if [EMBTK_LINUX_VERSION_2_6_34_X && EMBTK_LINUX_VERSION_2_6_34]
    default ["2.6.33.7"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_7]
    default ["2.6.33.6"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_6]
    default ["2.6.33.5"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_5]
    default ["2.6.33.4"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_4]
    default ["2.6.33.3"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_3]
    default ["2.6.33.2"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_2]
    default ["2.6.33.1"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_1]
    default ["2.6.33"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33]
    default ["2.6.32.20"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_20]
    default ["2.6.32.19"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_19]
    default ["2.6.32.18"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_18]
    default ["2.6.32.17"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_17]
    default ["2.6.32.16"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_16]
    default ["2.6.32.15"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_15]
    default ["2.6.32.14"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_14]
    default ["2.6.32.13"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_13]
    default ["2.6.32.12"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_12]
    default ["2.6.32.11"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_11]
    default ["2.6.32.10"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_10]
    default ["2.6.32.9"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_9]
    default ["2.6.32.8"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_8]
    default ["2.6.32.7"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_7]
    default ["2.6.32.6"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_6]
    default ["2.6.32.5"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_5]
    default ["2.6.32.4"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_4]
    default ["2.6.32.3"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_3]
    default ["2.6.32.2"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_2]
    default ["2.6.32.1"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_1]
    default ["2.6.32"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32]
    default ["2.6.31.14"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_14]
    default ["2.6.31.13"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_13]
    default ["2.6.31.12"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_12]
    default ["2.6.31.11"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_11]
    default ["2.6.31.10"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_10]
    default ["2.6.31.9"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_9]
    default ["2.6.31.8"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_8]
    default ["2.6.31.7"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_7]
    default ["2.6.31.6"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_6]
    default ["2.6.31.5"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_5]
    default ["2.6.31.4"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_4]
    default ["2.6.31.3"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_3]
    default ["2.6.31.2"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_2]
    default ["2.6.31.1"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_1]
    default ["2.6.31"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31]
    default ["2.6.30.10"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_10]
    default ["2.6.30.9"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_9]
    default ["2.6.30.8"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_8]
    default ["2.6.30.7"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_7]
    default ["2.6.30.6"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_6]
    default ["2.6.30.5"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_5]
    default ["2.6.30.4"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_4]
    default ["2.6.30.3"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_3]
    default ["2.6.30.2"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_2]
    default ["2.6.30.1"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_1]
    default ["2.6.30"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30]
    default ["2.6.29.6"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29_6]
    default ["2.6.29.5"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29_5]
    default ["2.6.29.4"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29_4]
    default ["2.6.29.3"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29_3]
    default ["2.6.29.2"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29_2]
    default ["2.6.29.1"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29_1]
    default ["2.6.29"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29]
    default ["2.6.28.10"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_10]
    default ["2.6.28.9"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_9]
    default ["2.6.28.8"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_8]
    default ["2.6.28.7"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_7]
    default ["2.6.28.6"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_6]
    default ["2.6.28.5"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_5]
    default ["2.6.28.4"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_4]
    default ["2.6.28.3"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_3]
    default ["2.6.28.2"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_2]
    default ["2.6.28.1"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_1]
    default ["2.6.28"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28]
    default ["2.6.27.52"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_52]
    default ["2.6.27.51"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_51]
    default ["2.6.27.50"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_50]
    default ["2.6.27.49"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_49]
    default ["2.6.27.48"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_48]
    default ["2.6.27.47"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_47]
    default ["2.6.27.46"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_46]
    default ["2.6.27.45"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_45]
    default ["2.6.27.44"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_44]
    default ["2.6.27.43"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_43]
    default ["2.6.27.42"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_42]
    default ["2.6.27.41"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_41]
    default ["2.6.27.40"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_40]
    default ["2.6.27.39"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_39]
    default ["2.6.27.38"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_38]
    default ["2.6.27.37"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_37]
    default ["2.6.27.36"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_36]
    default ["2.6.27.35"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_35]
    default ["2.6.27.34"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_34]
    default ["2.6.27.33"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_33]
    default ["2.6.27.32"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_32]
    default ["2.6.27.31"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_31]
    default ["2.6.27.30"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_30]
    default ["2.6.27.29"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_29]
    default ["2.6.27.28"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_28]
    default ["2.6.27.27"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_27]
    default ["2.6.27.26"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_26]
    default ["2.6.27.25"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_25]
    default ["2.6.27.24"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_24]
    default ["2.6.27.23"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_23]
    default ["2.6.27.22"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_22]
    default ["2.6.27.21"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_21]
    default ["2.6.27.20"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_20]
    default ["2.6.27.19"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_19]
    default ["2.6.27.18"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_18]
    default ["2.6.27.17"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_17]
    default ["2.6.27.16"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_16]
    default ["2.6.27.15"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_15]
    default ["2.6.27.14"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_14]
    default ["2.6.27.13"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_13]
    default ["2.6.27.12"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_12]
    default ["2.6.27.11"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_11]
    default ["2.6.27.10"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_10]
    default ["2.6.27.9"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_9]
    default ["2.6.27.8"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_8]
    default ["2.6.27.7"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_7]
    default ["2.6.27.6"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_6]
    default ["2.6.27.5"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_5]
    default ["2.6.27.4"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_4]
    default ["2.6.27.3"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_3]
    default ["2.6.27.2"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_2]
    default ["2.6.27.1"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_1]
    default ["2.6.27"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27]
    inherited [EMBTK_LINUX_VERSION_2_6_35_X]
   }
  }
  if [EMBTK_LINUX_VERSION_2_6_34_X] {
   choice boolean {
    prompt "Linux v2.6.34.x series exact version to use." if [EMBTK_LINUX_VERSION_2_6_34_X]
    config EMBTK_LINUX_VERSION_2_6_34_5 boolean {
     prompt "linux-2.6.34.5" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_34_4 boolean {
     prompt "linux-2.6.34.4" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_34_3 boolean {
     prompt "linux-2.6.34.3" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_34_2 boolean {
     prompt "linux-2.6.34.2" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_34_1 boolean {
     prompt "linux-2.6.34.1" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_34 boolean {
     prompt "linux-2.6.34" if [<choice>]
     inherited [<choice>]
    }
   }
   config EMBTK_LINUX_VERSION_STRING string {
    default ["2.6.35.3"] if [EMBTK_LINUX_VERSION_2_6_35_X && EMBTK_LINUX_VERSION_2_6_35_3]
    default ["2.6.35.2"] if [EMBTK_LINUX_VERSION_2_6_35_X && EMBTK_LINUX_VERSION_2_6_35_2]
    default ["2.6.35.1"] if [EMBTK_LINUX_VERSION_2_6_35_X && EMBTK_LINUX_VERSION_2_6_35_1]
    default ["2.6.35"] if [EMBTK_LINUX_VERSION_2_6_35_X && EMBTK_LINUX_VERSION_2_6_35]
    default ["2.6.34.5"] if [EMBTK_LINUX_VERSION_2_6_34_X && EMBTK_LINUX_VERSION_2_6_34_5]
    default ["2.6.34.4"] if [EMBTK_LINUX_VERSION_2_6_34_X && EMBTK_LINUX_VERSION_2_6_34_4]
    default ["2.6.34.3"] if [EMBTK_LINUX_VERSION_2_6_34_X && EMBTK_LINUX_VERSION_2_6_34_3]
    default ["2.6.34.2"] if [EMBTK_LINUX_VERSION_2_6_34_X && EMBTK_LINUX_VERSION_2_6_34_2]
    default ["2.6.34.1"] if [EMBTK_LINUX_VERSION_2_6_34_X && EMBTK_LINUX_VERSION_2_6_34_1]
    default ["2.6.34"] if [EMBTK_LINUX_VERSION_2_6_34_X && EMBTK_LINUX_VERSION_2_6_34]
    default ["2.6.33.7"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_7]
    default ["2.6.33.6"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_6]
    default ["2.6.33.5"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_5]
    default ["2.6.33.4"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_4]
    default ["2.6.33.3"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_3]
    default ["2.6.33.2"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_2]
    default ["2.6.33.1"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_1]
    default ["2.6.33"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33]
    default ["2.6.32.20"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_20]
    default ["2.6.32.19"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_19]
    default ["2.6.32.18"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_18]
    default ["2.6.32.17"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_17]
    default ["2.6.32.16"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_16]
    default ["2.6.32.15"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_15]
    default ["2.6.32.14"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_14]
    default ["2.6.32.13"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_13]
    default ["2.6.32.12"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_12]
    default ["2.6.32.11"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_11]
    default ["2.6.32.10"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_10]
    default ["2.6.32.9"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_9]
    default ["2.6.32.8"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_8]
    default ["2.6.32.7"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_7]
    default ["2.6.32.6"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_6]
    default ["2.6.32.5"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_5]
    default ["2.6.32.4"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_4]
    default ["2.6.32.3"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_3]
    default ["2.6.32.2"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_2]
    default ["2.6.32.1"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_1]
    default ["2.6.32"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32]
    default ["2.6.31.14"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_14]
    default ["2.6.31.13"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_13]
    default ["2.6.31.12"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_12]
    default ["2.6.31.11"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_11]
    default ["2.6.31.10"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_10]
    default ["2.6.31.9"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_9]
    default ["2.6.31.8"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_8]
    default ["2.6.31.7"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_7]
    default ["2.6.31.6"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_6]
    default ["2.6.31.5"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_5]
    default ["2.6.31.4"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_4]
    default ["2.6.31.3"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_3]
    default ["2.6.31.2"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_2]
    default ["2.6.31.1"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_1]
    default ["2.6.31"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31]
    default ["2.6.30.10"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_10]
    default ["2.6.30.9"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_9]
    default ["2.6.30.8"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_8]
    default ["2.6.30.7"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_7]
    default ["2.6.30.6"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_6]
    default ["2.6.30.5"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_5]
    default ["2.6.30.4"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_4]
    default ["2.6.30.3"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_3]
    default ["2.6.30.2"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_2]
    default ["2.6.30.1"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_1]
    default ["2.6.30"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30]
    default ["2.6.29.6"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29_6]
    default ["2.6.29.5"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29_5]
    default ["2.6.29.4"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29_4]
    default ["2.6.29.3"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29_3]
    default ["2.6.29.2"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29_2]
    default ["2.6.29.1"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29_1]
    default ["2.6.29"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29]
    default ["2.6.28.10"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_10]
    default ["2.6.28.9"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_9]
    default ["2.6.28.8"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_8]
    default ["2.6.28.7"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_7]
    default ["2.6.28.6"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_6]
    default ["2.6.28.5"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_5]
    default ["2.6.28.4"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_4]
    default ["2.6.28.3"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_3]
    default ["2.6.28.2"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_2]
    default ["2.6.28.1"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_1]
    default ["2.6.28"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28]
    default ["2.6.27.52"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_52]
    default ["2.6.27.51"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_51]
    default ["2.6.27.50"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_50]
    default ["2.6.27.49"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_49]
    default ["2.6.27.48"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_48]
    default ["2.6.27.47"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_47]
    default ["2.6.27.46"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_46]
    default ["2.6.27.45"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_45]
    default ["2.6.27.44"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_44]
    default ["2.6.27.43"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_43]
    default ["2.6.27.42"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_42]
    default ["2.6.27.41"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_41]
    default ["2.6.27.40"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_40]
    default ["2.6.27.39"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_39]
    default ["2.6.27.38"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_38]
    default ["2.6.27.37"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_37]
    default ["2.6.27.36"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_36]
    default ["2.6.27.35"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_35]
    default ["2.6.27.34"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_34]
    default ["2.6.27.33"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_33]
    default ["2.6.27.32"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_32]
    default ["2.6.27.31"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_31]
    default ["2.6.27.30"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_30]
    default ["2.6.27.29"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_29]
    default ["2.6.27.28"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_28]
    default ["2.6.27.27"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_27]
    default ["2.6.27.26"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_26]
    default ["2.6.27.25"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_25]
    default ["2.6.27.24"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_24]
    default ["2.6.27.23"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_23]
    default ["2.6.27.22"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_22]
    default ["2.6.27.21"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_21]
    default ["2.6.27.20"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_20]
    default ["2.6.27.19"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_19]
    default ["2.6.27.18"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_18]
    default ["2.6.27.17"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_17]
    default ["2.6.27.16"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_16]
    default ["2.6.27.15"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_15]
    default ["2.6.27.14"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_14]
    default ["2.6.27.13"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_13]
    default ["2.6.27.12"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_12]
    default ["2.6.27.11"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_11]
    default ["2.6.27.10"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_10]
    default ["2.6.27.9"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_9]
    default ["2.6.27.8"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_8]
    default ["2.6.27.7"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_7]
    default ["2.6.27.6"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_6]
    default ["2.6.27.5"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_5]
    default ["2.6.27.4"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_4]
    default ["2.6.27.3"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_3]
    default ["2.6.27.2"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_2]
    default ["2.6.27.1"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_1]
    default ["2.6.27"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27]
    inherited [EMBTK_LINUX_VERSION_2_6_34_X]
   }
  }
  if [EMBTK_LINUX_VERSION_2_6_33_X] {
   choice boolean {
    prompt "Linux v2.6.33.x series exact version to use." if [EMBTK_LINUX_VERSION_2_6_33_X]
    config EMBTK_LINUX_VERSION_2_6_33_7 boolean {
     prompt "linux-2.6.33.7" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_33_6 boolean {
     prompt "linux-2.6.33.6" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_33_5 boolean {
     prompt "linux-2.6.33.5" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_33_4 boolean {
     prompt "linux-2.6.33.4" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_33_3 boolean {
     prompt "linux-2.6.33.3" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_33_2 boolean {
     prompt "linux-2.6.33.2" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_33_1 boolean {
     prompt "linux-2.6.33.1" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_33 boolean {
     prompt "linux-2.6.33" if [<choice>]
     inherited [<choice>]
    }
   }
   config EMBTK_LINUX_VERSION_STRING string {
    default ["2.6.35.3"] if [EMBTK_LINUX_VERSION_2_6_35_X && EMBTK_LINUX_VERSION_2_6_35_3]
    default ["2.6.35.2"] if [EMBTK_LINUX_VERSION_2_6_35_X && EMBTK_LINUX_VERSION_2_6_35_2]
    default ["2.6.35.1"] if [EMBTK_LINUX_VERSION_2_6_35_X && EMBTK_LINUX_VERSION_2_6_35_1]
    default ["2.6.35"] if [EMBTK_LINUX_VERSION_2_6_35_X && EMBTK_LINUX_VERSION_2_6_35]
    default ["2.6.34.5"] if [EMBTK_LINUX_VERSION_2_6_34_X && EMBTK_LINUX_VERSION_2_6_34_5]
    default ["2.6.34.4"] if [EMBTK_LINUX_VERSION_2_6_34_X && EMBTK_LINUX_VERSION_2_6_34_4]
    default ["2.6.34.3"] if [EMBTK_LINUX_VERSION_2_6_34_X && EMBTK_LINUX_VERSION_2_6_34_3]
    default ["2.6.34.2"] if [EMBTK_LINUX_VERSION_2_6_34_X && EMBTK_LINUX_VERSION_2_6_34_2]
    default ["2.6.34.1"] if [EMBTK_LINUX_VERSION_2_6_34_X && EMBTK_LINUX_VERSION_2_6_34_1]
    default ["2.6.34"] if [EMBTK_LINUX_VERSION_2_6_34_X && EMBTK_LINUX_VERSION_2_6_34]
    default ["2.6.33.7"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_7]
    default ["2.6.33.6"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_6]
    default ["2.6.33.5"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_5]
    default ["2.6.33.4"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_4]
    default ["2.6.33.3"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_3]
    default ["2.6.33.2"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_2]
    default ["2.6.33.1"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_1]
    default ["2.6.33"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33]
    default ["2.6.32.20"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_20]
    default ["2.6.32.19"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_19]
    default ["2.6.32.18"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_18]
    default ["2.6.32.17"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_17]
    default ["2.6.32.16"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_16]
    default ["2.6.32.15"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_15]
    default ["2.6.32.14"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_14]
    default ["2.6.32.13"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_13]
    default ["2.6.32.12"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_12]
    default ["2.6.32.11"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_11]
    default ["2.6.32.10"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_10]
    default ["2.6.32.9"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_9]
    default ["2.6.32.8"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_8]
    default ["2.6.32.7"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_7]
    default ["2.6.32.6"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_6]
    default ["2.6.32.5"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_5]
    default ["2.6.32.4"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_4]
    default ["2.6.32.3"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_3]
    default ["2.6.32.2"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_2]
    default ["2.6.32.1"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_1]
    default ["2.6.32"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32]
    default ["2.6.31.14"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_14]
    default ["2.6.31.13"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_13]
    default ["2.6.31.12"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_12]
    default ["2.6.31.11"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_11]
    default ["2.6.31.10"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_10]
    default ["2.6.31.9"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_9]
    default ["2.6.31.8"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_8]
    default ["2.6.31.7"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_7]
    default ["2.6.31.6"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_6]
    default ["2.6.31.5"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_5]
    default ["2.6.31.4"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_4]
    default ["2.6.31.3"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_3]
    default ["2.6.31.2"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_2]
    default ["2.6.31.1"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_1]
    default ["2.6.31"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31]
    default ["2.6.30.10"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_10]
    default ["2.6.30.9"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_9]
    default ["2.6.30.8"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_8]
    default ["2.6.30.7"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_7]
    default ["2.6.30.6"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_6]
    default ["2.6.30.5"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_5]
    default ["2.6.30.4"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_4]
    default ["2.6.30.3"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_3]
    default ["2.6.30.2"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_2]
    default ["2.6.30.1"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_1]
    default ["2.6.30"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30]
    default ["2.6.29.6"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29_6]
    default ["2.6.29.5"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29_5]
    default ["2.6.29.4"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29_4]
    default ["2.6.29.3"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29_3]
    default ["2.6.29.2"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29_2]
    default ["2.6.29.1"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29_1]
    default ["2.6.29"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29]
    default ["2.6.28.10"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_10]
    default ["2.6.28.9"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_9]
    default ["2.6.28.8"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_8]
    default ["2.6.28.7"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_7]
    default ["2.6.28.6"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_6]
    default ["2.6.28.5"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_5]
    default ["2.6.28.4"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_4]
    default ["2.6.28.3"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_3]
    default ["2.6.28.2"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_2]
    default ["2.6.28.1"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_1]
    default ["2.6.28"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28]
    default ["2.6.27.52"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_52]
    default ["2.6.27.51"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_51]
    default ["2.6.27.50"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_50]
    default ["2.6.27.49"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_49]
    default ["2.6.27.48"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_48]
    default ["2.6.27.47"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_47]
    default ["2.6.27.46"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_46]
    default ["2.6.27.45"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_45]
    default ["2.6.27.44"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_44]
    default ["2.6.27.43"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_43]
    default ["2.6.27.42"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_42]
    default ["2.6.27.41"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_41]
    default ["2.6.27.40"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_40]
    default ["2.6.27.39"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_39]
    default ["2.6.27.38"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_38]
    default ["2.6.27.37"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_37]
    default ["2.6.27.36"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_36]
    default ["2.6.27.35"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_35]
    default ["2.6.27.34"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_34]
    default ["2.6.27.33"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_33]
    default ["2.6.27.32"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_32]
    default ["2.6.27.31"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_31]
    default ["2.6.27.30"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_30]
    default ["2.6.27.29"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_29]
    default ["2.6.27.28"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_28]
    default ["2.6.27.27"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_27]
    default ["2.6.27.26"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_26]
    default ["2.6.27.25"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_25]
    default ["2.6.27.24"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_24]
    default ["2.6.27.23"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_23]
    default ["2.6.27.22"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_22]
    default ["2.6.27.21"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_21]
    default ["2.6.27.20"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_20]
    default ["2.6.27.19"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_19]
    default ["2.6.27.18"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_18]
    default ["2.6.27.17"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_17]
    default ["2.6.27.16"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_16]
    default ["2.6.27.15"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_15]
    default ["2.6.27.14"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_14]
    default ["2.6.27.13"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_13]
    default ["2.6.27.12"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_12]
    default ["2.6.27.11"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_11]
    default ["2.6.27.10"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_10]
    default ["2.6.27.9"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_9]
    default ["2.6.27.8"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_8]
    default ["2.6.27.7"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_7]
    default ["2.6.27.6"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_6]
    default ["2.6.27.5"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_5]
    default ["2.6.27.4"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_4]
    default ["2.6.27.3"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_3]
    default ["2.6.27.2"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_2]
    default ["2.6.27.1"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_1]
    default ["2.6.27"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27]
    inherited [EMBTK_LINUX_VERSION_2_6_33_X]
   }
  }
  if [EMBTK_LINUX_VERSION_2_6_32_X] {
   choice boolean {
    prompt "Linux v2.6.32.x series exact version to use." if [EMBTK_LINUX_VERSION_2_6_32_X]
    config EMBTK_LINUX_VERSION_2_6_32_20 boolean {
     prompt "linux-2.6.32.20" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_32_19 boolean {
     prompt "linux-2.6.32.19" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_32_18 boolean {
     prompt "linux-2.6.32.18" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_32_17 boolean {
     prompt "linux-2.6.32.17" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_32_16 boolean {
     prompt "linux-2.6.32.16" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_32_15 boolean {
     prompt "linux-2.6.32.15" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_32_14 boolean {
     prompt "linux-2.6.32.14" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_32_13 boolean {
     prompt "linux-2.6.32.13" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_32_12 boolean {
     prompt "linux-2.6.32.12" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_32_11 boolean {
     prompt "linux-2.6.32.11" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_32_10 boolean {
     prompt "linux-2.6.32.10" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_32_9 boolean {
     prompt "linux-2.6.32.9" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_32_8 boolean {
     prompt "linux-2.6.32.8" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_32_7 boolean {
     prompt "linux-2.6.32.7" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_32_6 boolean {
     prompt "linux-2.6.32.6" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_32_5 boolean {
     prompt "linux-2.6.32.5" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_32_4 boolean {
     prompt "linux-2.6.32.4" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_32_3 boolean {
     prompt "linux-2.6.32.3" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_32_2 boolean {
     prompt "linux-2.6.32.2" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_32_1 boolean {
     prompt "linux-2.6.32.1" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_32 boolean {
     prompt "linux-2.6.32" if [<choice>]
     inherited [<choice>]
    }
   }
   config EMBTK_LINUX_VERSION_STRING string {
    default ["2.6.35.3"] if [EMBTK_LINUX_VERSION_2_6_35_X && EMBTK_LINUX_VERSION_2_6_35_3]
    default ["2.6.35.2"] if [EMBTK_LINUX_VERSION_2_6_35_X && EMBTK_LINUX_VERSION_2_6_35_2]
    default ["2.6.35.1"] if [EMBTK_LINUX_VERSION_2_6_35_X && EMBTK_LINUX_VERSION_2_6_35_1]
    default ["2.6.35"] if [EMBTK_LINUX_VERSION_2_6_35_X && EMBTK_LINUX_VERSION_2_6_35]
    default ["2.6.34.5"] if [EMBTK_LINUX_VERSION_2_6_34_X && EMBTK_LINUX_VERSION_2_6_34_5]
    default ["2.6.34.4"] if [EMBTK_LINUX_VERSION_2_6_34_X && EMBTK_LINUX_VERSION_2_6_34_4]
    default ["2.6.34.3"] if [EMBTK_LINUX_VERSION_2_6_34_X && EMBTK_LINUX_VERSION_2_6_34_3]
    default ["2.6.34.2"] if [EMBTK_LINUX_VERSION_2_6_34_X && EMBTK_LINUX_VERSION_2_6_34_2]
    default ["2.6.34.1"] if [EMBTK_LINUX_VERSION_2_6_34_X && EMBTK_LINUX_VERSION_2_6_34_1]
    default ["2.6.34"] if [EMBTK_LINUX_VERSION_2_6_34_X && EMBTK_LINUX_VERSION_2_6_34]
    default ["2.6.33.7"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_7]
    default ["2.6.33.6"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_6]
    default ["2.6.33.5"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_5]
    default ["2.6.33.4"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_4]
    default ["2.6.33.3"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_3]
    default ["2.6.33.2"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_2]
    default ["2.6.33.1"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_1]
    default ["2.6.33"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33]
    default ["2.6.32.20"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_20]
    default ["2.6.32.19"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_19]
    default ["2.6.32.18"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_18]
    default ["2.6.32.17"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_17]
    default ["2.6.32.16"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_16]
    default ["2.6.32.15"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_15]
    default ["2.6.32.14"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_14]
    default ["2.6.32.13"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_13]
    default ["2.6.32.12"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_12]
    default ["2.6.32.11"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_11]
    default ["2.6.32.10"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_10]
    default ["2.6.32.9"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_9]
    default ["2.6.32.8"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_8]
    default ["2.6.32.7"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_7]
    default ["2.6.32.6"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_6]
    default ["2.6.32.5"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_5]
    default ["2.6.32.4"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_4]
    default ["2.6.32.3"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_3]
    default ["2.6.32.2"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_2]
    default ["2.6.32.1"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_1]
    default ["2.6.32"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32]
    default ["2.6.31.14"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_14]
    default ["2.6.31.13"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_13]
    default ["2.6.31.12"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_12]
    default ["2.6.31.11"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_11]
    default ["2.6.31.10"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_10]
    default ["2.6.31.9"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_9]
    default ["2.6.31.8"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_8]
    default ["2.6.31.7"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_7]
    default ["2.6.31.6"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_6]
    default ["2.6.31.5"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_5]
    default ["2.6.31.4"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_4]
    default ["2.6.31.3"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_3]
    default ["2.6.31.2"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_2]
    default ["2.6.31.1"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_1]
    default ["2.6.31"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31]
    default ["2.6.30.10"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_10]
    default ["2.6.30.9"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_9]
    default ["2.6.30.8"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_8]
    default ["2.6.30.7"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_7]
    default ["2.6.30.6"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_6]
    default ["2.6.30.5"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_5]
    default ["2.6.30.4"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_4]
    default ["2.6.30.3"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_3]
    default ["2.6.30.2"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_2]
    default ["2.6.30.1"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_1]
    default ["2.6.30"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30]
    default ["2.6.29.6"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29_6]
    default ["2.6.29.5"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29_5]
    default ["2.6.29.4"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29_4]
    default ["2.6.29.3"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29_3]
    default ["2.6.29.2"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29_2]
    default ["2.6.29.1"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29_1]
    default ["2.6.29"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29]
    default ["2.6.28.10"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_10]
    default ["2.6.28.9"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_9]
    default ["2.6.28.8"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_8]
    default ["2.6.28.7"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_7]
    default ["2.6.28.6"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_6]
    default ["2.6.28.5"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_5]
    default ["2.6.28.4"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_4]
    default ["2.6.28.3"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_3]
    default ["2.6.28.2"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_2]
    default ["2.6.28.1"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_1]
    default ["2.6.28"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28]
    default ["2.6.27.52"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_52]
    default ["2.6.27.51"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_51]
    default ["2.6.27.50"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_50]
    default ["2.6.27.49"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_49]
    default ["2.6.27.48"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_48]
    default ["2.6.27.47"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_47]
    default ["2.6.27.46"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_46]
    default ["2.6.27.45"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_45]
    default ["2.6.27.44"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_44]
    default ["2.6.27.43"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_43]
    default ["2.6.27.42"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_42]
    default ["2.6.27.41"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_41]
    default ["2.6.27.40"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_40]
    default ["2.6.27.39"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_39]
    default ["2.6.27.38"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_38]
    default ["2.6.27.37"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_37]
    default ["2.6.27.36"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_36]
    default ["2.6.27.35"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_35]
    default ["2.6.27.34"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_34]
    default ["2.6.27.33"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_33]
    default ["2.6.27.32"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_32]
    default ["2.6.27.31"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_31]
    default ["2.6.27.30"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_30]
    default ["2.6.27.29"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_29]
    default ["2.6.27.28"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_28]
    default ["2.6.27.27"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_27]
    default ["2.6.27.26"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_26]
    default ["2.6.27.25"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_25]
    default ["2.6.27.24"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_24]
    default ["2.6.27.23"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_23]
    default ["2.6.27.22"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_22]
    default ["2.6.27.21"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_21]
    default ["2.6.27.20"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_20]
    default ["2.6.27.19"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_19]
    default ["2.6.27.18"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_18]
    default ["2.6.27.17"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_17]
    default ["2.6.27.16"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_16]
    default ["2.6.27.15"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_15]
    default ["2.6.27.14"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_14]
    default ["2.6.27.13"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_13]
    default ["2.6.27.12"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_12]
    default ["2.6.27.11"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_11]
    default ["2.6.27.10"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_10]
    default ["2.6.27.9"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_9]
    default ["2.6.27.8"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_8]
    default ["2.6.27.7"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_7]
    default ["2.6.27.6"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_6]
    default ["2.6.27.5"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_5]
    default ["2.6.27.4"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_4]
    default ["2.6.27.3"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_3]
    default ["2.6.27.2"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_2]
    default ["2.6.27.1"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_1]
    default ["2.6.27"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27]
    inherited [EMBTK_LINUX_VERSION_2_6_32_X]
   }
  }
  if [EMBTK_LINUX_VERSION_2_6_31_X] {
   choice boolean {
    prompt "Linux v2.6.31.x series exact version to use." if [EMBTK_LINUX_VERSION_2_6_31_X]
    config EMBTK_LINUX_VERSION_2_6_31_14 boolean {
     prompt "linux-2.6.31.14" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_31_13 boolean {
     prompt "linux-2.6.31.13" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_31_12 boolean {
     prompt "linux-2.6.31.12" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_31_11 boolean {
     prompt "linux-2.6.31.11" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_31_10 boolean {
     prompt "linux-2.6.31.10" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_31_9 boolean {
     prompt "linux-2.6.31.9" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_31_8 boolean {
     prompt "linux-2.6.31.8" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_31_7 boolean {
     prompt "linux-2.6.31.7" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_31_6 boolean {
     prompt "linux-2.6.31.6" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_31_5 boolean {
     prompt "linux-2.6.31.5" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_31_4 boolean {
     prompt "linux-2.6.31.4" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_31_3 boolean {
     prompt "linux-2.6.31.3" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_31_2 boolean {
     prompt "linux-2.6.31.2" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_31_1 boolean {
     prompt "linux-2.6.31.1" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_31 boolean {
     prompt "linux-2.6.31" if [<choice>]
     inherited [<choice>]
    }
   }
   config EMBTK_LINUX_VERSION_STRING string {
    default ["2.6.35.3"] if [EMBTK_LINUX_VERSION_2_6_35_X && EMBTK_LINUX_VERSION_2_6_35_3]
    default ["2.6.35.2"] if [EMBTK_LINUX_VERSION_2_6_35_X && EMBTK_LINUX_VERSION_2_6_35_2]
    default ["2.6.35.1"] if [EMBTK_LINUX_VERSION_2_6_35_X && EMBTK_LINUX_VERSION_2_6_35_1]
    default ["2.6.35"] if [EMBTK_LINUX_VERSION_2_6_35_X && EMBTK_LINUX_VERSION_2_6_35]
    default ["2.6.34.5"] if [EMBTK_LINUX_VERSION_2_6_34_X && EMBTK_LINUX_VERSION_2_6_34_5]
    default ["2.6.34.4"] if [EMBTK_LINUX_VERSION_2_6_34_X && EMBTK_LINUX_VERSION_2_6_34_4]
    default ["2.6.34.3"] if [EMBTK_LINUX_VERSION_2_6_34_X && EMBTK_LINUX_VERSION_2_6_34_3]
    default ["2.6.34.2"] if [EMBTK_LINUX_VERSION_2_6_34_X && EMBTK_LINUX_VERSION_2_6_34_2]
    default ["2.6.34.1"] if [EMBTK_LINUX_VERSION_2_6_34_X && EMBTK_LINUX_VERSION_2_6_34_1]
    default ["2.6.34"] if [EMBTK_LINUX_VERSION_2_6_34_X && EMBTK_LINUX_VERSION_2_6_34]
    default ["2.6.33.7"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_7]
    default ["2.6.33.6"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_6]
    default ["2.6.33.5"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_5]
    default ["2.6.33.4"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_4]
    default ["2.6.33.3"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_3]
    default ["2.6.33.2"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_2]
    default ["2.6.33.1"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_1]
    default ["2.6.33"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33]
    default ["2.6.32.20"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_20]
    default ["2.6.32.19"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_19]
    default ["2.6.32.18"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_18]
    default ["2.6.32.17"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_17]
    default ["2.6.32.16"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_16]
    default ["2.6.32.15"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_15]
    default ["2.6.32.14"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_14]
    default ["2.6.32.13"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_13]
    default ["2.6.32.12"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_12]
    default ["2.6.32.11"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_11]
    default ["2.6.32.10"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_10]
    default ["2.6.32.9"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_9]
    default ["2.6.32.8"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_8]
    default ["2.6.32.7"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_7]
    default ["2.6.32.6"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_6]
    default ["2.6.32.5"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_5]
    default ["2.6.32.4"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_4]
    default ["2.6.32.3"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_3]
    default ["2.6.32.2"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_2]
    default ["2.6.32.1"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_1]
    default ["2.6.32"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32]
    default ["2.6.31.14"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_14]
    default ["2.6.31.13"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_13]
    default ["2.6.31.12"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_12]
    default ["2.6.31.11"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_11]
    default ["2.6.31.10"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_10]
    default ["2.6.31.9"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_9]
    default ["2.6.31.8"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_8]
    default ["2.6.31.7"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_7]
    default ["2.6.31.6"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_6]
    default ["2.6.31.5"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_5]
    default ["2.6.31.4"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_4]
    default ["2.6.31.3"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_3]
    default ["2.6.31.2"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_2]
    default ["2.6.31.1"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_1]
    default ["2.6.31"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31]
    default ["2.6.30.10"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_10]
    default ["2.6.30.9"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_9]
    default ["2.6.30.8"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_8]
    default ["2.6.30.7"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_7]
    default ["2.6.30.6"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_6]
    default ["2.6.30.5"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_5]
    default ["2.6.30.4"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_4]
    default ["2.6.30.3"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_3]
    default ["2.6.30.2"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_2]
    default ["2.6.30.1"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_1]
    default ["2.6.30"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30]
    default ["2.6.29.6"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29_6]
    default ["2.6.29.5"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29_5]
    default ["2.6.29.4"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29_4]
    default ["2.6.29.3"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29_3]
    default ["2.6.29.2"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29_2]
    default ["2.6.29.1"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29_1]
    default ["2.6.29"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29]
    default ["2.6.28.10"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_10]
    default ["2.6.28.9"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_9]
    default ["2.6.28.8"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_8]
    default ["2.6.28.7"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_7]
    default ["2.6.28.6"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_6]
    default ["2.6.28.5"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_5]
    default ["2.6.28.4"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_4]
    default ["2.6.28.3"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_3]
    default ["2.6.28.2"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_2]
    default ["2.6.28.1"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_1]
    default ["2.6.28"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28]
    default ["2.6.27.52"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_52]
    default ["2.6.27.51"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_51]
    default ["2.6.27.50"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_50]
    default ["2.6.27.49"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_49]
    default ["2.6.27.48"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_48]
    default ["2.6.27.47"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_47]
    default ["2.6.27.46"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_46]
    default ["2.6.27.45"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_45]
    default ["2.6.27.44"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_44]
    default ["2.6.27.43"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_43]
    default ["2.6.27.42"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_42]
    default ["2.6.27.41"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_41]
    default ["2.6.27.40"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_40]
    default ["2.6.27.39"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_39]
    default ["2.6.27.38"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_38]
    default ["2.6.27.37"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_37]
    default ["2.6.27.36"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_36]
    default ["2.6.27.35"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_35]
    default ["2.6.27.34"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_34]
    default ["2.6.27.33"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_33]
    default ["2.6.27.32"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_32]
    default ["2.6.27.31"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_31]
    default ["2.6.27.30"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_30]
    default ["2.6.27.29"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_29]
    default ["2.6.27.28"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_28]
    default ["2.6.27.27"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_27]
    default ["2.6.27.26"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_26]
    default ["2.6.27.25"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_25]
    default ["2.6.27.24"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_24]
    default ["2.6.27.23"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_23]
    default ["2.6.27.22"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_22]
    default ["2.6.27.21"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_21]
    default ["2.6.27.20"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_20]
    default ["2.6.27.19"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_19]
    default ["2.6.27.18"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_18]
    default ["2.6.27.17"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_17]
    default ["2.6.27.16"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_16]
    default ["2.6.27.15"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_15]
    default ["2.6.27.14"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_14]
    default ["2.6.27.13"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_13]
    default ["2.6.27.12"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_12]
    default ["2.6.27.11"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_11]
    default ["2.6.27.10"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_10]
    default ["2.6.27.9"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_9]
    default ["2.6.27.8"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_8]
    default ["2.6.27.7"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_7]
    default ["2.6.27.6"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_6]
    default ["2.6.27.5"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_5]
    default ["2.6.27.4"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_4]
    default ["2.6.27.3"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_3]
    default ["2.6.27.2"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_2]
    default ["2.6.27.1"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_1]
    default ["2.6.27"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27]
    inherited [EMBTK_LINUX_VERSION_2_6_31_X]
   }
  }
  if [EMBTK_LINUX_VERSION_2_6_30_X] {
   choice boolean {
    prompt "Linux v2.6.30.x series exact version to use." if [EMBTK_LINUX_VERSION_2_6_30_X]
    default [EMBTK_LINUX_VERSION_2_6_30_6] if [EMBTK_LINUX_VERSION_2_6_30_X]
    config EMBTK_LINUX_VERSION_2_6_30_10 boolean {
     prompt "linux-2.6.30.10" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_30_9 boolean {
     prompt "linux-2.6.30.9" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_30_8 boolean {
     prompt "linux-2.6.30.8" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_30_7 boolean {
     prompt "linux-2.6.30.7" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_30_6 boolean {
     prompt "linux-2.6.30.6" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_30_5 boolean {
     prompt "linux-2.6.30.5" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_30_4 boolean {
     prompt "linux-2.6.30.4" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_30_3 boolean {
     prompt "linux-2.6.30.3" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_30_2 boolean {
     prompt "linux-2.6.30.2" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_30_1 boolean {
     prompt "linux-2.6.30.1" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_30 boolean {
     prompt "linux-2.6.30" if [<choice>]
     inherited [<choice>]
    }
   }
   config EMBTK_LINUX_VERSION_STRING string {
    default ["2.6.35.3"] if [EMBTK_LINUX_VERSION_2_6_35_X && EMBTK_LINUX_VERSION_2_6_35_3]
    default ["2.6.35.2"] if [EMBTK_LINUX_VERSION_2_6_35_X && EMBTK_LINUX_VERSION_2_6_35_2]
    default ["2.6.35.1"] if [EMBTK_LINUX_VERSION_2_6_35_X && EMBTK_LINUX_VERSION_2_6_35_1]
    default ["2.6.35"] if [EMBTK_LINUX_VERSION_2_6_35_X && EMBTK_LINUX_VERSION_2_6_35]
    default ["2.6.34.5"] if [EMBTK_LINUX_VERSION_2_6_34_X && EMBTK_LINUX_VERSION_2_6_34_5]
    default ["2.6.34.4"] if [EMBTK_LINUX_VERSION_2_6_34_X && EMBTK_LINUX_VERSION_2_6_34_4]
    default ["2.6.34.3"] if [EMBTK_LINUX_VERSION_2_6_34_X && EMBTK_LINUX_VERSION_2_6_34_3]
    default ["2.6.34.2"] if [EMBTK_LINUX_VERSION_2_6_34_X && EMBTK_LINUX_VERSION_2_6_34_2]
    default ["2.6.34.1"] if [EMBTK_LINUX_VERSION_2_6_34_X && EMBTK_LINUX_VERSION_2_6_34_1]
    default ["2.6.34"] if [EMBTK_LINUX_VERSION_2_6_34_X && EMBTK_LINUX_VERSION_2_6_34]
    default ["2.6.33.7"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_7]
    default ["2.6.33.6"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_6]
    default ["2.6.33.5"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_5]
    default ["2.6.33.4"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_4]
    default ["2.6.33.3"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_3]
    default ["2.6.33.2"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_2]
    default ["2.6.33.1"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_1]
    default ["2.6.33"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33]
    default ["2.6.32.20"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_20]
    default ["2.6.32.19"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_19]
    default ["2.6.32.18"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_18]
    default ["2.6.32.17"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_17]
    default ["2.6.32.16"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_16]
    default ["2.6.32.15"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_15]
    default ["2.6.32.14"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_14]
    default ["2.6.32.13"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_13]
    default ["2.6.32.12"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_12]
    default ["2.6.32.11"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_11]
    default ["2.6.32.10"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_10]
    default ["2.6.32.9"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_9]
    default ["2.6.32.8"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_8]
    default ["2.6.32.7"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_7]
    default ["2.6.32.6"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_6]
    default ["2.6.32.5"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_5]
    default ["2.6.32.4"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_4]
    default ["2.6.32.3"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_3]
    default ["2.6.32.2"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_2]
    default ["2.6.32.1"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_1]
    default ["2.6.32"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32]
    default ["2.6.31.14"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_14]
    default ["2.6.31.13"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_13]
    default ["2.6.31.12"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_12]
    default ["2.6.31.11"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_11]
    default ["2.6.31.10"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_10]
    default ["2.6.31.9"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_9]
    default ["2.6.31.8"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_8]
    default ["2.6.31.7"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_7]
    default ["2.6.31.6"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_6]
    default ["2.6.31.5"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_5]
    default ["2.6.31.4"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_4]
    default ["2.6.31.3"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_3]
    default ["2.6.31.2"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_2]
    default ["2.6.31.1"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_1]
    default ["2.6.31"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31]
    default ["2.6.30.10"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_10]
    default ["2.6.30.9"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_9]
    default ["2.6.30.8"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_8]
    default ["2.6.30.7"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_7]
    default ["2.6.30.6"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_6]
    default ["2.6.30.5"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_5]
    default ["2.6.30.4"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_4]
    default ["2.6.30.3"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_3]
    default ["2.6.30.2"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_2]
    default ["2.6.30.1"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_1]
    default ["2.6.30"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30]
    default ["2.6.29.6"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29_6]
    default ["2.6.29.5"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29_5]
    default ["2.6.29.4"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29_4]
    default ["2.6.29.3"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29_3]
    default ["2.6.29.2"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29_2]
    default ["2.6.29.1"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29_1]
    default ["2.6.29"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29]
    default ["2.6.28.10"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_10]
    default ["2.6.28.9"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_9]
    default ["2.6.28.8"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_8]
    default ["2.6.28.7"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_7]
    default ["2.6.28.6"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_6]
    default ["2.6.28.5"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_5]
    default ["2.6.28.4"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_4]
    default ["2.6.28.3"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_3]
    default ["2.6.28.2"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_2]
    default ["2.6.28.1"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_1]
    default ["2.6.28"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28]
    default ["2.6.27.52"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_52]
    default ["2.6.27.51"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_51]
    default ["2.6.27.50"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_50]
    default ["2.6.27.49"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_49]
    default ["2.6.27.48"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_48]
    default ["2.6.27.47"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_47]
    default ["2.6.27.46"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_46]
    default ["2.6.27.45"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_45]
    default ["2.6.27.44"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_44]
    default ["2.6.27.43"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_43]
    default ["2.6.27.42"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_42]
    default ["2.6.27.41"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_41]
    default ["2.6.27.40"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_40]
    default ["2.6.27.39"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_39]
    default ["2.6.27.38"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_38]
    default ["2.6.27.37"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_37]
    default ["2.6.27.36"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_36]
    default ["2.6.27.35"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_35]
    default ["2.6.27.34"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_34]
    default ["2.6.27.33"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_33]
    default ["2.6.27.32"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_32]
    default ["2.6.27.31"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_31]
    default ["2.6.27.30"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_30]
    default ["2.6.27.29"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_29]
    default ["2.6.27.28"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_28]
    default ["2.6.27.27"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_27]
    default ["2.6.27.26"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_26]
    default ["2.6.27.25"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_25]
    default ["2.6.27.24"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_24]
    default ["2.6.27.23"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_23]
    default ["2.6.27.22"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_22]
    default ["2.6.27.21"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_21]
    default ["2.6.27.20"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_20]
    default ["2.6.27.19"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_19]
    default ["2.6.27.18"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_18]
    default ["2.6.27.17"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_17]
    default ["2.6.27.16"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_16]
    default ["2.6.27.15"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_15]
    default ["2.6.27.14"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_14]
    default ["2.6.27.13"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_13]
    default ["2.6.27.12"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_12]
    default ["2.6.27.11"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_11]
    default ["2.6.27.10"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_10]
    default ["2.6.27.9"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_9]
    default ["2.6.27.8"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_8]
    default ["2.6.27.7"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_7]
    default ["2.6.27.6"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_6]
    default ["2.6.27.5"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_5]
    default ["2.6.27.4"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_4]
    default ["2.6.27.3"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_3]
    default ["2.6.27.2"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_2]
    default ["2.6.27.1"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_1]
    default ["2.6.27"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27]
    inherited [EMBTK_LINUX_VERSION_2_6_30_X]
   }
  }
  if [EMBTK_LINUX_VERSION_2_6_29_X] {
   choice boolean {
    prompt "Linux v2.6.29.x series exact version to use." if [EMBTK_LINUX_VERSION_2_6_29_X]
    default [EMBTK_LINUX_VERSION_2_6_29_6] if [EMBTK_LINUX_VERSION_2_6_29_X]
    config EMBTK_LINUX_VERSION_2_6_29_6 boolean {
     prompt "linux-2.6.29.6" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_29_5 boolean {
     prompt "linux-2.6.29.4" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_29_4 boolean {
     prompt "linux-2.6.29.4" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_29_3 boolean {
     prompt "linux-2.6.29.3" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_29_2 boolean {
     prompt "linux-2.6.29.2" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_29_1 boolean {
     prompt "linux-2.6.29.1" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_29 boolean {
     prompt "linux-2.6.29" if [<choice>]
     inherited [<choice>]
    }
   }
   config EMBTK_LINUX_VERSION_STRING string {
    default ["2.6.35.3"] if [EMBTK_LINUX_VERSION_2_6_35_X && EMBTK_LINUX_VERSION_2_6_35_3]
    default ["2.6.35.2"] if [EMBTK_LINUX_VERSION_2_6_35_X && EMBTK_LINUX_VERSION_2_6_35_2]
    default ["2.6.35.1"] if [EMBTK_LINUX_VERSION_2_6_35_X && EMBTK_LINUX_VERSION_2_6_35_1]
    default ["2.6.35"] if [EMBTK_LINUX_VERSION_2_6_35_X && EMBTK_LINUX_VERSION_2_6_35]
    default ["2.6.34.5"] if [EMBTK_LINUX_VERSION_2_6_34_X && EMBTK_LINUX_VERSION_2_6_34_5]
    default ["2.6.34.4"] if [EMBTK_LINUX_VERSION_2_6_34_X && EMBTK_LINUX_VERSION_2_6_34_4]
    default ["2.6.34.3"] if [EMBTK_LINUX_VERSION_2_6_34_X && EMBTK_LINUX_VERSION_2_6_34_3]
    default ["2.6.34.2"] if [EMBTK_LINUX_VERSION_2_6_34_X && EMBTK_LINUX_VERSION_2_6_34_2]
    default ["2.6.34.1"] if [EMBTK_LINUX_VERSION_2_6_34_X && EMBTK_LINUX_VERSION_2_6_34_1]
    default ["2.6.34"] if [EMBTK_LINUX_VERSION_2_6_34_X && EMBTK_LINUX_VERSION_2_6_34]
    default ["2.6.33.7"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_7]
    default ["2.6.33.6"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_6]
    default ["2.6.33.5"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_5]
    default ["2.6.33.4"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_4]
    default ["2.6.33.3"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_3]
    default ["2.6.33.2"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_2]
    default ["2.6.33.1"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_1]
    default ["2.6.33"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33]
    default ["2.6.32.20"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_20]
    default ["2.6.32.19"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_19]
    default ["2.6.32.18"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_18]
    default ["2.6.32.17"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_17]
    default ["2.6.32.16"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_16]
    default ["2.6.32.15"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_15]
    default ["2.6.32.14"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_14]
    default ["2.6.32.13"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_13]
    default ["2.6.32.12"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_12]
    default ["2.6.32.11"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_11]
    default ["2.6.32.10"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_10]
    default ["2.6.32.9"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_9]
    default ["2.6.32.8"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_8]
    default ["2.6.32.7"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_7]
    default ["2.6.32.6"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_6]
    default ["2.6.32.5"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_5]
    default ["2.6.32.4"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_4]
    default ["2.6.32.3"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_3]
    default ["2.6.32.2"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_2]
    default ["2.6.32.1"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_1]
    default ["2.6.32"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32]
    default ["2.6.31.14"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_14]
    default ["2.6.31.13"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_13]
    default ["2.6.31.12"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_12]
    default ["2.6.31.11"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_11]
    default ["2.6.31.10"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_10]
    default ["2.6.31.9"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_9]
    default ["2.6.31.8"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_8]
    default ["2.6.31.7"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_7]
    default ["2.6.31.6"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_6]
    default ["2.6.31.5"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_5]
    default ["2.6.31.4"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_4]
    default ["2.6.31.3"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_3]
    default ["2.6.31.2"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_2]
    default ["2.6.31.1"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_1]
    default ["2.6.31"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31]
    default ["2.6.30.10"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_10]
    default ["2.6.30.9"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_9]
    default ["2.6.30.8"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_8]
    default ["2.6.30.7"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_7]
    default ["2.6.30.6"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_6]
    default ["2.6.30.5"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_5]
    default ["2.6.30.4"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_4]
    default ["2.6.30.3"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_3]
    default ["2.6.30.2"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_2]
    default ["2.6.30.1"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_1]
    default ["2.6.30"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30]
    default ["2.6.29.6"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29_6]
    default ["2.6.29.5"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29_5]
    default ["2.6.29.4"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29_4]
    default ["2.6.29.3"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29_3]
    default ["2.6.29.2"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29_2]
    default ["2.6.29.1"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29_1]
    default ["2.6.29"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29]
    default ["2.6.28.10"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_10]
    default ["2.6.28.9"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_9]
    default ["2.6.28.8"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_8]
    default ["2.6.28.7"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_7]
    default ["2.6.28.6"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_6]
    default ["2.6.28.5"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_5]
    default ["2.6.28.4"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_4]
    default ["2.6.28.3"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_3]
    default ["2.6.28.2"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_2]
    default ["2.6.28.1"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_1]
    default ["2.6.28"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28]
    default ["2.6.27.52"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_52]
    default ["2.6.27.51"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_51]
    default ["2.6.27.50"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_50]
    default ["2.6.27.49"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_49]
    default ["2.6.27.48"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_48]
    default ["2.6.27.47"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_47]
    default ["2.6.27.46"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_46]
    default ["2.6.27.45"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_45]
    default ["2.6.27.44"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_44]
    default ["2.6.27.43"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_43]
    default ["2.6.27.42"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_42]
    default ["2.6.27.41"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_41]
    default ["2.6.27.40"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_40]
    default ["2.6.27.39"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_39]
    default ["2.6.27.38"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_38]
    default ["2.6.27.37"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_37]
    default ["2.6.27.36"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_36]
    default ["2.6.27.35"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_35]
    default ["2.6.27.34"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_34]
    default ["2.6.27.33"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_33]
    default ["2.6.27.32"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_32]
    default ["2.6.27.31"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_31]
    default ["2.6.27.30"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_30]
    default ["2.6.27.29"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_29]
    default ["2.6.27.28"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_28]
    default ["2.6.27.27"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_27]
    default ["2.6.27.26"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_26]
    default ["2.6.27.25"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_25]
    default ["2.6.27.24"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_24]
    default ["2.6.27.23"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_23]
    default ["2.6.27.22"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_22]
    default ["2.6.27.21"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_21]
    default ["2.6.27.20"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_20]
    default ["2.6.27.19"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_19]
    default ["2.6.27.18"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_18]
    default ["2.6.27.17"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_17]
    default ["2.6.27.16"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_16]
    default ["2.6.27.15"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_15]
    default ["2.6.27.14"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_14]
    default ["2.6.27.13"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_13]
    default ["2.6.27.12"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_12]
    default ["2.6.27.11"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_11]
    default ["2.6.27.10"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_10]
    default ["2.6.27.9"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_9]
    default ["2.6.27.8"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_8]
    default ["2.6.27.7"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_7]
    default ["2.6.27.6"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_6]
    default ["2.6.27.5"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_5]
    default ["2.6.27.4"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_4]
    default ["2.6.27.3"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_3]
    default ["2.6.27.2"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_2]
    default ["2.6.27.1"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_1]
    default ["2.6.27"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27]
    inherited [EMBTK_LINUX_VERSION_2_6_29_X]
   }
  }
  if [EMBTK_LINUX_VERSION_2_6_28_X] {
   choice boolean {
    prompt "Linux v2.6.28.x series exact version to use." if [EMBTK_LINUX_VERSION_2_6_28_X]
    default [EMBTK_LINUX_VERSION_2_6_28_10] if [EMBTK_LINUX_VERSION_2_6_28_X]
    config EMBTK_LINUX_VERSION_2_6_28_10 boolean {
     prompt "linux-2.6.28.10" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_28_9 boolean {
     prompt "linux-2.6.28.9" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_28_8 boolean {
     prompt "linux-2.6.28.8" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_28_7 boolean {
     prompt "linux-2.6.28.7" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_28_6 boolean {
     prompt "linux-2.6.28.6" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_28_5 boolean {
     prompt "linux-2.6.28.5" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_28_4 boolean {
     prompt "linux-2.6.28.4" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_28_3 boolean {
     prompt "linux-2.6.28.3" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_28_2 boolean {
     prompt "linux-2.6.28.2" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_28_1 boolean {
     prompt "linux-2.6.28.1" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_28 boolean {
     prompt "linux-2.6.28" if [<choice>]
     inherited [<choice>]
    }
   }
   config EMBTK_LINUX_VERSION_STRING string {
    default ["2.6.35.3"] if [EMBTK_LINUX_VERSION_2_6_35_X && EMBTK_LINUX_VERSION_2_6_35_3]
    default ["2.6.35.2"] if [EMBTK_LINUX_VERSION_2_6_35_X && EMBTK_LINUX_VERSION_2_6_35_2]
    default ["2.6.35.1"] if [EMBTK_LINUX_VERSION_2_6_35_X && EMBTK_LINUX_VERSION_2_6_35_1]
    default ["2.6.35"] if [EMBTK_LINUX_VERSION_2_6_35_X && EMBTK_LINUX_VERSION_2_6_35]
    default ["2.6.34.5"] if [EMBTK_LINUX_VERSION_2_6_34_X && EMBTK_LINUX_VERSION_2_6_34_5]
    default ["2.6.34.4"] if [EMBTK_LINUX_VERSION_2_6_34_X && EMBTK_LINUX_VERSION_2_6_34_4]
    default ["2.6.34.3"] if [EMBTK_LINUX_VERSION_2_6_34_X && EMBTK_LINUX_VERSION_2_6_34_3]
    default ["2.6.34.2"] if [EMBTK_LINUX_VERSION_2_6_34_X && EMBTK_LINUX_VERSION_2_6_34_2]
    default ["2.6.34.1"] if [EMBTK_LINUX_VERSION_2_6_34_X && EMBTK_LINUX_VERSION_2_6_34_1]
    default ["2.6.34"] if [EMBTK_LINUX_VERSION_2_6_34_X && EMBTK_LINUX_VERSION_2_6_34]
    default ["2.6.33.7"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_7]
    default ["2.6.33.6"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_6]
    default ["2.6.33.5"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_5]
    default ["2.6.33.4"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_4]
    default ["2.6.33.3"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_3]
    default ["2.6.33.2"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_2]
    default ["2.6.33.1"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_1]
    default ["2.6.33"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33]
    default ["2.6.32.20"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_20]
    default ["2.6.32.19"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_19]
    default ["2.6.32.18"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_18]
    default ["2.6.32.17"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_17]
    default ["2.6.32.16"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_16]
    default ["2.6.32.15"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_15]
    default ["2.6.32.14"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_14]
    default ["2.6.32.13"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_13]
    default ["2.6.32.12"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_12]
    default ["2.6.32.11"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_11]
    default ["2.6.32.10"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_10]
    default ["2.6.32.9"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_9]
    default ["2.6.32.8"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_8]
    default ["2.6.32.7"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_7]
    default ["2.6.32.6"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_6]
    default ["2.6.32.5"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_5]
    default ["2.6.32.4"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_4]
    default ["2.6.32.3"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_3]
    default ["2.6.32.2"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_2]
    default ["2.6.32.1"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_1]
    default ["2.6.32"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32]
    default ["2.6.31.14"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_14]
    default ["2.6.31.13"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_13]
    default ["2.6.31.12"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_12]
    default ["2.6.31.11"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_11]
    default ["2.6.31.10"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_10]
    default ["2.6.31.9"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_9]
    default ["2.6.31.8"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_8]
    default ["2.6.31.7"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_7]
    default ["2.6.31.6"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_6]
    default ["2.6.31.5"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_5]
    default ["2.6.31.4"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_4]
    default ["2.6.31.3"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_3]
    default ["2.6.31.2"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_2]
    default ["2.6.31.1"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_1]
    default ["2.6.31"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31]
    default ["2.6.30.10"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_10]
    default ["2.6.30.9"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_9]
    default ["2.6.30.8"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_8]
    default ["2.6.30.7"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_7]
    default ["2.6.30.6"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_6]
    default ["2.6.30.5"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_5]
    default ["2.6.30.4"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_4]
    default ["2.6.30.3"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_3]
    default ["2.6.30.2"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_2]
    default ["2.6.30.1"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_1]
    default ["2.6.30"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30]
    default ["2.6.29.6"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29_6]
    default ["2.6.29.5"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29_5]
    default ["2.6.29.4"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29_4]
    default ["2.6.29.3"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29_3]
    default ["2.6.29.2"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29_2]
    default ["2.6.29.1"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29_1]
    default ["2.6.29"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29]
    default ["2.6.28.10"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_10]
    default ["2.6.28.9"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_9]
    default ["2.6.28.8"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_8]
    default ["2.6.28.7"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_7]
    default ["2.6.28.6"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_6]
    default ["2.6.28.5"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_5]
    default ["2.6.28.4"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_4]
    default ["2.6.28.3"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_3]
    default ["2.6.28.2"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_2]
    default ["2.6.28.1"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_1]
    default ["2.6.28"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28]
    default ["2.6.27.52"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_52]
    default ["2.6.27.51"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_51]
    default ["2.6.27.50"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_50]
    default ["2.6.27.49"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_49]
    default ["2.6.27.48"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_48]
    default ["2.6.27.47"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_47]
    default ["2.6.27.46"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_46]
    default ["2.6.27.45"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_45]
    default ["2.6.27.44"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_44]
    default ["2.6.27.43"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_43]
    default ["2.6.27.42"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_42]
    default ["2.6.27.41"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_41]
    default ["2.6.27.40"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_40]
    default ["2.6.27.39"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_39]
    default ["2.6.27.38"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_38]
    default ["2.6.27.37"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_37]
    default ["2.6.27.36"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_36]
    default ["2.6.27.35"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_35]
    default ["2.6.27.34"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_34]
    default ["2.6.27.33"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_33]
    default ["2.6.27.32"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_32]
    default ["2.6.27.31"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_31]
    default ["2.6.27.30"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_30]
    default ["2.6.27.29"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_29]
    default ["2.6.27.28"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_28]
    default ["2.6.27.27"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_27]
    default ["2.6.27.26"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_26]
    default ["2.6.27.25"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_25]
    default ["2.6.27.24"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_24]
    default ["2.6.27.23"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_23]
    default ["2.6.27.22"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_22]
    default ["2.6.27.21"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_21]
    default ["2.6.27.20"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_20]
    default ["2.6.27.19"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_19]
    default ["2.6.27.18"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_18]
    default ["2.6.27.17"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_17]
    default ["2.6.27.16"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_16]
    default ["2.6.27.15"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_15]
    default ["2.6.27.14"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_14]
    default ["2.6.27.13"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_13]
    default ["2.6.27.12"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_12]
    default ["2.6.27.11"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_11]
    default ["2.6.27.10"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_10]
    default ["2.6.27.9"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_9]
    default ["2.6.27.8"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_8]
    default ["2.6.27.7"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_7]
    default ["2.6.27.6"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_6]
    default ["2.6.27.5"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_5]
    default ["2.6.27.4"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_4]
    default ["2.6.27.3"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_3]
    default ["2.6.27.2"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_2]
    default ["2.6.27.1"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_1]
    default ["2.6.27"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27]
    inherited [EMBTK_LINUX_VERSION_2_6_28_X]
   }
  }
  if [EMBTK_LINUX_VERSION_2_6_27_X] {
   choice boolean {
    prompt "Linux v2.6.27.x series exact version to use." if [EMBTK_LINUX_VERSION_2_6_27_X]
    config EMBTK_LINUX_VERSION_2_6_27_52 boolean {
     prompt "linux-2.6.27.52" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_27_51 boolean {
     prompt "linux-2.6.27.51" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_27_50 boolean {
     prompt "linux-2.6.27.50" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_27_49 boolean {
     prompt "linux-2.6.27.49" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_27_48 boolean {
     prompt "linux-2.6.27.48" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_27_47 boolean {
     prompt "linux-2.6.27.47" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_27_46 boolean {
     prompt "linux-2.6.27.46" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_27_45 boolean {
     prompt "linux-2.6.27.45" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_27_44 boolean {
     prompt "linux-2.6.27.44" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_27_43 boolean {
     prompt "linux-2.6.27.43" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_27_42 boolean {
     prompt "linux-2.6.27.42" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_27_41 boolean {
     prompt "linux-2.6.27.41" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_27_40 boolean {
     prompt "linux-2.6.27.40" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_27_38 boolean {
     prompt "linux-2.6.27.38" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_27_37 boolean {
     prompt "linux-2.6.27.37" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_27_36 boolean {
     prompt "linux-2.6.27.36" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_27_35 boolean {
     prompt "linux-2.6.27.35" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_27_34 boolean {
     prompt "linux-2.6.27.34" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_27_33 boolean {
     prompt "linux-2.6.27.33" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_27_32 boolean {
     prompt "linux-2.6.27.32" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_27_31 boolean {
     prompt "linux-2.6.27.31" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_27_30 boolean {
     prompt "linux-2.6.27.30" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_27_29 boolean {
     prompt "linux-2.6.27.29" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_27_28 boolean {
     prompt "linux-2.6.27.28" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_27_27 boolean {
     prompt "linux-2.6.27.27" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_27_26 boolean {
     prompt "linux-2.6.27.26" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_27_25 boolean {
     prompt "linux-2.6.27.25" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_27_24 boolean {
     prompt "linux-2.6.27.24" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_27_23 boolean {
     prompt "linux-2.6.27.23" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_27_22 boolean {
     prompt "linux-2.6.27.22" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_27_21 boolean {
     prompt "linux-2.6.27.21" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_27_20 boolean {
     prompt "linux-2.6.27.20" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_27_19 boolean {
     prompt "linux-2.6.27.19" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_27_18 boolean {
     prompt "linux-2.6.27.18" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_27_17 boolean {
     prompt "linux-2.6.27.17" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_27_16 boolean {
     prompt "linux-2.6.27.16" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_27_15 boolean {
     prompt "linux-2.6.27.15" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_27_14 boolean {
     prompt "linux-2.6.27.14" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_27_13 boolean {
     prompt "linux-2.6.27.13" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_27_12 boolean {
     prompt "linux-2.6.27.12" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_27_11 boolean {
     prompt "linux-2.6.27.11" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_27_10 boolean {
     prompt "linux-2.6.27.10" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_27_9 boolean {
     prompt "linux-2.6.27.9" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_27_8 boolean {
     prompt "linux-2.6.27.8" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_27_7 boolean {
     prompt "linux-2.6.27.7" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_27_6 boolean {
     prompt "linux-2.6.27.6" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_27_5 boolean {
     prompt "linux-2.6.27.5" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_27_4 boolean {
     prompt "linux-2.6.27.4" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_27_3 boolean {
     prompt "linux-2.6.27.3" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_27_2 boolean {
     prompt "linux-2.6.27.2" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_27_1 boolean {
     prompt "linux-2.6.27.1" if [<choice>]
     inherited [<choice>]
    }
    config EMBTK_LINUX_VERSION_2_6_27 boolean {
     prompt "linux-2.6.27" if [<choice>]
     inherited [<choice>]
    }
   }
   config EMBTK_LINUX_VERSION_STRING string {
    default ["2.6.35.3"] if [EMBTK_LINUX_VERSION_2_6_35_X && EMBTK_LINUX_VERSION_2_6_35_3]
    default ["2.6.35.2"] if [EMBTK_LINUX_VERSION_2_6_35_X && EMBTK_LINUX_VERSION_2_6_35_2]
    default ["2.6.35.1"] if [EMBTK_LINUX_VERSION_2_6_35_X && EMBTK_LINUX_VERSION_2_6_35_1]
    default ["2.6.35"] if [EMBTK_LINUX_VERSION_2_6_35_X && EMBTK_LINUX_VERSION_2_6_35]
    default ["2.6.34.5"] if [EMBTK_LINUX_VERSION_2_6_34_X && EMBTK_LINUX_VERSION_2_6_34_5]
    default ["2.6.34.4"] if [EMBTK_LINUX_VERSION_2_6_34_X && EMBTK_LINUX_VERSION_2_6_34_4]
    default ["2.6.34.3"] if [EMBTK_LINUX_VERSION_2_6_34_X && EMBTK_LINUX_VERSION_2_6_34_3]
    default ["2.6.34.2"] if [EMBTK_LINUX_VERSION_2_6_34_X && EMBTK_LINUX_VERSION_2_6_34_2]
    default ["2.6.34.1"] if [EMBTK_LINUX_VERSION_2_6_34_X && EMBTK_LINUX_VERSION_2_6_34_1]
    default ["2.6.34"] if [EMBTK_LINUX_VERSION_2_6_34_X && EMBTK_LINUX_VERSION_2_6_34]
    default ["2.6.33.7"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_7]
    default ["2.6.33.6"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_6]
    default ["2.6.33.5"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_5]
    default ["2.6.33.4"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_4]
    default ["2.6.33.3"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_3]
    default ["2.6.33.2"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_2]
    default ["2.6.33.1"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33_1]
    default ["2.6.33"] if [EMBTK_LINUX_VERSION_2_6_33_X && EMBTK_LINUX_VERSION_2_6_33]
    default ["2.6.32.20"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_20]
    default ["2.6.32.19"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_19]
    default ["2.6.32.18"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_18]
    default ["2.6.32.17"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_17]
    default ["2.6.32.16"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_16]
    default ["2.6.32.15"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_15]
    default ["2.6.32.14"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_14]
    default ["2.6.32.13"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_13]
    default ["2.6.32.12"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_12]
    default ["2.6.32.11"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_11]
    default ["2.6.32.10"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_10]
    default ["2.6.32.9"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_9]
    default ["2.6.32.8"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_8]
    default ["2.6.32.7"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_7]
    default ["2.6.32.6"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_6]
    default ["2.6.32.5"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_5]
    default ["2.6.32.4"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_4]
    default ["2.6.32.3"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_3]
    default ["2.6.32.2"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_2]
    default ["2.6.32.1"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32_1]
    default ["2.6.32"] if [EMBTK_LINUX_VERSION_2_6_32_X && EMBTK_LINUX_VERSION_2_6_32]
    default ["2.6.31.14"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_14]
    default ["2.6.31.13"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_13]
    default ["2.6.31.12"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_12]
    default ["2.6.31.11"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_11]
    default ["2.6.31.10"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_10]
    default ["2.6.31.9"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_9]
    default ["2.6.31.8"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_8]
    default ["2.6.31.7"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_7]
    default ["2.6.31.6"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_6]
    default ["2.6.31.5"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_5]
    default ["2.6.31.4"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_4]
    default ["2.6.31.3"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_3]
    default ["2.6.31.2"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_2]
    default ["2.6.31.1"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31_1]
    default ["2.6.31"] if [EMBTK_LINUX_VERSION_2_6_31_X && EMBTK_LINUX_VERSION_2_6_31]
    default ["2.6.30.10"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_10]
    default ["2.6.30.9"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_9]
    default ["2.6.30.8"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_8]
    default ["2.6.30.7"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_7]
    default ["2.6.30.6"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_6]
    default ["2.6.30.5"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_5]
    default ["2.6.30.4"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_4]
    default ["2.6.30.3"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_3]
    default ["2.6.30.2"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_2]
    default ["2.6.30.1"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30_1]
    default ["2.6.30"] if [EMBTK_LINUX_VERSION_2_6_30_X && EMBTK_LINUX_VERSION_2_6_30]
    default ["2.6.29.6"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29_6]
    default ["2.6.29.5"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29_5]
    default ["2.6.29.4"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29_4]
    default ["2.6.29.3"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29_3]
    default ["2.6.29.2"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29_2]
    default ["2.6.29.1"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29_1]
    default ["2.6.29"] if [EMBTK_LINUX_VERSION_2_6_29_X && EMBTK_LINUX_VERSION_2_6_29]
    default ["2.6.28.10"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_10]
    default ["2.6.28.9"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_9]
    default ["2.6.28.8"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_8]
    default ["2.6.28.7"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_7]
    default ["2.6.28.6"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_6]
    default ["2.6.28.5"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_5]
    default ["2.6.28.4"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_4]
    default ["2.6.28.3"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_3]
    default ["2.6.28.2"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_2]
    default ["2.6.28.1"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28_1]
    default ["2.6.28"] if [EMBTK_LINUX_VERSION_2_6_28_X && EMBTK_LINUX_VERSION_2_6_28]
    default ["2.6.27.52"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_52]
    default ["2.6.27.51"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_51]
    default ["2.6.27.50"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_50]
    default ["2.6.27.49"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_49]
    default ["2.6.27.48"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_48]
    default ["2.6.27.47"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_47]
    default ["2.6.27.46"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_46]
    default ["2.6.27.45"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_45]
    default ["2.6.27.44"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_44]
    default ["2.6.27.43"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_43]
    default ["2.6.27.42"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_42]
    default ["2.6.27.41"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_41]
    default ["2.6.27.40"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_40]
    default ["2.6.27.39"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_39]
    default ["2.6.27.38"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_38]
    default ["2.6.27.37"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_37]
    default ["2.6.27.36"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_36]
    default ["2.6.27.35"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_35]
    default ["2.6.27.34"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_34]
    default ["2.6.27.33"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_33]
    default ["2.6.27.32"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_32]
    default ["2.6.27.31"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_31]
    default ["2.6.27.30"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_30]
    default ["2.6.27.29"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_29]
    default ["2.6.27.28"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_28]
    default ["2.6.27.27"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_27]
    default ["2.6.27.26"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_26]
    default ["2.6.27.25"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_25]
    default ["2.6.27.24"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_24]
    default ["2.6.27.23"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_23]
    default ["2.6.27.22"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_22]
    default ["2.6.27.21"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_21]
    default ["2.6.27.20"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_20]
    default ["2.6.27.19"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_19]
    default ["2.6.27.18"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_18]
    default ["2.6.27.17"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_17]
    default ["2.6.27.16"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_16]
    default ["2.6.27.15"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_15]
    default ["2.6.27.14"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_14]
    default ["2.6.27.13"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_13]
    default ["2.6.27.12"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_12]
    default ["2.6.27.11"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_11]
    default ["2.6.27.10"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_10]
    default ["2.6.27.9"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_9]
    default ["2.6.27.8"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_8]
    default ["2.6.27.7"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_7]
    default ["2.6.27.6"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_6]
    default ["2.6.27.5"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_5]
    default ["2.6.27.4"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_4]
    default ["2.6.27.3"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_3]
    default ["2.6.27.2"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_2]
    default ["2.6.27.1"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27_1]
    default ["2.6.27"] if [EMBTK_LINUX_VERSION_2_6_27_X && EMBTK_LINUX_VERSION_2_6_27]
    inherited [EMBTK_LINUX_VERSION_2_6_27_X]
   }
  }
  config EMBTK_LINUX_HAVE_MIRROR boolean {
   prompt "Use a linux mirror" if []
   config EMBTK_LINUX_HAVE_MIRROR_SITE string {
    depends on [EMBTK_LINUX_HAVE_MIRROR]
    prompt "Mirror site" if [EMBTK_LINUX_HAVE_MIRROR]
    default ["ftp://ftp.free.fr/pub/linux/kernel/v2.6"] if [EMBTK_LINUX_HAVE_MIRROR]
    inherited [EMBTK_LINUX_HAVE_MIRROR]
   }
  }
 }
 menu "GMP" {
  choice boolean {
   prompt "Version of gmp you wish" if []
   config EMBTK_GMP_HOST_VERSION_4_3_2 boolean {
    prompt "gmp-4.3.2" if [<choice>]
    inherited [<choice>]
   }
   config EMBTK_GMP_HOST_VERSION_4_3_1 boolean {
    prompt "gmp-4.3.1" if [<choice> && EMBTK_OLDPACKAGES]
    depends on [EMBTK_OLDPACKAGES]
    inherited [<choice> && EMBTK_OLDPACKAGES]
   }
   config EMBTK_GMP_HOST_VERSION_4_3_0 boolean {
    prompt "gmp-4.3.0" if [<choice> && EMBTK_OLDPACKAGES]
    depends on [EMBTK_OLDPACKAGES]
    inherited [<choice> && EMBTK_OLDPACKAGES]
   }
   config EMBTK_GMP_HOST_VERSION_4_2_4 boolean {
    prompt "gmp-4.2.4" if [<choice>]
    inherited [<choice>]
   }
  }
  config EMBTK_GMP_HOST_VERSION_STRING string {
   default ["4.3.2"] if [EMBTK_GMP_HOST_VERSION_4_3_2]
   default ["4.3.1"] if [EMBTK_GMP_HOST_VERSION_4_3_1]
   default ["4.3.0"] if [EMBTK_GMP_HOST_VERSION_4_3_0]
   default ["4.2.4"] if [EMBTK_GMP_HOST_VERSION_4_2_4]
  }
 }
 menu "MPFR" {
  choice boolean {
   prompt "Version of mpfr you wish" if []
   default [EMBTK_MPFR_HOST_VERSION_2_4_2] if []
   config EMBTK_MPFR_HOST_VERSION_2_4_2 boolean {
    prompt "mpfr-2.4.2" if [<choice>]
    select EMBTK_MPFR_HOST_VERSION_PATCH if [<choice>]
    inherited [<choice>]
   }
   config EMBTK_MPFR_HOST_VERSION_2_4_1 boolean {
    prompt "mpfr-2.4.1" if [<choice>]
    select EMBTK_MPFR_HOST_VERSION_PATCH if [<choice>]
    inherited [<choice>]
   }
   config EMBTK_MPFR_HOST_VERSION_2_4_0 boolean {
    prompt "mpfr-2.4.0" if [<choice>]
    select EMBTK_MPFR_HOST_VERSION_PATCH if [<choice>]
    inherited [<choice>]
   }
  }
  config EMBTK_MPFR_HOST_VERSION_STRING string {
   default ["2.4.2"] if [EMBTK_MPFR_HOST_VERSION_2_4_2]
   default ["2.4.1"] if [EMBTK_MPFR_HOST_VERSION_2_4_1]
   default ["2.4.0"] if [EMBTK_MPFR_HOST_VERSION_2_4_0]
  }
  config EMBTK_MPFR_HOST_VERSION_PATCH boolean {
  }
 }
 menu "MPC" {
  choice boolean {
   prompt "Version of mpc you wish" if []
   config EMBTK_MPC_HOST_VERSION_0_8_1 boolean {
    prompt "mpc-0.8.1" if [<choice>]
    inherited [<choice>]
   }
  }
  config EMBTK_MPC_HOST_VERSION_STRING string {
   default ["0.8.1"] if [EMBTK_MPC_HOST_VERSION_0_8_1]
  }
  config EMBTK_MPC_NEED_PATCH boolean {
  }
 }
}
menu "Target build options" {
 config EMBTK_TARGET_COMPILER_CFLAGS string {
  prompt "Additional compiler flags for your target" if []
  default ["-Os"] if []
 }
 config EMBTK_TARGET_STRIPPED boolean {
  prompt "Strip target's binaries" if []
 }
}
menu "Debugging system" {
 config EMBTK_HAVE_GDB boolean {
  prompt "Have GDB: Gnu debugging system" if []
  select EMBTK_HAVE_NCURSES if []
  choice boolean {
   prompt "GDB version to use" if [EMBTK_HAVE_GDB]
   depends on [EMBTK_HAVE_GDB]
   config EMBTK_GDB_VERSION_7_1 boolean {
    prompt "gdb-7.1" if [<choice>]
    inherited [<choice>]
   }
   config EMBTK_GDB_VERSION_7_0_1 boolean {
    depends on [!EMBTK_CLIB_UCLIBC]
    prompt "gdb-7.0.1" if [<choice> && !EMBTK_CLIB_UCLIBC]
    inherited [<choice> && !EMBTK_CLIB_UCLIBC]
   }
   config EMBTK_GDB_VERSION_7_0 boolean {
    depends on [!EMBTK_CLIB_UCLIBC]
    prompt "gdb-7.0" if [<choice> && !EMBTK_CLIB_UCLIBC]
    inherited [<choice> && !EMBTK_CLIB_UCLIBC]
   }
   config EMBTK_GDB_VERSION_6_8 boolean {
    prompt "gdb-6.8" if [<choice>]
    inherited [<choice>]
   }
  }
 }
 config EMBTK_GDB_VERSION_STRING string {
  default ["7.1"] if [EMBTK_GDB_VERSION_7_1]
  default ["7.0.1"] if [EMBTK_GDB_VERSION_7_0_1]
  default ["7.0"] if [EMBTK_GDB_VERSION_7_0]
  default ["6.8"] if [EMBTK_GDB_VERSION_6_8]
 }
 choice boolean {
  prompt "GDB on your target embedded system" if [EMBTK_HAVE_GDB && EMBTK_HAVE_ROOTFS]
  depends on [EMBTK_HAVE_GDB]
  depends on [EMBTK_HAVE_ROOTFS]
  config EMBTK_HAVE_GDBSERVER_ON_TARGET boolean {
   prompt "Have gdbserver on target" if [<choice>]
   inherited [<choice>]
  }
  config EMBTK_HAVE_GDB_ON_TARGET boolean {
   prompt "Have gdb on target" if [<choice>]
   inherited [<choice>]
  }
 }
 config EMBTK_HAVE_GDB_ON_HOST boolean {
  prompt "Have gdb on host" if [EMBTK_HAVE_GDB]
  depends on [EMBTK_HAVE_GDB]
  inherited [EMBTK_HAVE_GDB]
 }
 config EMBTK_ROOTFS_HAVE_STRACE boolean {
  depends on [EMBTK_HAVE_ROOTFS]
  prompt "Have strace in target" if [EMBTK_HAVE_ROOTFS]
  inherited [EMBTK_HAVE_ROOTFS]
  choice boolean {
   prompt "starce version to use" if [EMBTK_ROOTFS_HAVE_STRACE]
   depends on [EMBTK_ROOTFS_HAVE_STRACE]
   config EMBTK_STRACE_VERSION_4_5_19 boolean {
    prompt "strace-4.5.19" if [<choice>]
    select EMBTK_STRACE_NEED_PATCH if [<choice>]
    inherited [<choice>]
   }
   config EMBTK_STRACE_VERSION_4_5_18 boolean {
    prompt "strace-4.5.18" if [<choice>]
    select EMBTK_STRACE_NEED_PATCH if [<choice>]
    inherited [<choice>]
   }
  }
 }
 config EMBTK_STRACE_VERSION_STRING string {
  default ["4.5.19"] if [EMBTK_STRACE_VERSION_4_5_19]
  default ["4.5.18"] if [EMBTK_STRACE_VERSION_4_5_18]
 }
 config EMBTK_STRACE_NEED_PATCH boolean {
 }
}
config EMBTK_HAVE_ROOTFS boolean {
 prompt "Build root filesystem" if []
 if [EMBTK_HAVE_ROOTFS] {
  config EMBTK_HOST_HAVE_MTDUTILS boolean {
   select EMBTK_HAVE_UTILLINUXNG if [EMBTK_HAVE_ROOTFS]
   select EMBTK_HOST_HAVE_ZLIB if [EMBTK_HAVE_ROOTFS]
   inherited [EMBTK_HAVE_ROOTFS]
  }
  choice boolean {
   prompt "mtd-utils version used" if [EMBTK_HAVE_ROOTFS && (EMBTK_HOST_HAVE_MTDUTILS || EMBTK_ROOTFS_HAVE_MTDUTILS)]
   depends on [EMBTK_HOST_HAVE_MTDUTILS || EMBTK_ROOTFS_HAVE_MTDUTILS]
   config EMBTK_MTDUTILS_VERSION_1_3_1 boolean {
    prompt "mtd-utils-1.3.1" if [<choice>]
    select EMBTK_MTDUTILS_NEED_PATCH if [<choice>]
    inherited [<choice>]
   }
  }
  config EMBTK_MTDUTILS_VERSION_STRING string {
   default ["1.3.1"] if [EMBTK_HAVE_ROOTFS && EMBTK_MTDUTILS_VERSION_1_3_1]
   inherited [EMBTK_HAVE_ROOTFS]
  }
  config EMBTK_MTDUTILS_NEED_PATCH boolean {
   inherited [EMBTK_HAVE_ROOTFS]
  }
  menu "Type of root filesystem to build" {
   depends on [EMBTK_HAVE_ROOTFS]
   config EMBTK_ROOTFS_HAVE_INITRAMFS_CPIO boolean {
    prompt "Build cpio archive for initramfs" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
    choice boolean {
     depends on [EMBTK_ROOTFS_HAVE_INITRAMFS_CPIO]
     prompt "Compression program to use" if [EMBTK_HAVE_ROOTFS && EMBTK_ROOTFS_HAVE_INITRAMFS_CPIO]
     config EMBTK_ROOTFS_HAVE_INITRAMFS_CPIO_GZIPED boolean {
      prompt "gzip" if [<choice>]
      inherited [<choice>]
     }
     config EMBTK_ROOTFS_HAVE_INITRAMFS_CPIO_BZIPED boolean {
      prompt "bzip2" if [<choice>]
      inherited [<choice>]
     }
    }
   }
   config EMBTK_ROOTFS_HAVE_JFFS2 boolean {
    prompt "Build a JFFS2 root filesystem image" if [EMBTK_HAVE_ROOTFS]
    select EMBTK_HOST_HAVE_MTDUTILS if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
    config EMBTK_ROOTFS_HAVE_JFFS2_ERASEBLOCKSIZE integer {
     depends on [EMBTK_ROOTFS_HAVE_JFFS2]
     prompt "Erase block size to use in bytes" if [EMBTK_HAVE_ROOTFS && EMBTK_ROOTFS_HAVE_JFFS2]
     default [16384] if [EMBTK_HAVE_ROOTFS && EMBTK_ROOTFS_HAVE_JFFS2]
     inherited [EMBTK_HAVE_ROOTFS && EMBTK_ROOTFS_HAVE_JFFS2]
    }
    config EMBTK_ROOTFS_HAVE_JFFS2_PAGESIZE integer {
     depends on [EMBTK_ROOTFS_HAVE_JFFS2]
     prompt "Page size to use in bytes" if [EMBTK_HAVE_ROOTFS && EMBTK_ROOTFS_HAVE_JFFS2]
     default [4096] if [EMBTK_HAVE_ROOTFS && EMBTK_ROOTFS_HAVE_JFFS2]
     inherited [EMBTK_HAVE_ROOTFS && EMBTK_ROOTFS_HAVE_JFFS2]
    }
    config EMBTK_ROOTFS_HAVE_JFFS2_CLEANMARKERSIZE integer {
     depends on [EMBTK_ROOTFS_HAVE_JFFS2]
     prompt "Size of cleanmarker in bytes (almost always 12)" if [EMBTK_HAVE_ROOTFS && EMBTK_ROOTFS_HAVE_JFFS2]
     default [12] if [EMBTK_HAVE_ROOTFS && EMBTK_ROOTFS_HAVE_JFFS2]
     inherited [EMBTK_HAVE_ROOTFS && EMBTK_ROOTFS_HAVE_JFFS2]
    }
   }
   config EMBTK_ROOTFS_HAVE_SQUASHFS boolean {
    prompt "Build a squashfs root filesystem image" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
  }
  config EMBTK_ROOTFS_HAVE_BB boolean {
   prompt "Have Busybox in your root filesystem" if [EMBTK_HAVE_ROOTFS]
   inherited [EMBTK_HAVE_ROOTFS]
   if [EMBTK_HAVE_ROOTFS && EMBTK_ROOTFS_HAVE_BB] {
    menu "Busybox configuration" {
     depends on [EMBTK_HAVE_ROOTFS && EMBTK_ROOTFS_HAVE_BB]
     choice boolean {
      prompt "Busybox version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_ROOTFS_HAVE_BB]
      config EMBTK_BB_VERSION_1_16_2 boolean {
       prompt "busybox-1.16.2" if [<choice>]
       inherited [<choice>]
      }
      config EMBTK_BB_VERSION_1_16_1 boolean {
       prompt "busybox-1.16.1" if [<choice>]
       inherited [<choice>]
      }
      config EMBTK_BB_VERSION_1_15_3 boolean {
       prompt "busybox-1.15.3" if [<choice>]
       inherited [<choice>]
      }
      config EMBTK_BB_VERSION_1_15_2 boolean {
       prompt "busybox-1.15.2" if [<choice>]
       inherited [<choice>]
      }
      config EMBTK_BB_VERSION_1_15_1 boolean {
       prompt "busybox-1.15.1" if [<choice>]
       inherited [<choice>]
      }
      config EMBTK_BB_VERSION_1_15_0 boolean {
       prompt "busybox-1.15.0" if [<choice>]
       inherited [<choice>]
      }
      config EMBTK_BB_VERSION_1_14_4 boolean {
       prompt "busybox-1.14.4" if [<choice>]
       inherited [<choice>]
      }
      config EMBTK_BB_VERSION_1_14_3 boolean {
       prompt "busybox-1.14.3" if [<choice>]
       inherited [<choice>]
      }
      config EMBTK_BB_VERSION_1_14_2 boolean {
       prompt "busybox-1.14.2" if [<choice>]
       inherited [<choice>]
      }
      config EMBTK_BB_VERSION_1_14_1 boolean {
       prompt "busybox-1.14.1" if [<choice>]
       inherited [<choice>]
      }
      config EMBTK_BB_VERSION_1_13_4 boolean {
       prompt "busybox-1.13.4" if [<choice>]
       inherited [<choice>]
      }
     }
     config EMBTK_BB_VERSION_STRING string {
      default ["1.16.2"] if [EMBTK_HAVE_ROOTFS && EMBTK_ROOTFS_HAVE_BB && EMBTK_BB_VERSION_1_16_2]
      default ["1.16.1"] if [EMBTK_HAVE_ROOTFS && EMBTK_ROOTFS_HAVE_BB && EMBTK_BB_VERSION_1_16_1]
      default ["1.15.3"] if [EMBTK_HAVE_ROOTFS && EMBTK_ROOTFS_HAVE_BB && EMBTK_BB_VERSION_1_15_3]
      default ["1.15.2"] if [EMBTK_HAVE_ROOTFS && EMBTK_ROOTFS_HAVE_BB && EMBTK_BB_VERSION_1_15_2]
      default ["1.15.1"] if [EMBTK_HAVE_ROOTFS && EMBTK_ROOTFS_HAVE_BB && EMBTK_BB_VERSION_1_15_1]
      default ["1.15.0"] if [EMBTK_HAVE_ROOTFS && EMBTK_ROOTFS_HAVE_BB && EMBTK_BB_VERSION_1_15_0]
      default ["1.14.4"] if [EMBTK_HAVE_ROOTFS && EMBTK_ROOTFS_HAVE_BB && EMBTK_BB_VERSION_1_14_4]
      default ["1.14.3"] if [EMBTK_HAVE_ROOTFS && EMBTK_ROOTFS_HAVE_BB && EMBTK_BB_VERSION_1_14_3]
      default ["1.14.2"] if [EMBTK_HAVE_ROOTFS && EMBTK_ROOTFS_HAVE_BB && EMBTK_BB_VERSION_1_14_2]
      default ["1.14.1"] if [EMBTK_HAVE_ROOTFS && EMBTK_ROOTFS_HAVE_BB && EMBTK_BB_VERSION_1_14_1]
      default ["1.13.4"] if [EMBTK_HAVE_ROOTFS && EMBTK_ROOTFS_HAVE_BB && EMBTK_BB_VERSION_1_13_4]
      inherited [EMBTK_HAVE_ROOTFS && EMBTK_ROOTFS_HAVE_BB]
     }
     config EMBTK_BB_DOT_CONFIG string {
      default ["busybox-1.16.config"] if [EMBTK_HAVE_ROOTFS && EMBTK_ROOTFS_HAVE_BB && EMBTK_BB_VERSION_1_16_2]
      default ["busybox-1.16.config"] if [EMBTK_HAVE_ROOTFS && EMBTK_ROOTFS_HAVE_BB && EMBTK_BB_VERSION_1_16_1]
      default ["busybox-1.15.config"] if [EMBTK_HAVE_ROOTFS && EMBTK_ROOTFS_HAVE_BB && EMBTK_BB_VERSION_1_15_3]
      default ["busybox-1.15.config"] if [EMBTK_HAVE_ROOTFS && EMBTK_ROOTFS_HAVE_BB && EMBTK_BB_VERSION_1_15_2]
      default ["busybox-1.15.config"] if [EMBTK_HAVE_ROOTFS && EMBTK_ROOTFS_HAVE_BB && EMBTK_BB_VERSION_1_15_1]
      default ["busybox-1.15.config"] if [EMBTK_HAVE_ROOTFS && EMBTK_ROOTFS_HAVE_BB && EMBTK_BB_VERSION_1_15_0]
      default ["busybox-1.14.config"] if [EMBTK_HAVE_ROOTFS && EMBTK_ROOTFS_HAVE_BB && EMBTK_BB_VERSION_1_14_4]
      default ["busybox-1.14.config"] if [EMBTK_HAVE_ROOTFS && EMBTK_ROOTFS_HAVE_BB && EMBTK_BB_VERSION_1_14_3]
      default ["busybox-1.14.config"] if [EMBTK_HAVE_ROOTFS && EMBTK_ROOTFS_HAVE_BB && EMBTK_BB_VERSION_1_14_2]
      default ["busybox-1.14.config"] if [EMBTK_HAVE_ROOTFS && EMBTK_ROOTFS_HAVE_BB && EMBTK_BB_VERSION_1_14_1]
      default ["busybox-1.13.config"] if [EMBTK_HAVE_ROOTFS && EMBTK_ROOTFS_HAVE_BB && EMBTK_BB_VERSION_1_13_4]
      inherited [EMBTK_HAVE_ROOTFS && EMBTK_ROOTFS_HAVE_BB]
     }
    }
   }
  }
  menu "Packages to include in your root filesystem" {
   depends on [EMBTK_HAVE_ROOTFS]
   menu "Flash manipulation tools" {
    depends on [EMBTK_HAVE_ROOTFS]
    config EMBTK_ROOTFS_HAVE_MTDUTILS boolean {
     prompt "Have mtd-utils in your target root filesystem" if [EMBTK_HAVE_ROOTFS]
     select EMBTK_HAVE_ZLIB if [EMBTK_HAVE_ROOTFS]
     select KEMBTK_UCLIBC_UCLIBC_SUSV3_LEGACY_MACROS if [EMBTK_HAVE_ROOTFS && EMBTK_CLIB_UCLIBC]
     inherited [EMBTK_HAVE_ROOTFS]
    }
   }
   menu "Compression packages" {
    depends on [EMBTK_HAVE_ROOTFS]
    config EMBTK_HAVE_ZLIB boolean {
     prompt "Have zlib in target" if [EMBTK_HAVE_ROOTFS]
     inherited [EMBTK_HAVE_ROOTFS]
    }
    config EMBTK_HOST_HAVE_ZLIB boolean {
     inherited [EMBTK_HAVE_ROOTFS]
    }
    choice boolean {
     prompt "zlib version used" if [EMBTK_HAVE_ROOTFS && (EMBTK_HAVE_ZLIB || EMBTK_HOST_HAVE_ZLIB)]
     depends on [EMBTK_HAVE_ZLIB || EMBTK_HOST_HAVE_ZLIB]
     config EMBTK_ZLIB_VERSION_1_2_5 boolean {
      prompt "zlib-1.2.5" if [<choice>]
      inherited [<choice>]
     }
    }
    config EMBTK_ZLIB_NEED_PATCH boolean {
     inherited [EMBTK_HAVE_ROOTFS]
    }
    config EMBTK_ZLIB_VERSION_STRING string {
     default ["1.2.5"] if [EMBTK_HAVE_ROOTFS && EMBTK_ZLIB_VERSION_1_2_5]
     inherited [EMBTK_HAVE_ROOTFS]
    }
   }
   menu "Graphics packages" {
    depends on [EMBTK_HAVE_ROOTFS]
    config EMBTK_HAVE_ATK boolean {
     prompt "Have atk" if [EMBTK_HAVE_ROOTFS]
     inherited [EMBTK_HAVE_ROOTFS]
    }
    config EMBTK_ATK_VERSION_1_32_X_AND_GREATER boolean {
     inherited [EMBTK_HAVE_ROOTFS]
    }
    config EMBTK_ATK_VERSION_1_30_X_AND_GREATER boolean {
     inherited [EMBTK_HAVE_ROOTFS]
    }
    config EMBTK_ATK_VERSION_1_28_X_AND_GREATER boolean {
     inherited [EMBTK_HAVE_ROOTFS]
    }
    config EMBTK_ATK_VERSION_1_32_X boolean {
     default [y] if [EMBTK_HAVE_ROOTFS && EMBTK_ATK_VERSION_1_32_X_AND_GREATER]
     inherited [EMBTK_HAVE_ROOTFS]
    }
    config EMBTK_ATK_VERSION_1_30_X boolean {
     default [y] if [EMBTK_HAVE_ROOTFS && EMBTK_ATK_VERSION_1_30_X_AND_GREATER]
     select EMBTK_ATK_VERSION_1_32_X if [EMBTK_HAVE_ROOTFS]
     inherited [EMBTK_HAVE_ROOTFS]
    }
    config EMBTK_ATK_VERSION_1_28_X boolean {
     default [y] if [EMBTK_HAVE_ROOTFS && EMBTK_ATK_VERSION_1_28_X_AND_GREATER]
     select EMBTK_ATK_VERSION_1_30_X if [EMBTK_HAVE_ROOTFS]
     inherited [EMBTK_HAVE_ROOTFS]
    }
    config EMBTK_ATK_VERSION_ALL boolean {
     default [y] if [EMBTK_HAVE_ROOTFS && !EMBTK_ATK_VERSION_1_32_X_AND_GREATER && !EMBTK_ATK_VERSION_1_30_X_AND_GREATER && !EMBTK_ATK_VERSION_1_28_X_AND_GREATER]
     select EMBTK_ATK_VERSION_1_28_X if [EMBTK_HAVE_ROOTFS]
     inherited [EMBTK_HAVE_ROOTFS]
    }
    choice boolean {
     prompt "atk version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_ATK]
     depends on [EMBTK_HAVE_ATK]
     config EMBTK_ATK_VERSION_1_30_0 boolean {
      prompt "atk-1.30.0" if [<choice> && EMBTK_ATK_VERSION_1_30_X]
      depends on [EMBTK_ATK_VERSION_1_30_X]
      inherited [<choice> && EMBTK_ATK_VERSION_1_30_X]
     }
     config EMBTK_ATK_VERSION_1_28_0 boolean {
      prompt "atk-1.28.0" if [<choice> && EMBTK_ATK_VERSION_1_28_X]
      depends on [EMBTK_ATK_VERSION_1_28_X]
      inherited [<choice> && EMBTK_ATK_VERSION_1_28_X]
     }
    }
    config EMBTK_ATK_MAJOR_VERSION_STRING string {
     default ["1.30"] if [EMBTK_HAVE_ROOTFS && EMBTK_ATK_VERSION_1_30_0]
     default ["1.28"] if [EMBTK_HAVE_ROOTFS && EMBTK_ATK_VERSION_1_28_0]
     inherited [EMBTK_HAVE_ROOTFS]
    }
    config EMBTK_ATK_VERSION_STRING string {
     default ["1.30.0"] if [EMBTK_HAVE_ROOTFS && EMBTK_ATK_VERSION_1_30_0]
     default ["1.28.0"] if [EMBTK_HAVE_ROOTFS && EMBTK_ATK_VERSION_1_28_0]
     inherited [EMBTK_HAVE_ROOTFS]
    }
    config EMBTK_HAVE_CAIRO boolean {
     prompt "Have cairo" if [EMBTK_HAVE_ROOTFS]
     select EMBTK_HAVE_PIXMAN if [EMBTK_HAVE_ROOTFS]
     inherited [EMBTK_HAVE_ROOTFS]
     config EMBTK_HAVE_CAIRO_WITH_DIRECTFB boolean {
      prompt "Build cairo with DirectFB support" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_CAIRO]
      depends on [EMBTK_HAVE_CAIRO]
      select EMBTK_HAVE_DIRECTFB if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_CAIRO]
      inherited [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_CAIRO]
     }
     config EMBTK_HAVE_CAIRO_WITH_LIBXCB boolean {
      prompt "Build cairo with XCB support" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_CAIRO]
      depends on [EMBTK_HAVE_CAIRO]
      select EMBTK_HAVE_XCBUTIL if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_CAIRO]
      inherited [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_CAIRO]
     }
     choice boolean {
      prompt "Cairo version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_CAIRO]
      depends on [EMBTK_HAVE_CAIRO]
      config EMBTK_CAIRO_VERSION_1_8_10 boolean {
       prompt "cairo-1.8.10" if [<choice>]
       inherited [<choice>]
      }
      config EMBTK_CAIRO_VERSION_1_8_9 boolean {
       prompt "cairo-1.8.9" if [<choice>]
       inherited [<choice>]
      }
      config EMBTK_CAIRO_VERSION_1_8_8 boolean {
       prompt "cairo-1.8.8" if [<choice>]
       inherited [<choice>]
      }
     }
    }
    config EMBTK_CAIRO_VERSION_STRING string {
     default ["1.8.10"] if [EMBTK_HAVE_ROOTFS && EMBTK_CAIRO_VERSION_1_8_10]
     default ["1.8.9"] if [EMBTK_HAVE_ROOTFS && EMBTK_CAIRO_VERSION_1_8_9]
     default ["1.8.8"] if [EMBTK_HAVE_ROOTFS && EMBTK_CAIRO_VERSION_1_8_8]
     inherited [EMBTK_HAVE_ROOTFS]
    }
    config EMBTK_HAVE_DIRECTFB boolean {
     prompt "Have DirectFB" if [EMBTK_HAVE_ROOTFS]
     select EMBTK_HAVE_LIBPNG if [EMBTK_HAVE_ROOTFS]
     select EMBTK_HAVE_LIBJPEG if [EMBTK_HAVE_ROOTFS]
     select EMBTK_HAVE_FREETYPE if [EMBTK_HAVE_ROOTFS]
     inherited [EMBTK_HAVE_ROOTFS]
     choice boolean {
      prompt "DirectFB version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
      depends on [EMBTK_HAVE_DIRECTFB]
      config EMBTK_DIRECTFB_VERSION_1_4_3 boolean {
       prompt "DirectFB-1.4.3" if [<choice>]
       inherited [<choice>]
      }
      config EMBTK_DIRECTFB_VERSION_1_4_2 boolean {
       prompt "DirectFB-1.4.2" if [<choice>]
       inherited [<choice>]
      }
     }
     menu "DirectFB Configuration" {
      depends on [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
      config EMBTK_DIRECTFB_GRAPHIC_ATI128 boolean {
       prompt "Build DirectFB ATI Rage 128 graphic driver" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
       inherited [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
      }
      config EMBTK_DIRECTFB_GRAPHIC_CLE266 boolean {
       prompt "Build DirectFB VIA CLE266 graphic driver" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
       inherited [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
      }
      config EMBTK_DIRECTFB_GRAPHIC_CYBER5K boolean {
       prompt "Build DirectFB TVIA CyberPro graphic driver" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
       inherited [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
      }
      config EMBTK_DIRECTFB_GRAPHIC_DAVINCI boolean {
       prompt "Build DirectFB TI Davinci graphic driver" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
       inherited [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
      }
      config EMBTK_DIRECTFB_GRAPHIC_EP9X boolean {
       prompt "Build DirectFB Cirrus EP9X graphic driver" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
       inherited [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
      }
      config EMBTK_DIRECTFB_GRAPHIC_GL boolean {
       prompt "Build DirectFB gl graphic driver" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
       inherited [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
      }
      config EMBTK_DIRECTFB_GRAPHIC_I810 boolean {
       prompt "Build DirectFB Intel i810 graphic driver" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
       inherited [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
      }
      config EMBTK_DIRECTFB_GRAPHIC_I830 boolean {
       prompt "Build DirectFB Intel i830 graphic driver" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
       inherited [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
      }
      config EMBTK_DIRECTFB_GRAPHIC_MACH64 boolean {
       prompt "Build DirectFB ATI Mach64 graphic driver" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
       inherited [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
      }
      config EMBTK_DIRECTFB_GRAPHIC_MATROX boolean {
       prompt "Build DirectFB matrox graphic driver" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
       inherited [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
      }
      config EMBTK_DIRECTFB_GRAPHIC_NEOMAGIC boolean {
       prompt "Build DirectFB NeoMagic graphic driver" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
       inherited [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
      }
      config EMBTK_DIRECTFB_GRAPHIC_NSC boolean {
       prompt "Build DirectFB nsc graphic driver" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
       inherited [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
      }
      config EMBTK_DIRECTFB_GRAPHIC_NVIDIA boolean {
       prompt "Build DirectFB nVidia graphic driver" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
       inherited [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
      }
      config EMBTK_DIRECTFB_GRAPHIC_OMAP boolean {
       prompt "Build DirectFB TI OMAP graphic driver" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
       inherited [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
      }
      config EMBTK_DIRECTFB_GRAPHIC_PXA3XX boolean {
       prompt "Build DirectFB PXA 3xx graphic driver" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
       inherited [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
      }
      config EMBTK_DIRECTFB_GRAPHIC_RADEON boolean {
       prompt "Build DirectFB ATI Radeon graphic driver" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
       inherited [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
      }
      config EMBTK_DIRECTFB_GRAPHIC_SAVAGE boolean {
       prompt "Build DirectFB S3 Savage graphic driver" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
       inherited [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
      }
      config EMBTK_DIRECTFB_GRAPHIC_SH772X boolean {
       prompt "Build DirectFB Renesas SH7722/SH772 graphic driver" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
       inherited [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
      }
      config EMBTK_DIRECTFB_GRAPHIC_SIS315 boolean {
       prompt "Build DirectFB sis315 graphic driver" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
       inherited [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
      }
      config EMBTK_DIRECTFB_GRAPHIC_TDFX boolean {
       prompt "Build DirectFB 3Dfx Voodoo graphic driver" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
       inherited [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
      }
      config EMBTK_DIRECTFB_GRAPHIC_UNICHROME boolean {
       prompt "Build DirectFB VIA UniChrome graphic driver" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
       inherited [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
      }
      config EMBTK_DIRECTFB_GRAPHIC_VMWARE boolean {
       prompt "Build DirectFB vmware graphic driver" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
       inherited [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
      }
      config EMBTK_DIRECTFB_INPUT_DBOX2REMOTE boolean {
       prompt "DBox2 Remote" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
       inherited [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
      }
      config EMBTK_DIRECTFB_INPUT_DBOXREMOTE boolean {
       prompt "DreamBox Remote" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
       inherited [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
      }
      config EMBTK_DIRECTFB_INPUT_DYNAPRO boolean {
       prompt "Dynapro Touchscreen" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
       inherited [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
      }
      config EMBTK_DIRECTFB_INPUT_ELOINPUT boolean {
       prompt "ELO Touchscreen" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
       inherited [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
      }
      config EMBTK_DIRECTFB_INPUT_GUNZE boolean {
       prompt "Gunze Touchscreen" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
       inherited [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
      }
      config EMBTK_DIRECTFB_INPUT_H3600TS boolean {
       prompt "H3600 Touchscreen" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
       inherited [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
      }
      config EMBTK_DIRECTFB_INPUT_JOYSTICK boolean {
       prompt "Joystick" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
       inherited [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
      }
      config EMBTK_DIRECTFB_INPUT_KEYBOARD boolean {
       prompt "Keyboard" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
       inherited [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
      }
      config EMBTK_DIRECTFB_INPUT_LINUXINPUT boolean {
       prompt "Linux Input" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
       inherited [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
      }
      config EMBTK_DIRECTFB_INPUT_LIRC boolean {
       prompt "LiRC" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
       inherited [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
      }
      config EMBTK_DIRECTFB_INPUT_MUTOUCH boolean {
       prompt "MuTouch touchscreen" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
       inherited [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
      }
      config EMBTK_DIRECTFB_INPUT_PENMOUNT boolean {
       prompt "penmount" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
       inherited [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
      }
      config EMBTK_DIRECTFB_INPUT_PS2MOUSE boolean {
       prompt "PS/2 Mouse" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
       inherited [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
      }
      config EMBTK_DIRECTFB_INPUT_SERIALMOUSE boolean {
       prompt "Serial Mouse" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
       inherited [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
      }
      config EMBTK_DIRECTFB_INPUT_SONYPIJOGDIAL boolean {
       prompt "SonyPI Jogdial" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
       inherited [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
      }
      config EMBTK_DIRECTFB_INPUT_TSLIB boolean {
       prompt "tslib" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
       select EMBTK_HAVE_TSLIB if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
       inherited [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
      }
      config EMBTK_DIRECTFB_INPUT_UC1X00 boolean {
       prompt "ucb1x00 Touchscreen" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
       inherited [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
      }
      config EMBTK_DIRECTFB_INPUT_WM97XX boolean {
       prompt "WM97xx Touchscreen" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
       inherited [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
      }
      config EMBTK_DIRECTFB_INPUT_ZYTRONIC boolean {
       prompt "Zytronic touchscreen" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
       inherited [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DIRECTFB]
      }
     }
    }
    config EMBTK_DIRECTFB_VERSION_STRING string {
     default ["1.4.3"] if [EMBTK_HAVE_ROOTFS && EMBTK_DIRECTFB_VERSION_1_4_3]
     default ["1.4.2"] if [EMBTK_HAVE_ROOTFS && EMBTK_DIRECTFB_VERSION_1_4_2]
     inherited [EMBTK_HAVE_ROOTFS]
    }
    config EMBTK_DIRECTFB_BRANCH_STRING string {
     default ["DirectFB-1.4"] if [EMBTK_HAVE_ROOTFS && EMBTK_DIRECTFB_VERSION_1_4_3]
     default ["DirectFB-1.4"] if [EMBTK_HAVE_ROOTFS && EMBTK_DIRECTFB_VERSION_1_4_2]
     inherited [EMBTK_HAVE_ROOTFS]
    }
    config EMBTK_HAVE_FONTCONFIG boolean {
     prompt "Have fontconfig" if [EMBTK_HAVE_ROOTFS]
     select EMBTK_HAVE_LIBXML2 if [EMBTK_HAVE_ROOTFS]
     inherited [EMBTK_HAVE_ROOTFS]
     choice boolean {
      prompt "fontconfig version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_FONTCONFIG]
      depends on [EMBTK_HAVE_FONTCONFIG]
      config EMBTK_FONTCONFIG_VERSION_2_8_0 boolean {
       prompt "fontconfig-2.8.0" if [<choice>]
       inherited [<choice>]
      }
     }
    }
    config EMBTK_FONTCONFIG_VERSION_STRING string {
     default ["2.8.0"] if [EMBTK_HAVE_ROOTFS && EMBTK_FONTCONFIG_VERSION_2_8_0]
     inherited [EMBTK_HAVE_ROOTFS]
    }
    config EMBTK_HAVE_FREETYPE boolean {
     prompt "Have FreeType" if [EMBTK_HAVE_ROOTFS]
     select EMBTK_HAVE_ZLIB if [EMBTK_HAVE_ROOTFS]
     inherited [EMBTK_HAVE_ROOTFS]
     choice boolean {
      prompt "FreeType version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_FREETYPE]
      depends on [EMBTK_HAVE_FREETYPE]
      config EMBTK_FREETYPE_VERSION_2_4_2 boolean {
       prompt "FreeType-2.4.2" if [<choice>]
       inherited [<choice>]
      }
      config EMBTK_FREETYPE_VERSION_2_4_1 boolean {
       prompt "FreeType-2.4.1" if [<choice>]
       inherited [<choice>]
      }
      config EMBTK_FREETYPE_VERSION_2_4_0 boolean {
       prompt "FreeType-2.4.0" if [<choice>]
       inherited [<choice>]
      }
      config EMBTK_FREETYPE_VERSION_2_3_12 boolean {
       prompt "FreeType-2.3.12" if [<choice>]
       inherited [<choice>]
      }
      config EMBTK_FREETYPE_VERSION_2_3_11 boolean {
       prompt "FreeType-2.3.11" if [<choice>]
       inherited [<choice>]
      }
      config EMBTK_FREETYPE_VERSION_2_3_10 boolean {
       prompt "FreeType-2.3.10" if [<choice>]
       inherited [<choice>]
      }
      config EMBTK_FREETYPE_VERSION_2_3_9 boolean {
       prompt "FreeType-2.3.9" if [<choice>]
       inherited [<choice>]
      }
     }
    }
    config EMBTK_FREETYPE_VERSION_STRING string {
     default ["2.4.2"] if [EMBTK_HAVE_ROOTFS && EMBTK_FREETYPE_VERSION_2_4_2]
     default ["2.4.1"] if [EMBTK_HAVE_ROOTFS && EMBTK_FREETYPE_VERSION_2_4_1]
     default ["2.4.0"] if [EMBTK_HAVE_ROOTFS && EMBTK_FREETYPE_VERSION_2_4_0]
     default ["2.3.12"] if [EMBTK_HAVE_ROOTFS && EMBTK_FREETYPE_VERSION_2_3_12]
     default ["2.3.11"] if [EMBTK_HAVE_ROOTFS && EMBTK_FREETYPE_VERSION_2_3_11]
     default ["2.3.10"] if [EMBTK_HAVE_ROOTFS && EMBTK_FREETYPE_VERSION_2_3_10]
     default ["2.3.9"] if [EMBTK_HAVE_ROOTFS && EMBTK_FREETYPE_VERSION_2_3_9]
     inherited [EMBTK_HAVE_ROOTFS]
    }
    config EMBTK_HAVE_GTK boolean {
     prompt "Have gtk+" if [EMBTK_HAVE_ROOTFS]
     select EMBTK_HAVE_GLIB if [EMBTK_HAVE_ROOTFS]
     select EMBTK_HAVE_PANGO if [EMBTK_HAVE_ROOTFS]
     select EMBTK_HAVE_ATK if [EMBTK_HAVE_ROOTFS]
     select EMBTK_HAVE_LIBJPEG if [EMBTK_HAVE_ROOTFS]
     select EMBTK_HAVE_LIBPNG if [EMBTK_HAVE_ROOTFS]
     select EMBTK_HAVE_LIBTIFF if [EMBTK_HAVE_ROOTFS]
     select EMBTK_HAVE_FONTCONFIG if [EMBTK_HAVE_ROOTFS]
     select EMBTK_HAVE_CAIRO if [EMBTK_HAVE_ROOTFS]
     inherited [EMBTK_HAVE_ROOTFS]
     choice boolean {
      prompt "gtk+ backend" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_GTK]
      depends on [EMBTK_HAVE_GTK]
      config EMBTK_GTK_BACKEND_XSERVER boolean {
       prompt "X windowing system" if [<choice>]
       select EMBTK_HAVE_CAIRO_WITH_LIBXCB if [<choice>]
       select EMBTK_HAVE_LIBX11 if [<choice>]
       select EMBTK_HAVE_LIBXEXT if [<choice>]
       select EMBTK_HAVE_LIBXRENDER if [<choice>]
       inherited [<choice>]
      }
      config EMBTK_GTK_BACKEND_DIRECTFB boolean {
       prompt "DirectFB" if [<choice>]
       select EMBTK_HAVE_DIRECTFB if [<choice>]
       select EMBTK_HAVE_CAIRO_WITH_DIRECTFB if [<choice>]
       inherited [<choice>]
      }
     }
     choice boolean {
      prompt "gtk+ version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_GTK]
      depends on [EMBTK_HAVE_GTK]
      config EMBTK_GTK_VERSION_2_20_1 boolean {
       prompt "gtk+-2.20.1" if [<choice>]
       select EMBTK_ATK_VERSION_1_30_X_AND_GREATER if [<choice>]
       inherited [<choice>]
      }
      config EMBTK_GTK_VERSION_2_18_9 boolean {
       prompt "gtk+-2.18.9" if [<choice>]
       inherited [<choice>]
      }
      config EMBTK_GTK_VERSION_2_18_8 boolean {
       prompt "gtk+-2.18.8" if [<choice>]
       inherited [<choice>]
      }
      config EMBTK_GTK_VERSION_2_18_7 boolean {
       prompt "gtk+-2.18.7" if [<choice>]
       inherited [<choice>]
      }
      config EMBTK_GTK_VERSION_2_18_6 boolean {
       prompt "gtk+-2.18.6" if [<choice>]
       inherited [<choice>]
      }
      config EMBTK_GTK_VERSION_2_18_5 boolean {
       prompt "gtk+-2.18.5" if [<choice>]
       inherited [<choice>]
      }
     }
    }
    config EMBTK_GTK_MAJOR_VERSION_STRING string {
     default ["2.20"] if [EMBTK_HAVE_ROOTFS && EMBTK_GTK_VERSION_2_20_1]
     default ["2.18"] if [EMBTK_HAVE_ROOTFS && EMBTK_GTK_VERSION_2_18_9]
     default ["2.18"] if [EMBTK_HAVE_ROOTFS && EMBTK_GTK_VERSION_2_18_8]
     default ["2.18"] if [EMBTK_HAVE_ROOTFS && EMBTK_GTK_VERSION_2_18_7]
     default ["2.18"] if [EMBTK_HAVE_ROOTFS && EMBTK_GTK_VERSION_2_18_6]
     default ["2.18"] if [EMBTK_HAVE_ROOTFS && EMBTK_GTK_VERSION_2_18_5]
     inherited [EMBTK_HAVE_ROOTFS]
    }
    config EMBTK_GTK_VERSION_STRING string {
     default ["2.20.1"] if [EMBTK_HAVE_ROOTFS && EMBTK_GTK_VERSION_2_20_1]
     default ["2.18.9"] if [EMBTK_HAVE_ROOTFS && EMBTK_GTK_VERSION_2_18_9]
     default ["2.18.8"] if [EMBTK_HAVE_ROOTFS && EMBTK_GTK_VERSION_2_18_8]
     default ["2.18.7"] if [EMBTK_HAVE_ROOTFS && EMBTK_GTK_VERSION_2_18_7]
     default ["2.18.6"] if [EMBTK_HAVE_ROOTFS && EMBTK_GTK_VERSION_2_18_6]
     default ["2.18.5"] if [EMBTK_HAVE_ROOTFS && EMBTK_GTK_VERSION_2_18_5]
     inherited [EMBTK_HAVE_ROOTFS]
    }
    config EMBTK_HAVE_IMLIB2 boolean {
     prompt "Have imlib2" if [EMBTK_HAVE_ROOTFS]
     select EMBTK_HAVE_FREETYPE if [EMBTK_HAVE_ROOTFS]
     select EMBTK_HAVE_LIBPNG if [EMBTK_HAVE_ROOTFS]
     select EMBTK_HAVE_LIBJPEG if [EMBTK_HAVE_ROOTFS]
     inherited [EMBTK_HAVE_ROOTFS]
     choice boolean {
      prompt "imlib2 version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_IMLIB2]
      depends on [EMBTK_HAVE_IMLIB2]
      config EMBTK_IMLIB2_VERSION_1_4_4 boolean {
       prompt "imlib2-1.4.4" if [<choice>]
       inherited [<choice>]
      }
     }
    }
    config EMBTK_IMLIB2_VERSION_STRING string {
     default ["1.4.4"] if [EMBTK_HAVE_ROOTFS && EMBTK_IMLIB2_VERSION_1_4_4]
     inherited [EMBTK_HAVE_ROOTFS]
    }
    config EMBTK_IMLIB2_NEED_PATCH boolean {
     inherited [EMBTK_HAVE_ROOTFS]
    }
    config EMBTK_HAVE_LIBJPEG boolean {
     prompt "Have libjpeg" if [EMBTK_HAVE_ROOTFS]
     inherited [EMBTK_HAVE_ROOTFS]
     choice boolean {
      prompt "libjpeg version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_LIBJPEG]
      depends on [EMBTK_HAVE_LIBJPEG]
      config EMBTK_LIBJPEG_VERSION_V8 boolean {
       prompt "libjpeg-8" if [<choice>]
       inherited [<choice>]
      }
      config EMBTK_LIBJPEG_VERSION_V7 boolean {
       prompt "libjpeg-7" if [<choice>]
       inherited [<choice>]
      }
     }
    }
    config EMBTK_LIBJPEG_VERSION_STRING string {
     default ["8"] if [EMBTK_HAVE_ROOTFS && EMBTK_LIBJPEG_VERSION_V8]
     default ["7"] if [EMBTK_HAVE_ROOTFS && EMBTK_LIBJPEG_VERSION_V7]
     inherited [EMBTK_HAVE_ROOTFS]
    }
    config EMBTK_HAVE_LIBPNG boolean {
     prompt "Have libpng" if [EMBTK_HAVE_ROOTFS]
     select EMBTK_HAVE_ZLIB if [EMBTK_HAVE_ROOTFS]
     inherited [EMBTK_HAVE_ROOTFS]
     choice boolean {
      prompt "libpng version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_LIBPNG]
      depends on [EMBTK_HAVE_LIBPNG]
      config EMBTK_LIBPNG_VERSION_1_4_2 boolean {
       prompt "libpng-1.4.2" if [<choice>]
       inherited [<choice>]
      }
      config EMBTK_LIBPNG_VERSION_1_2_42 boolean {
       prompt "libpng-1.2.42" if [<choice>]
       inherited [<choice>]
      }
      config EMBTK_LIBPNG_VERSION_1_2_41 boolean {
       prompt "libpng-1.2.41" if [<choice>]
       inherited [<choice>]
      }
      config EMBTK_LIBPNG_VERSION_1_2_40 boolean {
       prompt "libpng-1.2.40" if [<choice>]
       inherited [<choice>]
      }
     }
    }
    config EMBTK_LIBPNG_VERSION_STRING string {
     default ["1.4.2"] if [EMBTK_HAVE_ROOTFS && EMBTK_LIBPNG_VERSION_1_4_2]
     default ["1.2.42"] if [EMBTK_HAVE_ROOTFS && EMBTK_LIBPNG_VERSION_1_2_42]
     default ["1.2.41"] if [EMBTK_HAVE_ROOTFS && EMBTK_LIBPNG_VERSION_1_2_41]
     default ["1.2.40"] if [EMBTK_HAVE_ROOTFS && EMBTK_LIBPNG_VERSION_1_2_40]
     inherited [EMBTK_HAVE_ROOTFS]
    }
    config EMBTK_HAVE_PANGO boolean {
     prompt "Have Pango" if [EMBTK_HAVE_ROOTFS]
     select EMBTK_HAVE_GLIB if [EMBTK_HAVE_ROOTFS]
     select EMBTK_HAVE_FONTCONFIG if [EMBTK_HAVE_ROOTFS]
     select EMBTK_HAVE_CAIRO if [EMBTK_HAVE_ROOTFS]
     select EMBTK_GCC_MORE_LANGUAGES if [EMBTK_HAVE_ROOTFS]
     select EMBTK_GCC_LANGUAGE_CPP if [EMBTK_HAVE_ROOTFS]
     inherited [EMBTK_HAVE_ROOTFS]
     config EMBTK_HAVE_PANGO_WITH_X boolean {
      prompt "Build Pango with X library support" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_PANGO]
      depends on [EMBTK_HAVE_PANGO]
      select EMBTK_HAVE_LIBX11 if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_PANGO]
      inherited [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_PANGO]
     }
     choice boolean {
      prompt "Pango version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_PANGO]
      depends on [EMBTK_HAVE_PANGO]
      config EMBTK_PANGO_VERSION_1_28_1 boolean {
       prompt "Pango-1.28.1" if [<choice>]
       inherited [<choice>]
      }
      config EMBTK_PANGO_VERSION_1_26_2 boolean {
       prompt "Pango-1.26.2" if [<choice>]
       inherited [<choice>]
      }
     }
    }
    config EMBTK_PANGO_MAJOR_VERSION_STRING string {
     default ["1.28"] if [EMBTK_HAVE_ROOTFS && EMBTK_PANGO_VERSION_1_28_1]
     default ["1.26"] if [EMBTK_HAVE_ROOTFS && EMBTK_PANGO_VERSION_1_26_2]
     inherited [EMBTK_HAVE_ROOTFS]
    }
    config EMBTK_PANGO_VERSION_STRING string {
     default ["1.28.1"] if [EMBTK_HAVE_ROOTFS && EMBTK_PANGO_VERSION_1_28_1]
     default ["1.26.2"] if [EMBTK_HAVE_ROOTFS && EMBTK_PANGO_VERSION_1_26_2]
     inherited [EMBTK_HAVE_ROOTFS]
    }
    config EMBTK_HAVE_PIXMAN boolean {
     prompt "Have pixman" if [EMBTK_HAVE_ROOTFS]
     inherited [EMBTK_HAVE_ROOTFS]
     choice boolean {
      prompt "Pixman version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_PIXMAN]
      depends on [EMBTK_HAVE_PIXMAN]
      config EMBTK_PIXMAN_VERSION_0_18_4 boolean {
       prompt "pixman-0.18.4" if [<choice>]
       inherited [<choice>]
      }
      config EMBTK_PIXMAN_VERSION_0_18_2 boolean {
       prompt "pixman-0.18.2" if [<choice>]
       inherited [<choice>]
      }
      config EMBTK_PIXMAN_VERSION_0_18_1 boolean {
       prompt "pixman-0.18.1" if [<choice>]
       inherited [<choice>]
      }
      config EMBTK_PIXMAN_VERSION_0_18_0 boolean {
       prompt "pixman-0.18.0" if [<choice>]
       inherited [<choice>]
      }
      config EMBTK_PIXMAN_VERSION_0_16_6 boolean {
       prompt "pixman-0.16.6" if [<choice>]
       inherited [<choice>]
      }
      config EMBTK_PIXMAN_VERSION_0_16_5 boolean {
       prompt "pixman-0.16.5" if [<choice>]
       inherited [<choice>]
      }
      config EMBTK_PIXMAN_VERSION_0_16_4 boolean {
       prompt "pixman-0.16.4" if [<choice>]
       inherited [<choice>]
      }
     }
    }
    config EMBTK_PIXMAN_VERSION_STRING string {
     default ["0.18.4"] if [EMBTK_HAVE_ROOTFS && EMBTK_PIXMAN_VERSION_0_18_4]
     default ["0.18.2"] if [EMBTK_HAVE_ROOTFS && EMBTK_PIXMAN_VERSION_0_18_2]
     default ["0.18.1"] if [EMBTK_HAVE_ROOTFS && EMBTK_PIXMAN_VERSION_0_18_1]
     default ["0.18.0"] if [EMBTK_HAVE_ROOTFS && EMBTK_PIXMAN_VERSION_0_18_0]
     default ["0.16.6"] if [EMBTK_HAVE_ROOTFS && EMBTK_PIXMAN_VERSION_0_16_6]
     default ["0.16.5"] if [EMBTK_HAVE_ROOTFS && EMBTK_PIXMAN_VERSION_0_16_5]
     default ["0.16.4"] if [EMBTK_HAVE_ROOTFS && EMBTK_PIXMAN_VERSION_0_16_4]
     inherited [EMBTK_HAVE_ROOTFS]
    }
    config EMBTK_HAVE_LIBTIFF boolean {
     prompt "Have libtiff" if [EMBTK_HAVE_ROOTFS]
     inherited [EMBTK_HAVE_ROOTFS]
     choice boolean {
      prompt "libtiff version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_LIBTIFF]
      depends on [EMBTK_HAVE_LIBTIFF]
      config EMBTK_LIBTIFF_VERSION_3_9_2 boolean {
       prompt "libtiff-3.9.2" if [<choice>]
       inherited [<choice>]
      }
     }
    }
    config EMBTK_LIBTIFF_VERSION_STRING string {
     default ["3.9.2"] if [EMBTK_HAVE_ROOTFS && EMBTK_LIBTIFF_VERSION_3_9_2]
     inherited [EMBTK_HAVE_ROOTFS]
    }
    config EMBTK_HAVE_FREEFONT_TTF boolean {
     prompt "Have GNU FreeFont: TrueType format" if [EMBTK_HAVE_ROOTFS]
     select EMBTK_HAVE_FREETYPE if [EMBTK_HAVE_ROOTFS]
     inherited [EMBTK_HAVE_ROOTFS]
     choice boolean {
      prompt "FreeFont version you wish: TrueType format" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_FREEFONT_TTF]
      depends on [EMBTK_HAVE_FREEFONT_TTF]
      config EMBTK_FREEFONT_TTF_VERSION_20090104 boolean {
       prompt "freefont-ttf-20090104" if [<choice>]
       inherited [<choice>]
      }
     }
    }
    config EMBTK_FREEFONT_TTF_VERSION_STRING string {
     default ["20090104"] if [EMBTK_HAVE_ROOTFS && EMBTK_FREEFONT_TTF_VERSION_20090104]
     inherited [EMBTK_HAVE_ROOTFS]
    }
   }
   menu "Networking packages" {
    depends on [EMBTK_HAVE_ROOTFS]
   }
   menu "Scripting languages" {
    depends on [EMBTK_HAVE_ROOTFS]
    config EMBTK_HAVE_LUA boolean {
     prompt "Have lua" if [EMBTK_HAVE_ROOTFS]
     inherited [EMBTK_HAVE_ROOTFS]
     choice boolean {
      prompt "lua version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_LUA]
      depends on [EMBTK_HAVE_LUA]
      config EMBTK_LUA_VERSION_5_1 boolean {
       prompt "lua-5.1" if [<choice>]
       inherited [<choice>]
      }
     }
    }
    config EMBTK_LUA_VERSION_STRING string {
     default ["5.1"] if [EMBTK_HAVE_ROOTFS && EMBTK_LUA_VERSION_5_1]
     inherited [EMBTK_HAVE_ROOTFS]
    }
    config EMBTK_LUA_NEED_PATCH boolean {
     inherited [EMBTK_HAVE_ROOTFS]
    }
    config EMBTK_HAVE_MICROPERL boolean {
     prompt "Have microperl" if [EMBTK_HAVE_ROOTFS]
     select OPTION_EGLIBC_LIBM if [EMBTK_HAVE_ROOTFS && EMBTK_CLIB_EGLIBC]
     select KEMBTK_UCLIBC_UCLIBC_HAS_FLOATS if [EMBTK_HAVE_ROOTFS && EMBTK_CLIB_UCLIBC]
     inherited [EMBTK_HAVE_ROOTFS]
     choice boolean {
      prompt "microperl version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_MICROPERL]
      depends on [EMBTK_HAVE_MICROPERL]
      config EMBTK_MICROPERL_VERSION_5_10_1 boolean {
       prompt "microperl-5.10.1" if [<choice>]
       select EMBTK_PERL_NEED_PATCH if [<choice>]
       inherited [<choice>]
      }
     }
    }
    config EMBTK_PERL_VERSION_STRING string {
     default ["5.10.1"] if [EMBTK_HAVE_ROOTFS && EMBTK_MICROPERL_VERSION_5_10_1]
     inherited [EMBTK_HAVE_ROOTFS]
    }
    config EMBTK_PERL_NEED_PATCH boolean {
     inherited [EMBTK_HAVE_ROOTFS]
    }
   }
   menu "Security packages" {
    depends on [EMBTK_HAVE_ROOTFS]
    config EMBTK_HAVE_OPENSSL boolean {
     prompt "Have OpenSSL" if [EMBTK_HAVE_ROOTFS]
     inherited [EMBTK_HAVE_ROOTFS]
     choice boolean {
      prompt "OpenSSL version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_OPENSSL]
      depends on [EMBTK_HAVE_OPENSSL]
      config EMBTK_OPENSSL_VERSION_0_9_8O boolean {
       prompt "openssl-0.9.8o" if [<choice>]
       select EMBTK_OPENSSL_NEED_PATCH if [<choice>]
       inherited [<choice>]
      }
      config EMBTK_OPENSSL_VERSION_0_9_8N boolean {
       prompt "openssl-0.9.8n" if [<choice>]
       select EMBTK_OPENSSL_NEED_PATCH if [<choice>]
       inherited [<choice>]
      }
      config EMBTK_OPENSSL_VERSION_0_9_8L boolean {
       prompt "openssl-0.9.8l" if [<choice>]
       select EMBTK_OPENSSL_NEED_PATCH if [<choice>]
       inherited [<choice>]
      }
     }
    }
    config EMBTK_OPENSSL_VERSION_STRING string {
     default ["0.9.8o"] if [EMBTK_HAVE_ROOTFS && EMBTK_OPENSSL_VERSION_0_9_8O]
     default ["0.9.8n"] if [EMBTK_HAVE_ROOTFS && EMBTK_OPENSSL_VERSION_0_9_8N]
     default ["0.9.8l"] if [EMBTK_HAVE_ROOTFS && EMBTK_OPENSSL_VERSION_0_9_8L]
     inherited [EMBTK_HAVE_ROOTFS]
    }
    config EMBTK_OPENSSL_NEED_PATCH boolean {
     inherited [EMBTK_HAVE_ROOTFS]
    }
   }
   menu "System packages" {
    depends on [EMBTK_HAVE_ROOTFS]
    config EMBTK_HAVE_DBUS boolean {
     prompt "Have D-bus" if [EMBTK_HAVE_ROOTFS]
     select EMBTK_HAVE_EXPAT if [EMBTK_HAVE_ROOTFS]
     select EMBTK_HAVE_LIBXML2 if [EMBTK_HAVE_ROOTFS]
     inherited [EMBTK_HAVE_ROOTFS]
     choice boolean {
      prompt "D-bus version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DBUS]
      depends on [EMBTK_HAVE_DBUS]
      config EMBTK_DBUS_VERSION_1_2_24 boolean {
       prompt "dbus-1.2.24" if [<choice>]
       inherited [<choice>]
      }
     }
    }
    config EMBTK_DBUS_VERSION_STRING string {
     default ["1.2.24"] if [EMBTK_HAVE_ROOTFS && EMBTK_DBUS_VERSION_1_2_24]
     inherited [EMBTK_HAVE_ROOTFS]
    }
    config EMBTK_DBUS_NEED_PATCH boolean {
     inherited [EMBTK_HAVE_ROOTFS]
    }
    config EMBTK_HAVE_UTILLINUXNG boolean {
     prompt "Have util-linux-ng" if [EMBTK_HAVE_ROOTFS]
     select KEMBTK_UCLIBC_UCLIBC_HAS_PROGRAM_INVOCATION_NAME if [EMBTK_HAVE_ROOTFS && EMBTK_CLIB_UCLIBC]
     select KEMBTK_UCLIBC_UCLIBC_HAS___PROGNAME if [EMBTK_HAVE_ROOTFS && EMBTK_CLIB_UCLIBC]
     inherited [EMBTK_HAVE_ROOTFS]
     choice boolean {
      prompt "util-linux-ng version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_UTILLINUXNG]
      depends on [EMBTK_HAVE_UTILLINUXNG]
      config EMBTK_UTILLINUXNG_VERSION_2_18 boolean {
       prompt "util-linux-ng-2.18" if [<choice>]
       inherited [<choice>]
      }
     }
    }
    config EMBTK_UTILLINUXNG_MAJOR_VERSION_STRING string {
     default ["v2.18"] if [EMBTK_HAVE_ROOTFS && EMBTK_UTILLINUXNG_VERSION_2_18]
     inherited [EMBTK_HAVE_ROOTFS]
    }
    config EMBTK_UTILLINUXNG_VERSION_STRING string {
     default ["2.18"] if [EMBTK_HAVE_ROOTFS && EMBTK_UTILLINUXNG_VERSION_2_18]
     inherited [EMBTK_HAVE_ROOTFS]
    }
    config EMBTK_UTILLINUXNG_NEED_PATCH boolean {
     inherited [EMBTK_HAVE_ROOTFS]
    }
   }
   menu "Miscellaneous packages" {
    depends on [EMBTK_HAVE_ROOTFS]
    config EMBTK_HAVE_EXPAT boolean {
     prompt "Have Expat" if [EMBTK_HAVE_ROOTFS]
     inherited [EMBTK_HAVE_ROOTFS]
     choice boolean {
      prompt "expat version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_EXPAT]
      depends on [EMBTK_HAVE_EXPAT]
      config EMBTK_EXPAT_VERSION_2_0_1 boolean {
       prompt "expat-2.0.1" if [<choice>]
       inherited [<choice>]
      }
     }
    }
    config EMBTK_EXPAT_VERSION_STRING string {
     default ["2.0.1"] if [EMBTK_HAVE_ROOTFS && EMBTK_EXPAT_VERSION_2_0_1]
     inherited [EMBTK_HAVE_ROOTFS]
    }
    config EMBTK_EXPAT_NEED_PATCH boolean {
     inherited [EMBTK_HAVE_ROOTFS]
    }
    config EMBTK_HAVE_GETTEXT boolean {
     prompt "Have gettext" if [EMBTK_HAVE_ROOTFS]
     select EMBTK_HAVE_NCURSES if [EMBTK_HAVE_ROOTFS]
     select EMBTK_HAVE_LIBXML2 if [EMBTK_HAVE_ROOTFS]
     select KEMBTK_EGLIBC_OPTION_POSIX_C_LANG_WIDE_CHAR if [EMBTK_HAVE_ROOTFS && EMBTK_CLIB_EGLIBC]
     select KEMBTK_EGLIBC_OPTION_POSIX_WIDE_CHAR_DEVICE_IO if [EMBTK_HAVE_ROOTFS && EMBTK_CLIB_EGLIBC]
     select KEMBTK_EGLIBC_OPTION_EGLIBC_LOCALE_CODE if [EMBTK_HAVE_ROOTFS && EMBTK_CLIB_EGLIBC]
     select KEMBTK_UCLIBC_UCLIBC_HAS_WCHAR if [EMBTK_HAVE_ROOTFS && EMBTK_CLIB_UCLIBC]
     select KEMBTK_UCLIBC_UCLIBC_HAS_LOCALE if [EMBTK_HAVE_ROOTFS && EMBTK_CLIB_UCLIBC]
     select KEMBTK_UCLIBC_UCLIBC_SUSV4_LEGACY if [EMBTK_HAVE_ROOTFS && EMBTK_CLIB_UCLIBC]
     inherited [EMBTK_HAVE_ROOTFS]
     choice boolean {
      prompt "gettext version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_GETTEXT]
      depends on [EMBTK_HAVE_GETTEXT]
      config EMBTK_GETTEXT_VERSION_0_17 boolean {
       prompt "gettext-0.17" if [<choice>]
       inherited [<choice>]
      }
      config EMBTK_GETTEXT_VERSION_0_16_1 boolean {
       prompt "gettext-0.16.1" if [<choice>]
       inherited [<choice>]
      }
     }
    }
    config EMBTK_GETTEXT_VERSION_STRING string {
     default ["0.17"] if [EMBTK_HAVE_ROOTFS && EMBTK_GETTEXT_VERSION_0_17]
     default ["0.16.1"] if [EMBTK_HAVE_ROOTFS && EMBTK_GETTEXT_VERSION_0_16_1]
     inherited [EMBTK_HAVE_ROOTFS]
    }
    config EMBTK_HAVE_GLIB boolean {
     prompt "Have GLib" if [EMBTK_HAVE_ROOTFS]
     select EMBTK_HAVE_GETTEXT if [EMBTK_HAVE_ROOTFS]
     select EMBTK_HAVE_ZLIB if [EMBTK_HAVE_ROOTFS]
     select KEMBTK_UCLIBC_DO_C99_MATH if [EMBTK_HAVE_ROOTFS && EMBTK_CLIB_UCLIBC]
     select KEMBTK_EGLIBC_OPTION_EGLIBC_INET if [EMBTK_HAVE_ROOTFS && EMBTK_CLIB_EGLIBC]
     select KEMBTK_UCLIBC_UCLIBC_HAS_NETWORK_SUPPORT if [EMBTK_HAVE_ROOTFS && EMBTK_CLIB_UCLIBC]
     select KEMBTK_UCLIBC_UCLIBC_HAS_IPV4 if [EMBTK_HAVE_ROOTFS && EMBTK_CLIB_UCLIBC]
     select KEMBTK_UCLIBC_UCLIBC_HAS_IPV6 if [EMBTK_HAVE_ROOTFS && EMBTK_CLIB_UCLIBC]
     select KEMBTK_UCLIBC_UCLIBC_HAS_LIBRESOLV_STUB if [EMBTK_HAVE_ROOTFS && EMBTK_UCLIBC_VERSION_SERIES_0_9_31_X]
     inherited [EMBTK_HAVE_ROOTFS]
     choice boolean {
      prompt "GLib version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_GLIB]
      depends on [EMBTK_HAVE_GLIB]
      config EMBTK_GLIB_VERSION_2_24_2 boolean {
       prompt "GLib-2.24.2" if [<choice>]
       inherited [<choice>]
      }
      config EMBTK_GLIB_VERSION_2_24_1 boolean {
       prompt "GLib-2.24.1" if [<choice>]
       inherited [<choice>]
      }
     }
    }
    config EMBTK_GLIB_MAJOR_VERSION_STRING string {
     default ["2.24"] if [EMBTK_HAVE_ROOTFS && EMBTK_GLIB_VERSION_2_24_2]
     default ["2.24"] if [EMBTK_HAVE_ROOTFS && EMBTK_GLIB_VERSION_2_24_1]
     inherited [EMBTK_HAVE_ROOTFS]
    }
    config EMBTK_GLIB_VERSION_STRING string {
     default ["2.24.2"] if [EMBTK_HAVE_ROOTFS && EMBTK_GLIB_VERSION_2_24_2]
     default ["2.24.1"] if [EMBTK_HAVE_ROOTFS && EMBTK_GLIB_VERSION_2_24_1]
     inherited [EMBTK_HAVE_ROOTFS]
    }
    config EMBTK_HAVE_LIBELF boolean {
     prompt "Have libelf" if [EMBTK_HAVE_ROOTFS]
     select EMBTK_HAVE_GETTEXT if [EMBTK_HAVE_ROOTFS]
     inherited [EMBTK_HAVE_ROOTFS]
     choice boolean {
      prompt "libelf version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_LIBELF]
      depends on [EMBTK_HAVE_LIBELF]
      config EMBTK_LIBELF_VERSION_0_8_13 boolean {
       prompt "libelf-0.8.13" if [<choice>]
       select EMBTK_LIBELF_NEED_PATCH if [<choice>]
       inherited [<choice>]
      }
     }
    }
    config EMBTK_LIBELF_VERSION_STRING string {
     default ["0.8.13"] if [EMBTK_HAVE_ROOTFS && EMBTK_LIBELF_VERSION_0_8_13]
     inherited [EMBTK_HAVE_ROOTFS]
    }
    config EMBTK_LIBELF_NEED_PATCH boolean {
     inherited [EMBTK_HAVE_ROOTFS]
    }
    config EMBTK_HAVE_LIBXML2 boolean {
     prompt "Have libxml2" if [EMBTK_HAVE_ROOTFS]
     inherited [EMBTK_HAVE_ROOTFS]
     choice boolean {
      prompt "libxml version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_LIBXML2]
      depends on [EMBTK_HAVE_LIBXML2]
      config EMBTK_LIBXML2_VERSION_2_7_7 boolean {
       prompt "libxml2-2.7.7" if [<choice>]
       inherited [<choice>]
      }
      config EMBTK_LIBXML2_VERSION_2_7_6 boolean {
       prompt "libxml2-2.7.6" if [<choice>]
       inherited [<choice>]
      }
     }
    }
    config EMBTK_LIBXML2_VERSION_STRING string {
     default ["2.7.7"] if [EMBTK_HAVE_ROOTFS && EMBTK_LIBXML2_VERSION_2_7_7]
     default ["2.7.6"] if [EMBTK_HAVE_ROOTFS && EMBTK_LIBXML2_VERSION_2_7_6]
     inherited [EMBTK_HAVE_ROOTFS]
    }
    config EMBTK_HAVE_NCURSES boolean {
     prompt "Have ncurses" if [EMBTK_HAVE_ROOTFS]
     select KEMBTK_EGLIBC_OPTION_EGLIBC_CHARSETS if [EMBTK_HAVE_ROOTFS && EMBTK_CLIB_EGLIBC]
     inherited [EMBTK_HAVE_ROOTFS]
     choice boolean {
      prompt "ncurses version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NCURSES]
      depends on [EMBTK_HAVE_NCURSES]
      config EMBTK_NCURSES_VERSION_5_7 boolean {
       prompt "ncurses-5.7" if [<choice>]
       inherited [<choice>]
      }
     }
    }
    config EMBTK_NCURSES_VERSION_STRING string {
     default ["5.7"] if [EMBTK_HAVE_ROOTFS && EMBTK_NCURSES_VERSION_5_7]
     inherited [EMBTK_HAVE_ROOTFS]
    }
    config EMBTK_HAVE_TSLIB boolean {
     prompt "Have tslib" if [EMBTK_HAVE_ROOTFS]
     inherited [EMBTK_HAVE_ROOTFS]
     choice boolean {
      prompt "tslib version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_TSLIB]
      depends on [EMBTK_HAVE_TSLIB]
      config EMBTK_TSLIB_VERSION_1_0 boolean {
       prompt "tslib-1.0" if [<choice>]
       select EMBTK_TSLIB_NEED_PATCH if [<choice>]
       inherited [<choice>]
      }
     }
    }
    config EMBTK_TSLIB_VERSION_STRING string {
     default ["1.0"] if [EMBTK_HAVE_ROOTFS && EMBTK_TSLIB_VERSION_1_0]
     inherited [EMBTK_HAVE_ROOTFS]
    }
    config EMBTK_TSLIB_NEED_PATCH boolean {
     inherited [EMBTK_HAVE_ROOTFS]
    }
   }
   menu "X window system" {
    depends on [EMBTK_HAVE_ROOTFS]
    menu "X windowing system tools" {
     depends on [EMBTK_HAVE_ROOTFS]
     config EMBTK_HAVE_UTILMACROS boolean {
      prompt "Have utilmacros" if [EMBTK_HAVE_ROOTFS]
      inherited [EMBTK_HAVE_ROOTFS]
      choice boolean {
       prompt "utilmacros version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_UTILMACROS]
       depends on [EMBTK_HAVE_UTILMACROS]
       config EMBTK_UTILMACROS_VERSION_1_10_0 boolean {
        prompt "util-macros-1.10.0" if [<choice>]
        inherited [<choice>]
       }
       config EMBTK_UTILMACROS_VERSION_1_9_0 boolean {
        prompt "util-macros-1.9.0" if [<choice>]
        inherited [<choice>]
       }
       config EMBTK_UTILMACROS_VERSION_1_8_0 boolean {
        prompt "util-macros-1.8.0" if [<choice>]
        inherited [<choice>]
       }
       config EMBTK_UTILMACROS_VERSION_1_7_0 boolean {
        prompt "util-macros-1.7.0" if [<choice>]
        inherited [<choice>]
       }
       config EMBTK_UTILMACROS_VERSION_1_6_1 boolean {
        prompt "util-macros-1.6.1" if [<choice>]
        inherited [<choice>]
       }
       config EMBTK_UTILMACROS_VERSION_1_6_0 boolean {
        prompt "util-macros-1.6.0" if [<choice>]
        inherited [<choice>]
       }
      }
     }
     config EMBTK_UTILMACROS_VERSION_STRING string {
      default ["1.10.0"] if [EMBTK_HAVE_ROOTFS && EMBTK_UTILMACROS_VERSION_1_10_0]
      default ["1.9.0"] if [EMBTK_HAVE_ROOTFS && EMBTK_UTILMACROS_VERSION_1_9_0]
      default ["1.8.0"] if [EMBTK_HAVE_ROOTFS && EMBTK_UTILMACROS_VERSION_1_8_0]
      default ["1.7.0"] if [EMBTK_HAVE_ROOTFS && EMBTK_UTILMACROS_VERSION_1_7_0]
      default ["1.6.1"] if [EMBTK_HAVE_ROOTFS && EMBTK_UTILMACROS_VERSION_1_6_1]
      default ["1.6.0"] if [EMBTK_HAVE_ROOTFS && EMBTK_UTILMACROS_VERSION_1_6_0]
      inherited [EMBTK_HAVE_ROOTFS]
     }
     config EMBTK_HAVE_XCBUTIL boolean {
      prompt "Have xcbutil" if [EMBTK_HAVE_ROOTFS]
      select EMBTK_HAVE_LIBXCB if [EMBTK_HAVE_ROOTFS]
      inherited [EMBTK_HAVE_ROOTFS]
      choice boolean {
       prompt "xcbutil version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_XCBUTIL]
       depends on [EMBTK_HAVE_XCBUTIL]
       config EMBTK_XCBUTIL_VERSION_0_3_6 boolean {
        prompt "xcb-util-0.3.6" if [<choice>]
        inherited [<choice>]
       }
      }
     }
     config EMBTK_XCBUTIL_VERSION_STRING string {
      default ["0.3.6"] if [EMBTK_HAVE_ROOTFS && EMBTK_XCBUTIL_VERSION_0_3_6]
      inherited [EMBTK_HAVE_ROOTFS]
     }
    }
    menu "X windowing system prototype packages" {
     depends on [EMBTK_HAVE_ROOTFS]
     config EMBTK_HAVE_BIGREQSPROTO boolean {
      prompt "Have bigreqsproto" if [EMBTK_HAVE_ROOTFS]
      inherited [EMBTK_HAVE_ROOTFS]
      choice boolean {
       prompt "bigreqsproto version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_BIGREQSPROTO]
       depends on [EMBTK_HAVE_BIGREQSPROTO]
       config EMBTK_BIGREQSPROTO_VERSION_1_1_0 boolean {
        prompt "bigreqsproto-1.1.0" if [<choice>]
        inherited [<choice>]
       }
      }
     }
     config EMBTK_BIGREQSPROTO_VERSION_STRING string {
      default ["1.1.0"] if [EMBTK_HAVE_ROOTFS && EMBTK_BIGREQSPROTO_VERSION_1_1_0]
      inherited [EMBTK_HAVE_ROOTFS]
     }
     config EMBTK_HAVE_COMPOSITEPROTO boolean {
      prompt "Have compositeproto" if [EMBTK_HAVE_ROOTFS]
      inherited [EMBTK_HAVE_ROOTFS]
      choice boolean {
       prompt "compositeproto version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_COMPOSITEPROTO]
       depends on [EMBTK_HAVE_COMPOSITEPROTO]
       config EMBTK_COMPOSITEPROTO_VERSION_0_4_1 boolean {
        prompt "compositeproto-0.4.1" if [<choice>]
        inherited [<choice>]
       }
      }
     }
     config EMBTK_COMPOSITEPROTO_VERSION_STRING string {
      default ["0.4.1"] if [EMBTK_HAVE_ROOTFS && EMBTK_COMPOSITEPROTO_VERSION_0_4_1]
      inherited [EMBTK_HAVE_ROOTFS]
     }
     config EMBTK_HAVE_DAMAGEPROTO boolean {
      prompt "Have damageproto" if [EMBTK_HAVE_ROOTFS]
      inherited [EMBTK_HAVE_ROOTFS]
      choice boolean {
       prompt "damageproto version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_DAMAGEPROTO]
       depends on [EMBTK_HAVE_DAMAGEPROTO]
       config EMBTK_DAMAGEPROTO_VERSION_1_2_0 boolean {
        prompt "damageproto-1.2.0" if [<choice>]
        inherited [<choice>]
       }
      }
     }
     config EMBTK_DAMAGEPROTO_VERSION_STRING string {
      default ["1.2.0"] if [EMBTK_HAVE_ROOTFS && EMBTK_DAMAGEPROTO_VERSION_1_2_0]
      inherited [EMBTK_HAVE_ROOTFS]
     }
     config EMBTK_HAVE_FIXESPROTO boolean {
      prompt "Have fixesproto" if [EMBTK_HAVE_ROOTFS]
      inherited [EMBTK_HAVE_ROOTFS]
      choice boolean {
       prompt "fixesproto version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_FIXESPROTO]
       depends on [EMBTK_HAVE_FIXESPROTO]
       config EMBTK_FIXESPROTO_VERSION_4_1 boolean {
        prompt "fixesproto-4.1" if [<choice>]
        inherited [<choice>]
       }
      }
     }
     config EMBTK_FIXESPROTO_VERSION_STRING string {
      default ["4.1"] if [EMBTK_HAVE_ROOTFS && EMBTK_FIXESPROTO_VERSION_4_1]
      inherited [EMBTK_HAVE_ROOTFS]
     }
     config EMBTK_HAVE_FONTSPROTO boolean {
      prompt "Have fontsproto" if [EMBTK_HAVE_ROOTFS]
      inherited [EMBTK_HAVE_ROOTFS]
      choice boolean {
       prompt "fontsproto version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_FONTSPROTO]
       depends on [EMBTK_HAVE_FONTSPROTO]
       config EMBTK_FONTSPROTO_VERSION_2_1_0 boolean {
        prompt "fontsproto-2.1.0" if [<choice>]
        inherited [<choice>]
       }
      }
     }
     config EMBTK_FONTSPROTO_VERSION_STRING string {
      default ["2.1.0"] if [EMBTK_HAVE_ROOTFS && EMBTK_FONTSPROTO_VERSION_2_1_0]
      inherited [EMBTK_HAVE_ROOTFS]
     }
     config EMBTK_HAVE_INPUTPROTO boolean {
      prompt "Have inputproto" if [EMBTK_HAVE_ROOTFS]
      inherited [EMBTK_HAVE_ROOTFS]
      choice boolean {
       prompt "inputproto version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_INPUTPROTO]
       depends on [EMBTK_HAVE_INPUTPROTO]
       config EMBTK_INPUTPROTO_VERSION_2_0 boolean {
        prompt "inputproto-2.0" if [<choice>]
        inherited [<choice>]
       }
      }
     }
     config EMBTK_INPUTPROTO_VERSION_STRING string {
      default ["2.0"] if [EMBTK_HAVE_ROOTFS && EMBTK_INPUTPROTO_VERSION_2_0]
      inherited [EMBTK_HAVE_ROOTFS]
     }
     config EMBTK_HAVE_KBPROTO boolean {
      prompt "Have kbproto" if [EMBTK_HAVE_ROOTFS]
      inherited [EMBTK_HAVE_ROOTFS]
      choice boolean {
       prompt "kbproto version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_KBPROTO]
       depends on [EMBTK_HAVE_KBPROTO]
       config EMBTK_KBPROTO_VERSION_1_0_5 boolean {
        prompt "kbproto-1.0.5" if [<choice>]
        inherited [<choice>]
       }
       config EMBTK_KBPROTO_VERSION_1_0_4 boolean {
        prompt "kbproto-1.0.4" if [<choice>]
        inherited [<choice>]
       }
      }
     }
     config EMBTK_KBPROTO_VERSION_STRING string {
      default ["1.0.5"] if [EMBTK_HAVE_ROOTFS && EMBTK_KBPROTO_VERSION_1_0_5]
      default ["1.0.4"] if [EMBTK_HAVE_ROOTFS && EMBTK_KBPROTO_VERSION_1_0_4]
      inherited [EMBTK_HAVE_ROOTFS]
     }
     config EMBTK_HAVE_RANDRPROTO boolean {
      prompt "Have randrproto" if [EMBTK_HAVE_ROOTFS]
      inherited [EMBTK_HAVE_ROOTFS]
      choice boolean {
       prompt "randrproto version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_RANDRPROTO]
       depends on [EMBTK_HAVE_RANDRPROTO]
       config EMBTK_RANDRPROTO_VERSION_1_3_1 boolean {
        prompt "randrproto-1.3.1" if [<choice>]
        inherited [<choice>]
       }
      }
     }
     config EMBTK_RANDRPROTO_VERSION_STRING string {
      default ["1.3.1"] if [EMBTK_HAVE_ROOTFS && EMBTK_RANDRPROTO_VERSION_1_3_1]
      inherited [EMBTK_HAVE_ROOTFS]
     }
     config EMBTK_HAVE_RECORDPROTO boolean {
      prompt "Have recordproto" if [EMBTK_HAVE_ROOTFS]
      inherited [EMBTK_HAVE_ROOTFS]
      choice boolean {
       prompt "recordproto version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_RECORDPROTO]
       depends on [EMBTK_HAVE_RECORDPROTO]
       config EMBTK_RECORDPROTO_VERSION_1_14 boolean {
        prompt "recordproto-1.14" if [<choice>]
        inherited [<choice>]
       }
      }
     }
     config EMBTK_RECORDPROTO_VERSION_STRING string {
      default ["1.14"] if [EMBTK_HAVE_ROOTFS && EMBTK_RECORDPROTO_VERSION_1_14]
      inherited [EMBTK_HAVE_ROOTFS]
     }
     config EMBTK_HAVE_RENDERPROTO boolean {
      prompt "Have renderproto" if [EMBTK_HAVE_ROOTFS]
      inherited [EMBTK_HAVE_ROOTFS]
      choice boolean {
       prompt "renderproto version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_RENDERPROTO]
       depends on [EMBTK_HAVE_RENDERPROTO]
       config EMBTK_RENDERPROTO_VERSION_0_11_1 boolean {
        prompt "renderproto-0.11.1" if [<choice>]
        inherited [<choice>]
       }
       config EMBTK_RENDERPROTO_VERSION_0_11 boolean {
        prompt "renderproto-0.11" if [<choice>]
        inherited [<choice>]
       }
      }
     }
     config EMBTK_RENDERPROTO_VERSION_STRING string {
      default ["0.11.1"] if [EMBTK_HAVE_ROOTFS && EMBTK_RENDERPROTO_VERSION_0_11_1]
      default ["0.11"] if [EMBTK_HAVE_ROOTFS && EMBTK_RENDERPROTO_VERSION_0_11]
      inherited [EMBTK_HAVE_ROOTFS]
     }
     config EMBTK_HAVE_RESOURCEPROTO boolean {
      prompt "Have resourceproto" if [EMBTK_HAVE_ROOTFS]
      inherited [EMBTK_HAVE_ROOTFS]
      choice boolean {
       prompt "resourceproto version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_RESOURCEPROTO]
       depends on [EMBTK_HAVE_RESOURCEPROTO]
       config EMBTK_RESOURCEPROTO_VERSION_1_1_0 boolean {
        prompt "resourceproto-1.1.0" if [<choice>]
        inherited [<choice>]
       }
      }
     }
     config EMBTK_RESOURCEPROTO_VERSION_STRING string {
      default ["1.1.0"] if [EMBTK_HAVE_ROOTFS && EMBTK_RESOURCEPROTO_VERSION_1_1_0]
      inherited [EMBTK_HAVE_ROOTFS]
     }
     config EMBTK_HAVE_VIDEOPROTO boolean {
      prompt "Have videoproto" if [EMBTK_HAVE_ROOTFS]
      inherited [EMBTK_HAVE_ROOTFS]
      choice boolean {
       prompt "videoproto version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_VIDEOPROTO]
       depends on [EMBTK_HAVE_VIDEOPROTO]
       config EMBTK_VIDEOPROTO_VERSION_2_3_1 boolean {
        prompt "videoproto-2.3.1" if [<choice>]
        inherited [<choice>]
       }
       config EMBTK_VIDEOPROTO_VERSION_2_3_0 boolean {
        prompt "videoproto-2.3.0" if [<choice>]
        inherited [<choice>]
       }
      }
     }
     config EMBTK_VIDEOPROTO_VERSION_STRING string {
      default ["2.3.1"] if [EMBTK_HAVE_ROOTFS && EMBTK_VIDEOPROTO_VERSION_2_3_1]
      default ["2.3.0"] if [EMBTK_HAVE_ROOTFS && EMBTK_VIDEOPROTO_VERSION_2_3_0]
      inherited [EMBTK_HAVE_ROOTFS]
     }
     config EMBTK_HAVE_XCBPROTO boolean {
      prompt "Have xcbproto" if [EMBTK_HAVE_ROOTFS]
      inherited [EMBTK_HAVE_ROOTFS]
      choice boolean {
       prompt "xcbproto version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_XCBPROTO]
       depends on [EMBTK_HAVE_XCBPROTO]
       config EMBTK_XCBPROTO_VERSION_1_6 boolean {
        prompt "xcbproto-1.6" if [<choice>]
        inherited [<choice>]
       }
      }
     }
     config EMBTK_XCBPROTO_VERSION_STRING string {
      default ["1.6"] if [EMBTK_HAVE_ROOTFS && EMBTK_XCBPROTO_VERSION_1_6]
      inherited [EMBTK_HAVE_ROOTFS]
     }
     config EMBTK_HAVE_XCMISCPROTO boolean {
      prompt "Have xcmiscproto" if [EMBTK_HAVE_ROOTFS]
      inherited [EMBTK_HAVE_ROOTFS]
      choice boolean {
       prompt "xcmiscproto version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_XCMISCPROTO]
       depends on [EMBTK_HAVE_XCMISCPROTO]
       config EMBTK_XCMISCPROTO_VERSION_1_2_0 boolean {
        prompt "xcmiscproto-1.2.0" if [<choice>]
        inherited [<choice>]
       }
      }
     }
     config EMBTK_XCMISCPROTO_VERSION_STRING string {
      default ["1.2.0"] if [EMBTK_HAVE_ROOTFS && EMBTK_XCMISCPROTO_VERSION_1_2_0]
      inherited [EMBTK_HAVE_ROOTFS]
     }
     config EMBTK_HAVE_XEXTPROTO boolean {
      prompt "Have xextproto" if [EMBTK_HAVE_ROOTFS]
      inherited [EMBTK_HAVE_ROOTFS]
      choice boolean {
       prompt "xextproto version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_XEXTPROTO]
       depends on [EMBTK_HAVE_XEXTPROTO]
       config EMBTK_XEXTPROTO_VERSION_7_1_2 boolean {
        prompt "xextproto-7.1.2" if [<choice>]
        inherited [<choice>]
       }
       config EMBTK_XEXTPROTO_VERSION_7_1_1 boolean {
        prompt "xextproto-7.1.1" if [<choice>]
        inherited [<choice>]
       }
      }
     }
     config EMBTK_XEXTPROTO_VERSION_STRING string {
      default ["7.1.2"] if [EMBTK_HAVE_ROOTFS && EMBTK_XEXTPROTO_VERSION_7_1_2]
      default ["7.1.1"] if [EMBTK_HAVE_ROOTFS && EMBTK_XEXTPROTO_VERSION_7_1_1]
      inherited [EMBTK_HAVE_ROOTFS]
     }
     config EMBTK_HAVE_XPROTO boolean {
      prompt "Have xproto" if [EMBTK_HAVE_ROOTFS]
      inherited [EMBTK_HAVE_ROOTFS]
      choice boolean {
       prompt "xproto version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_XPROTO]
       depends on [EMBTK_HAVE_XPROTO]
       config EMBTK_XPROTO_VERSION_7_0_18 boolean {
        prompt "xproto-7.0.18" if [<choice>]
        inherited [<choice>]
       }
       config EMBTK_XPROTO_VERSION_7_0_17 boolean {
        prompt "xproto-7.0.17" if [<choice>]
        inherited [<choice>]
       }
       config EMBTK_XPROTO_VERSION_7_0_16 boolean {
        prompt "xproto-7.0.16" if [<choice>]
        inherited [<choice>]
       }
      }
     }
     config EMBTK_XPROTO_VERSION_STRING string {
      default ["7.0.18"] if [EMBTK_HAVE_ROOTFS && EMBTK_XPROTO_VERSION_7_0_18]
      default ["7.0.17"] if [EMBTK_HAVE_ROOTFS && EMBTK_XPROTO_VERSION_7_0_17]
      default ["7.0.16"] if [EMBTK_HAVE_ROOTFS && EMBTK_XPROTO_VERSION_7_0_16]
      inherited [EMBTK_HAVE_ROOTFS]
     }
    }
    menu "X windowing system library packages" {
     depends on [EMBTK_HAVE_ROOTFS]
     config EMBTK_HAVE_LIBFONTENC boolean {
      prompt "Have libfontenc" if [EMBTK_HAVE_ROOTFS]
      inherited [EMBTK_HAVE_ROOTFS]
      choice boolean {
       prompt "libfontenc version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_LIBFONTENC]
       depends on [EMBTK_HAVE_LIBFONTENC]
       config EMBTK_LIBFONTENC_VERSION_1_0_5 boolean {
        prompt "libfontenc-1.0.5" if [<choice>]
        inherited [<choice>]
       }
      }
     }
     config EMBTK_LIBFONTENC_VERSION_STRING string {
      default ["1.0.5"] if [EMBTK_HAVE_ROOTFS && EMBTK_LIBFONTENC_VERSION_1_0_5]
      inherited [EMBTK_HAVE_ROOTFS]
     }
     config EMBTK_HAVE_LIBPCIACCESS boolean {
      prompt "Have libpciaccess" if [EMBTK_HAVE_ROOTFS]
      inherited [EMBTK_HAVE_ROOTFS]
      choice boolean {
       prompt "libpciaccess version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_LIBPCIACCESS]
       depends on [EMBTK_HAVE_LIBPCIACCESS]
       config EMBTK_LIBPCIACCESS_VERSION_0_12_0 boolean {
        prompt "libpciaccess-0.12.0" if [<choice>]
        inherited [<choice>]
       }
       config EMBTK_LIBPCIACCESS_VERSION_0_11_0 boolean {
        prompt "libpciaccess-0.11.0" if [<choice>]
        inherited [<choice>]
       }
      }
     }
     config EMBTK_LIBPCIACCESS_VERSION_STRING string {
      default ["0.12.0"] if [EMBTK_HAVE_ROOTFS && EMBTK_LIBPCIACCESS_VERSION_0_12_0]
      default ["0.11.0"] if [EMBTK_HAVE_ROOTFS && EMBTK_LIBPCIACCESS_VERSION_0_11_0]
      inherited [EMBTK_HAVE_ROOTFS]
     }
     config EMBTK_LIBPCIACCESS_NEED_PATCH boolean {
      inherited [EMBTK_HAVE_ROOTFS]
     }
     config EMBTK_HAVE_LIBPTHREADSTUBS boolean {
      prompt "Have libpthreadstubs" if [EMBTK_HAVE_ROOTFS]
      inherited [EMBTK_HAVE_ROOTFS]
      choice boolean {
       prompt "libpthreadstubs version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_LIBPTHREADSTUBS]
       depends on [EMBTK_HAVE_LIBPTHREADSTUBS]
       config EMBTK_LIBPTHREADSTUBS_VERSION_0_3 boolean {
        prompt "libpthreadstubs-0.3" if [<choice>]
        inherited [<choice>]
       }
      }
     }
     config EMBTK_LIBPTHREADSTUBS_VERSION_STRING string {
      default ["0.3"] if [EMBTK_HAVE_ROOTFS && EMBTK_LIBPTHREADSTUBS_VERSION_0_3]
      inherited [EMBTK_HAVE_ROOTFS]
     }
     config EMBTK_HAVE_LIBX11 boolean {
      prompt "Have libx11" if [EMBTK_HAVE_ROOTFS]
      select EMBTK_HAVE_UTILMACROS if [EMBTK_HAVE_ROOTFS]
      select EMBTK_HAVE_INPUTPROTO if [EMBTK_HAVE_ROOTFS]
      select EMBTK_HAVE_KBPROTO if [EMBTK_HAVE_ROOTFS]
      select EMBTK_HAVE_XEXTPROTO if [EMBTK_HAVE_ROOTFS]
      select EMBTK_HAVE_XPROTO if [EMBTK_HAVE_ROOTFS]
      select EMBTK_HAVE_LIBXCB if [EMBTK_HAVE_ROOTFS]
      select EMBTK_HAVE_XTRANS if [EMBTK_HAVE_ROOTFS]
      inherited [EMBTK_HAVE_ROOTFS]
      choice boolean {
       prompt "libx11 version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_LIBX11]
       depends on [EMBTK_HAVE_LIBX11]
       config EMBTK_LIBX11_VERSION_1_3_4 boolean {
        prompt "libx11-1.3.4" if [<choice>]
        inherited [<choice>]
       }
       config EMBTK_LIBX11_VERSION_1_3_3 boolean {
        prompt "libx11-1.3.3" if [<choice>]
        inherited [<choice>]
       }
      }
     }
     config EMBTK_LIBX11_VERSION_STRING string {
      default ["1.3.4"] if [EMBTK_HAVE_ROOTFS && EMBTK_LIBX11_VERSION_1_3_4]
      default ["1.3.3"] if [EMBTK_HAVE_ROOTFS && EMBTK_LIBX11_VERSION_1_3_3]
      inherited [EMBTK_HAVE_ROOTFS]
     }
     config EMBTK_HAVE_LIBXAU boolean {
      prompt "Have libxau" if [EMBTK_HAVE_ROOTFS]
      select EMBTK_HAVE_XPROTO if [EMBTK_HAVE_ROOTFS]
      inherited [EMBTK_HAVE_ROOTFS]
      choice boolean {
       prompt "libxau version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_LIBXAU]
       depends on [EMBTK_HAVE_LIBXAU]
       config EMBTK_LIBXAU_VERSION_1_0_6 boolean {
        prompt "libxau-1.0.6" if [<choice>]
        inherited [<choice>]
       }
       config EMBTK_LIBXAU_VERSION_1_0_5 boolean {
        prompt "libxau-1.0.5" if [<choice>]
        inherited [<choice>]
       }
      }
     }
     config EMBTK_LIBXAU_VERSION_STRING string {
      default ["1.0.6"] if [EMBTK_HAVE_ROOTFS && EMBTK_LIBXAU_VERSION_1_0_6]
      default ["1.0.5"] if [EMBTK_HAVE_ROOTFS && EMBTK_LIBXAU_VERSION_1_0_5]
      inherited [EMBTK_HAVE_ROOTFS]
     }
     config EMBTK_HAVE_LIBXCB boolean {
      prompt "Have libxcb" if [EMBTK_HAVE_ROOTFS]
      select EMBTK_HAVE_LIBPTHREADSTUBS if [EMBTK_HAVE_ROOTFS]
      select EMBTK_HAVE_LIBXAU if [EMBTK_HAVE_ROOTFS]
      select EMBTK_HAVE_XCBPROTO if [EMBTK_HAVE_ROOTFS]
      inherited [EMBTK_HAVE_ROOTFS]
      choice boolean {
       prompt "libxcb version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_LIBXCB]
       depends on [EMBTK_HAVE_LIBXCB]
       config EMBTK_LIBXCB_VERSION_1_7 boolean {
        prompt "libxcb-1.7" if [<choice>]
        inherited [<choice>]
       }
       config EMBTK_LIBXCB_VERSION_1_6 boolean {
        prompt "libxcb-1.6" if [<choice>]
        inherited [<choice>]
       }
       config EMBTK_LIBXCB_VERSION_1_5 boolean {
        prompt "libxcb-1.5" if [<choice>]
        inherited [<choice>]
       }
      }
     }
     config EMBTK_LIBXCB_VERSION_STRING string {
      default ["1.7"] if [EMBTK_HAVE_ROOTFS && EMBTK_LIBXCB_VERSION_1_7]
      default ["1.6"] if [EMBTK_HAVE_ROOTFS && EMBTK_LIBXCB_VERSION_1_6]
      default ["1.5"] if [EMBTK_HAVE_ROOTFS && EMBTK_LIBXCB_VERSION_1_5]
      inherited [EMBTK_HAVE_ROOTFS]
     }
     config EMBTK_HAVE_LIBXCOMPOSITE boolean {
      prompt "Have libXcomposite" if [EMBTK_HAVE_ROOTFS]
      select EMBTK_HAVE_XPROTO if [EMBTK_HAVE_ROOTFS]
      select EMBTK_HAVE_COMPOSITEPROTO if [EMBTK_HAVE_ROOTFS]
      select EMBTK_HAVE_LIBXFIXES if [EMBTK_HAVE_ROOTFS]
      inherited [EMBTK_HAVE_ROOTFS]
      choice boolean {
       prompt "libXcomposite version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_LIBXCOMPOSITE]
       depends on [EMBTK_HAVE_LIBXCOMPOSITE]
       config EMBTK_LIBXCOMPOSITE_VERSION_0_4_2 boolean {
        prompt "libXcomposite-0.4.2" if [<choice>]
        inherited [<choice>]
       }
      }
     }
     config EMBTK_LIBXCOMPOSITE_VERSION_STRING string {
      default ["0.4.2"] if [EMBTK_HAVE_ROOTFS && EMBTK_LIBXCOMPOSITE_VERSION_0_4_2]
      inherited [EMBTK_HAVE_ROOTFS]
     }
     config EMBTK_LIBXCOMPOSITE_NEED_PATCH boolean {
      inherited [EMBTK_HAVE_ROOTFS]
     }
     config EMBTK_HAVE_LIBXEXT boolean {
      prompt "Have libXext" if [EMBTK_HAVE_ROOTFS]
      select EMBTK_HAVE_LIBX11 if [EMBTK_HAVE_ROOTFS]
      inherited [EMBTK_HAVE_ROOTFS]
      choice boolean {
       prompt "libxext version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_LIBXEXT]
       depends on [EMBTK_HAVE_LIBXEXT]
       config EMBTK_LIBXEXT_VERSION_1_1_2 boolean {
        prompt "libXext-1.1.2" if [<choice>]
        inherited [<choice>]
       }
       config EMBTK_LIBXEXT_VERSION_1_1_1 boolean {
        prompt "libXext-1.1.1" if [<choice>]
        inherited [<choice>]
       }
      }
     }
     config EMBTK_LIBXEXT_VERSION_STRING string {
      default ["1.1.2"] if [EMBTK_HAVE_ROOTFS && EMBTK_LIBXEXT_VERSION_1_1_2]
      default ["1.1.1"] if [EMBTK_HAVE_ROOTFS && EMBTK_LIBXEXT_VERSION_1_1_1]
      inherited [EMBTK_HAVE_ROOTFS]
     }
     config EMBTK_HAVE_LIBXFIXES boolean {
      prompt "Have libXfixes" if [EMBTK_HAVE_ROOTFS]
      select EMBTK_HAVE_FIXESPROTO if [EMBTK_HAVE_ROOTFS]
      select EMBTK_HAVE_XPROTO if [EMBTK_HAVE_ROOTFS]
      inherited [EMBTK_HAVE_ROOTFS]
      choice boolean {
       prompt "libxfixes version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_LIBXFIXES]
       depends on [EMBTK_HAVE_LIBXFIXES]
       config EMBTK_LIBXFIXES_VERSION_4_0_5 boolean {
        prompt "libXfixes-4.0.5" if [<choice>]
        inherited [<choice>]
       }
      }
     }
     config EMBTK_LIBXFIXES_VERSION_STRING string {
      default ["4.0.5"] if [EMBTK_HAVE_ROOTFS && EMBTK_LIBXFIXES_VERSION_4_0_5]
      inherited [EMBTK_HAVE_ROOTFS]
     }
     config EMBTK_LIBXFIXES_NEED_PATCH boolean {
      inherited [EMBTK_HAVE_ROOTFS]
     }
     config EMBTK_HAVE_LIBXFONT boolean {
      prompt "Have libxfont" if [EMBTK_HAVE_ROOTFS]
      select EMBTK_HAVE_LIBFONTENC if [EMBTK_HAVE_ROOTFS]
      select EMBTK_HAVE_FREETYPE if [EMBTK_HAVE_ROOTFS]
      inherited [EMBTK_HAVE_ROOTFS]
      choice boolean {
       prompt "libxfont version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_LIBXFONT]
       depends on [EMBTK_HAVE_LIBXFONT]
       config EMBTK_LIBXFONT_VERSION_1_4_2 boolean {
        prompt "libXfont-1.4.2" if [<choice>]
        inherited [<choice>]
       }
       config EMBTK_LIBXFONT_VERSION_1_4_1 boolean {
        prompt "libXfont-1.4.1" if [<choice>]
        inherited [<choice>]
       }
      }
     }
     config EMBTK_LIBXFONT_VERSION_STRING string {
      default ["1.4.2"] if [EMBTK_HAVE_ROOTFS && EMBTK_LIBXFONT_VERSION_1_4_2]
      default ["1.4.1"] if [EMBTK_HAVE_ROOTFS && EMBTK_LIBXFONT_VERSION_1_4_1]
      inherited [EMBTK_HAVE_ROOTFS]
     }
     config EMBTK_HAVE_LIBXFT boolean {
      prompt "Have libxft" if [EMBTK_HAVE_ROOTFS]
      select EMBTK_HAVE_FONTCONFIG if [EMBTK_HAVE_ROOTFS]
      select EMBTK_HAVE_FREETYPE if [EMBTK_HAVE_ROOTFS]
      select EMBTK_HAVE_XPROTO if [EMBTK_HAVE_ROOTFS]
      select EMBTK_HAVE_LIBXRENDER if [EMBTK_HAVE_ROOTFS]
      inherited [EMBTK_HAVE_ROOTFS]
      choice boolean {
       prompt "libxft version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_LIBXFT]
       depends on [EMBTK_HAVE_LIBXFT]
       config EMBTK_LIBXFT_VERSION_2_1_14 boolean {
        prompt "libXft-2.1.14" if [<choice>]
        inherited [<choice>]
       }
      }
     }
     config EMBTK_LIBXFT_VERSION_STRING string {
      default ["2.1.14"] if [EMBTK_HAVE_ROOTFS && EMBTK_LIBXFT_VERSION_2_1_14]
      inherited [EMBTK_HAVE_ROOTFS]
     }
     config EMBTK_HAVE_LIBXKBFILE boolean {
      prompt "Have libxkbfile" if [EMBTK_HAVE_ROOTFS]
      select EMBTK_HAVE_KBPROTO if [EMBTK_HAVE_ROOTFS]
      select EMBTK_HAVE_LIBX11 if [EMBTK_HAVE_ROOTFS]
      inherited [EMBTK_HAVE_ROOTFS]
      choice boolean {
       prompt "libxkbfile version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_LIBXKBFILE]
       depends on [EMBTK_HAVE_LIBXKBFILE]
       config EMBTK_LIBXKBFILE_VERSION_1_0_6 boolean {
        prompt "libxkbfile-1.0.6" if [<choice>]
        inherited [<choice>]
       }
      }
     }
     config EMBTK_LIBXKBFILE_VERSION_STRING string {
      default ["1.0.6"] if [EMBTK_HAVE_ROOTFS && EMBTK_LIBXKBFILE_VERSION_1_0_6]
      inherited [EMBTK_HAVE_ROOTFS]
     }
     config EMBTK_HAVE_LIBXRANDR boolean {
      prompt "Have libXrandr" if [EMBTK_HAVE_ROOTFS]
      select EMBTK_HAVE_XPROTO if [EMBTK_HAVE_ROOTFS]
      select EMBTK_HAVE_RANDRPROTO if [EMBTK_HAVE_ROOTFS]
      inherited [EMBTK_HAVE_ROOTFS]
      choice boolean {
       prompt "libxrandr version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_LIBXRANDR]
       depends on [EMBTK_HAVE_LIBXRANDR]
       config EMBTK_LIBXRANDR_VERSION_1_3_0 boolean {
        prompt "libXrandr-1.3.0" if [<choice>]
        inherited [<choice>]
       }
      }
     }
     config EMBTK_LIBXRANDR_VERSION_STRING string {
      default ["1.3.0"] if [EMBTK_HAVE_ROOTFS && EMBTK_LIBXRANDR_VERSION_1_3_0]
      inherited [EMBTK_HAVE_ROOTFS]
     }
     config EMBTK_HAVE_LIBXRENDER boolean {
      prompt "Have libxrender" if [EMBTK_HAVE_ROOTFS]
      select EMBTK_HAVE_RENDERPROTO if [EMBTK_HAVE_ROOTFS]
      select EMBTK_HAVE_LIBX11 if [EMBTK_HAVE_ROOTFS]
      inherited [EMBTK_HAVE_ROOTFS]
      choice boolean {
       prompt "libxrender version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_LIBXRENDER]
       depends on [EMBTK_HAVE_LIBXRENDER]
       config EMBTK_LIBXRENDER_VERSION_0_9_6 boolean {
        prompt "libXrender-0.9.6" if [<choice>]
        inherited [<choice>]
       }
       config EMBTK_LIBXRENDER_VERSION_0_9_5 boolean {
        prompt "libXrender-0.9.5" if [<choice>]
        inherited [<choice>]
       }
      }
     }
     config EMBTK_LIBXRENDER_VERSION_STRING string {
      default ["0.9.6"] if [EMBTK_HAVE_ROOTFS && EMBTK_LIBXRENDER_VERSION_0_9_6]
      default ["0.9.5"] if [EMBTK_HAVE_ROOTFS && EMBTK_LIBXRENDER_VERSION_0_9_5]
      inherited [EMBTK_HAVE_ROOTFS]
     }
    }
    menu "X windowing system application packages" {
     depends on [EMBTK_HAVE_ROOTFS]
     config EMBTK_HAVE_XKEYBOARDCONFIG boolean {
      prompt "Have xkeyboard-config" if [EMBTK_HAVE_ROOTFS]
      select EMBTK_HAVE_XKBCOMP if [EMBTK_HAVE_ROOTFS]
      inherited [EMBTK_HAVE_ROOTFS]
      choice boolean {
       prompt "xkeyboardconfig version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_XKEYBOARDCONFIG]
       depends on [EMBTK_HAVE_XKEYBOARDCONFIG]
       config EMBTK_XKEYBOARDCONFIG_VERSION_1_8 boolean {
        prompt "xkeyboard-config-1.8" if [<choice>]
        inherited [<choice>]
       }
      }
     }
     config EMBTK_XKEYBOARDCONFIG_VERSION_STRING string {
      default ["1.8"] if [EMBTK_HAVE_ROOTFS && EMBTK_XKEYBOARDCONFIG_VERSION_1_8]
      inherited [EMBTK_HAVE_ROOTFS]
     }
     config EMBTK_HAVE_XKBCOMP boolean {
      prompt "Have xkbcomp" if [EMBTK_HAVE_ROOTFS]
      select EMBTK_HAVE_LIBXKBFILE if [EMBTK_HAVE_ROOTFS]
      inherited [EMBTK_HAVE_ROOTFS]
      choice boolean {
       prompt "xkbcomp version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_XKBCOMP]
       depends on [EMBTK_HAVE_XKBCOMP]
       config EMBTK_XKBCOMP_VERSION_1_1_1 boolean {
        prompt "xkbcomp-1.1.1" if [<choice>]
        inherited [<choice>]
       }
      }
     }
     config EMBTK_XKBCOMP_VERSION_STRING string {
      default ["1.1.1"] if [EMBTK_HAVE_ROOTFS && EMBTK_XKBCOMP_VERSION_1_1_1]
      inherited [EMBTK_HAVE_ROOTFS]
     }
     config EMBTK_HAVE_XTRANS boolean {
      prompt "Have xtrans" if [EMBTK_HAVE_ROOTFS]
      inherited [EMBTK_HAVE_ROOTFS]
      choice boolean {
       prompt "xtrans version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_XTRANS]
       depends on [EMBTK_HAVE_XTRANS]
       config EMBTK_XTRANS_VERSION_1_2_5 boolean {
        prompt "xtrans-1.2.5" if [<choice>]
        inherited [<choice>]
       }
      }
     }
     config EMBTK_XTRANS_VERSION_STRING string {
      default ["1.2.5"] if [EMBTK_HAVE_ROOTFS && EMBTK_XTRANS_VERSION_1_2_5]
      inherited [EMBTK_HAVE_ROOTFS]
     }
    }
    menu "X windowing server" {
     depends on [EMBTK_HAVE_ROOTFS]
     config EMBTK_HAVE_XSERVER boolean {
      prompt "Have X window system server" if [EMBTK_HAVE_ROOTFS]
      select EMBTK_HAVE_UTILMACROS if [EMBTK_HAVE_ROOTFS]
      select EMBTK_HAVE_BIGREQSPROTO if [EMBTK_HAVE_ROOTFS]
      select EMBTK_HAVE_COMPOSITEPROTO if [EMBTK_HAVE_ROOTFS]
      select EMBTK_HAVE_DAMAGEPROTO if [EMBTK_HAVE_ROOTFS]
      select EMBTK_HAVE_FIXESPROTO if [EMBTK_HAVE_ROOTFS]
      select EMBTK_HAVE_FONTSPROTO if [EMBTK_HAVE_ROOTFS]
      select EMBTK_HAVE_INPUTPROTO if [EMBTK_HAVE_ROOTFS]
      select EMBTK_HAVE_KBPROTO if [EMBTK_HAVE_ROOTFS]
      select EMBTK_HAVE_RANDRPROTO if [EMBTK_HAVE_ROOTFS]
      select EMBTK_HAVE_RECORDPROTO if [EMBTK_HAVE_ROOTFS]
      select EMBTK_HAVE_RENDERPROTO if [EMBTK_HAVE_ROOTFS]
      select EMBTK_HAVE_RESOURCEPROTO if [EMBTK_HAVE_ROOTFS]
      select EMBTK_HAVE_VIDEOPROTO if [EMBTK_HAVE_ROOTFS]
      select EMBTK_HAVE_XCBPROTO if [EMBTK_HAVE_ROOTFS]
      select EMBTK_HAVE_XCMISCPROTO if [EMBTK_HAVE_ROOTFS]
      select EMBTK_HAVE_XEXTPROTO if [EMBTK_HAVE_ROOTFS]
      select EMBTK_HAVE_XPROTO if [EMBTK_HAVE_ROOTFS]
      select EMBTK_HAVE_LIBXFONT if [EMBTK_HAVE_ROOTFS]
      select EMBTK_HAVE_LIBXKBFILE if [EMBTK_HAVE_ROOTFS]
      select EMBTK_HAVE_XTRANS if [EMBTK_HAVE_ROOTFS]
      select EMBTK_HAVE_OPENSSL if [EMBTK_HAVE_ROOTFS]
      select EMBTK_HAVE_PIXMAN if [EMBTK_HAVE_ROOTFS]
      inherited [EMBTK_HAVE_ROOTFS]
      choice boolean {
       prompt "X server variant to install" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_XSERVER]
       depends on [EMBTK_HAVE_XSERVER]
       config EMBTK_HAVE_XSERVER_XORG boolean {
        prompt "xorg-server X server" if [<choice>]
        select KEMBTK_EGLIBC_OPTION_EGLIBC_STREAMS if [<choice> && EMBTK_CLIB_EGLIBC]
        select EMBTK_HAVE_LIBPCIACCESS if [<choice>]
        inherited [<choice>]
       }
       config EMBTK_HAVE_XSERVER_KDRIVE boolean {
        prompt "kdrive X server: Xfbdev" if [<choice>]
        inherited [<choice>]
       }
      }
      choice boolean {
       prompt "xserver version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_XSERVER]
       depends on [EMBTK_HAVE_XSERVER]
       config EMBTK_XSERVER_VERSION_1_8_2 boolean {
        prompt "xserver-1.8.2" if [<choice>]
        inherited [<choice>]
       }
       config EMBTK_XSERVER_VERSION_1_8_1 boolean {
        prompt "xserver-1.8.1" if [<choice>]
        inherited [<choice>]
       }
       config EMBTK_XSERVER_VERSION_1_7_7 boolean {
        prompt "xserver-1.7.7" if [<choice>]
        inherited [<choice>]
       }
       config EMBTK_XSERVER_VERSION_1_7_6 boolean {
        prompt "xserver-1.7.6" if [<choice>]
        inherited [<choice>]
       }
      }
      config EMBTK_HAVE_XSERVER_WITH_TSLIB boolean {
       prompt "build the x server with touchscreen library" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_XSERVER]
       depends on [EMBTK_HAVE_XSERVER]
       select EMBTK_HAVE_TSLIB if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_XSERVER]
       inherited [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_XSERVER]
      }
     }
     if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_XSERVER_XORG] {
      config EMBTK_HAVE_XF86INPUTEVDEV boolean {
       prompt "Have xf86-input-evdev" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_XSERVER_XORG]
       depends on [EMBTK_HAVE_XSERVER_XORG]
       inherited [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_XSERVER_XORG]
       choice boolean {
        prompt "xf86inputevdev version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_XSERVER_XORG && EMBTK_HAVE_XF86INPUTEVDEV]
        depends on [EMBTK_HAVE_XF86INPUTEVDEV]
        config EMBTK_XF86INPUTEVDEV_VERSION_2_5_0 boolean {
         prompt "xf86-input-evdev-2.5.0" if [<choice>]
         inherited [<choice>]
        }
        config EMBTK_XF86INPUTEVDEV_VERSION_2_4_0 boolean {
         prompt "xf86-input-evdev-2.4.0" if [<choice>]
         inherited [<choice>]
        }
       }
      }
      config EMBTK_XF86INPUTEVDEV_VERSION_STRING string {
       default ["2.5.0"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_XSERVER_XORG && EMBTK_XF86INPUTEVDEV_VERSION_2_5_0]
       default ["2.4.0"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_XSERVER_XORG && EMBTK_XF86INPUTEVDEV_VERSION_2_4_0]
       inherited [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_XSERVER_XORG]
      }
      config EMBTK_XF86INPUTEVDEV_NEED_PATCH boolean {
       inherited [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_XSERVER_XORG]
      }
      config EMBTK_HAVE_XF86VIDEOFBDEV boolean {
       prompt "Have xf86-video-fbdev" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_XSERVER_XORG]
       inherited [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_XSERVER_XORG]
       choice boolean {
        prompt "xf86-video-fbdev version you wish" if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_XSERVER_XORG && EMBTK_HAVE_XF86VIDEOFBDEV]
        depends on [EMBTK_HAVE_XF86VIDEOFBDEV]
        config EMBTK_XF86VIDEOFBDEV_VERSION_0_4_2 boolean {
         prompt "xf86-video-fbdev-0.4.2" if [<choice>]
         inherited [<choice>]
        }
       }
      }
      config EMBTK_XF86VIDEOFBDEV_VERSION_STRING string {
       default ["0.4.2"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_XSERVER_XORG && EMBTK_XF86VIDEOFBDEV_VERSION_0_4_2]
       inherited [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_XSERVER_XORG]
      }
      config EMBTK_XF86VIDEOFBDEV_NEED_PATCH boolean {
       inherited [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_XSERVER_XORG]
      }
     }
     config EMBTK_XSERVER_VERSION_STRING string {
      default ["1.8.2"] if [EMBTK_HAVE_ROOTFS && EMBTK_XSERVER_VERSION_1_8_2]
      default ["1.8.1"] if [EMBTK_HAVE_ROOTFS && EMBTK_XSERVER_VERSION_1_8_1]
      default ["1.7.7"] if [EMBTK_HAVE_ROOTFS && EMBTK_XSERVER_VERSION_1_7_7]
      default ["1.7.6"] if [EMBTK_HAVE_ROOTFS && EMBTK_XSERVER_VERSION_1_7_6]
      inherited [EMBTK_HAVE_ROOTFS]
     }
    }
   }
  }
  menu "Support native languages in root filesystem" {
   depends on [EMBTK_HAVE_ROOTFS]
   config EMBTK_HAVE_NLS_AF boolean {
    prompt "af" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_AM boolean {
    prompt "am" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_ANG boolean {
    prompt "ang" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_AR boolean {
    prompt "ar" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_AS boolean {
    prompt "as" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_AST boolean {
    prompt "ast" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_AZ boolean {
    prompt "az" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_AZ_IR boolean {
    prompt "az_IR" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_BE boolean {
    prompt "be" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_BE_LATIN boolean {
    prompt "be@latin" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_BG boolean {
    prompt "bg" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_BN boolean {
    prompt "bn" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_BN_IN boolean {
    prompt "bn_IN" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_BR boolean {
    prompt "br" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_BS boolean {
    prompt "bs" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_CA boolean {
    prompt "ca" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_CA_VALENCIA boolean {
    prompt "ca@valencia" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_CRH boolean {
    prompt "crh" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_CS boolean {
    prompt "cs" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_CY boolean {
    prompt "cy" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_DA boolean {
    prompt "da" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_DE boolean {
    prompt "de" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_DZ boolean {
    prompt "dz" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_EL boolean {
    prompt "el" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_EN_CA boolean {
    prompt "en_CA" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_EN_GB boolean {
    prompt "en_GB" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_EO boolean {
    prompt "eo" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_ES boolean {
    prompt "es" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_ET boolean {
    prompt "et" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_EU boolean {
    prompt "eu" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_FA boolean {
    prompt "fa" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_FI boolean {
    prompt "fi" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_FR boolean {
    prompt "fr" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_GA boolean {
    prompt "ga" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_GL boolean {
    prompt "gl" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_GU boolean {
    prompt "gu" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_HE boolean {
    prompt "he" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_HI boolean {
    prompt "hi" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_HR boolean {
    prompt "hr" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_HU boolean {
    prompt "hu" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_HY boolean {
    prompt "hy" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_IA boolean {
    prompt "ia" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_ID boolean {
    prompt "id" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_IO boolean {
    prompt "io" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_IS boolean {
    prompt "is" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_IT boolean {
    prompt "it" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_JA boolean {
    prompt "ja" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_KA boolean {
    prompt "ka" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_KN boolean {
    prompt "kn" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_KO boolean {
    prompt "ko" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_KU boolean {
    prompt "ku" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_LI boolean {
    prompt "li" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_LT boolean {
    prompt "lt" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_LV boolean {
    prompt "lv" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_MAI boolean {
    prompt "mai" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_MI boolean {
    prompt "mi" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_MK boolean {
    prompt "mk" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_ML boolean {
    prompt "ml" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_MN boolean {
    prompt "mn" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_MR boolean {
    prompt "mr" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_MS boolean {
    prompt "ms" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_NB boolean {
    prompt "nb" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_NDS boolean {
    prompt "nds" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_NE boolean {
    prompt "ne" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_NL boolean {
    prompt "nl" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_NN boolean {
    prompt "nn" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_NSO boolean {
    prompt "nso" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_OC boolean {
    prompt "oc" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_OR boolean {
    prompt "or" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_PA boolean {
    prompt "pa" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_PL boolean {
    prompt "pl" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_PS boolean {
    prompt "ps" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_PT boolean {
    prompt "pt" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_PT_BR boolean {
    prompt "pt_BR" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_RO boolean {
    prompt "ro" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_RU boolean {
    prompt "ru" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_RW boolean {
    prompt "rw" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_SI boolean {
    prompt "si" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_SK boolean {
    prompt "sk" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_SL boolean {
    prompt "sl" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_SQ boolean {
    prompt "sq" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_SR boolean {
    prompt "sr" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_SR_LATIN boolean {
    prompt "sr@latin" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_SR_IJE boolean {
    prompt "sr@ije" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_SV boolean {
    prompt "sv" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_TA boolean {
    prompt "ta" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_TE boolean {
    prompt "te" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_TH boolean {
    prompt "th" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_TK boolean {
    prompt "tk" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_TR boolean {
    prompt "tr" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_TT boolean {
    prompt "tt" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_UK boolean {
    prompt "uk" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_UR boolean {
    prompt "ur" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_UZ boolean {
    prompt "uz" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_UZ_CYRILLIC boolean {
    prompt "uz@cyrillic" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_VI boolean {
    prompt "vi" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_WA boolean {
    prompt "wa" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_XH boolean {
    prompt "xh" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_YI boolean {
    prompt "yi" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_ZH_CN boolean {
    prompt "zh_CN" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_ZH_HK boolean {
    prompt "zh_HK" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_HAVE_NLS_ZH_TW boolean {
    prompt "zh_TW" if [EMBTK_HAVE_ROOTFS]
    inherited [EMBTK_HAVE_ROOTFS]
   }
   config EMBTK_NLS_STRING string {
    default ["af"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_AF]
    default ["am"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_AM]
    default ["ang"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_ANG]
    default ["ar"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_AR]
    default ["as"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_AS]
    default ["ast"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_AST]
    default ["az"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_AZ]
    default ["az_IR"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_AZ_IR]
    default ["be"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_BE]
    default ["be@latin"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_BE_LATIN]
    default ["bg"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_BG]
    default ["bn"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_BN]
    default ["bn_IN"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_BN_IN]
    default ["br"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_BR]
    default ["bs"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_BS]
    default ["ca"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_CA]
    default ["ca@valencia"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_CA_VALENCIA]
    default ["crh"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_CRH]
    default ["cs"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_CS]
    default ["cy"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_CY]
    default ["da"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_DA]
    default ["de"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_DE]
    default ["dz"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_DZ]
    default ["el"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_EL]
    default ["en_CA"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_EN_CA]
    default ["en_GB"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_EN_GB]
    default ["eo"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_EO]
    default ["es"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_ES]
    default ["et"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_ET]
    default ["eu"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_EU]
    default ["fa"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_AZ]
    default ["fi"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_FI]
    default ["fr"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_FR]
    default ["ga"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_GA]
    default ["gl"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_GL]
    default ["gu"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_GU]
    default ["he"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_HE]
    default ["hi"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_HI]
    default ["hr"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_HR]
    default ["hu"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_HU]
    default ["hy"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_HY]
    default ["ia"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_IA]
    default ["id"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_ID]
    default ["io"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_IO]
    default ["is"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_IS]
    default ["it"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_IT]
    default ["ja"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_JA]
    default ["ka"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_KA]
    default ["kn"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_KN]
    default ["ko"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_KO]
    default ["ku"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_KU]
    default ["li"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_LI]
    default ["lt"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_LT]
    default ["lv"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_LV]
    default ["mai"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_MAI]
    default ["mi"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_MI]
    default ["mk"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_MK]
    default ["ml"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_ML]
    default ["mn"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_MN]
    default ["mr"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_MR]
    default ["ms"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_MS]
    default ["nb"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_NB]
    default ["nds"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_NDS]
    default ["ne"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_NE]
    default ["nl"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_NL]
    default ["nn"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_NN]
    default ["nso"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_NSO]
    default ["oc"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_OC]
    default ["or"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_OR]
    default ["pa"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_PA]
    default ["pl"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_PL]
    default ["ps"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_PS]
    default ["pt"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_PT]
    default ["pt_BR"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_PT_BR]
    default ["ro"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_RO]
    default ["ru"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_RU]
    default ["rw"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_RW]
    default ["si"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_SI]
    default ["sk"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_SK]
    default ["sl"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_SL]
    default ["sq"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_SQ]
    default ["sr"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_SR]
    default ["sr@latin"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_SR_LATIN]
    default ["sr@ije"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_SR_IJE]
    default ["sv"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_SV]
    default ["ta"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_TA]
    default ["te"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_TE]
    default ["th"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_TH]
    default ["tk"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_TK]
    default ["tr"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_TR]
    default ["tt"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_TT]
    default ["uk"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_UK]
    default ["ur"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_UR]
    default ["uz"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_UZ]
    default ["uz@cyrillic"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_UZ_CYRILLIC]
    default ["vi"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_VI]
    default ["wa"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_WA]
    default ["xh"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_XH]
    default ["yi"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_YI]
    default ["zh_CN"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_ZH_CN]
    default ["zh_HK"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_ZH_HK]
    default ["zh_TW"] if [EMBTK_HAVE_ROOTFS && EMBTK_HAVE_NLS_ZH_TW]
    inherited [EMBTK_HAVE_ROOTFS]
   }
  }
  menu "Support timezone in root filesystem" {
   depends on [EMBTK_HAVE_ROOTFS]
  }
 }
}
menu "Embtoolkit build options" {
 config EMBTK_NUMBER_BUILD_JOBS integer {
  prompt "Number of parallel build jobs" if []
  default [1] if []
 }
 config EMBTK_DOWNLOAD_DIR string {
  prompt "Download directory" if []
  default ["$(EMBTK_ROOT)/dl"] if []
 }
 config EMBTK_CACHE_PATCHES boolean {
  prompt "Preserve first downloaded patches and do not download new one" if []
  default [y] if []
 }
}
