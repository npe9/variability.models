config BR2_HAVE_DOT_CONFIG boolean {
 default [y] if []
}
config BR2_VERSION string {
 default ["2010.11-git"] if []
}
config BR2_ARCH_IS_64 boolean {
}
choice boolean {
 prompt "Target Architecture" if []
 default [BR2_i386] if []
 config BR2_alpha boolean {
  prompt "alpha" if [<choice> && BR2_DEPRECATED && BROKEN]
  depends on [BR2_DEPRECATED]
  depends on [BROKEN]
  inherited [<choice> && BR2_DEPRECATED && BROKEN]
 }
 config BR2_arm boolean {
  prompt "arm" if [<choice>]
  inherited [<choice>]
 }
 config BR2_armeb boolean {
  prompt "armeb" if [<choice>]
  inherited [<choice>]
 }
 config BR2_avr32 boolean {
  prompt "avr32" if [<choice>]
  select BR2_SOFT_FLOAT if [<choice>]
  inherited [<choice>]
 }
 config BR2_cris boolean {
  prompt "cris" if [<choice> && BR2_DEPRECATED]
  depends on [BR2_DEPRECATED]
  inherited [<choice> && BR2_DEPRECATED]
 }
 config BR2_ia64 boolean {
  prompt "ia64" if [<choice> && BR2_DEPRECATED && BROKEN]
  depends on [BR2_DEPRECATED]
  depends on [BROKEN]
  inherited [<choice> && BR2_DEPRECATED && BROKEN]
 }
 config BR2_i386 boolean {
  prompt "i386" if [<choice>]
  inherited [<choice>]
 }
 config BR2_m68k boolean {
  prompt "m68k" if [<choice> && BROKEN]
  depends on [BROKEN]
  inherited [<choice> && BROKEN]
 }
 config BR2_mips boolean {
  prompt "mips" if [<choice>]
  inherited [<choice>]
 }
 config BR2_mipsel boolean {
  prompt "mipsel" if [<choice>]
  inherited [<choice>]
 }
 config BR2_powerpc boolean {
  prompt "powerpc" if [<choice>]
  inherited [<choice>]
 }
 config BR2_sh boolean {
  prompt "superh" if [<choice>]
  inherited [<choice>]
 }
 config BR2_sh64 boolean {
  prompt "superh64" if [<choice>]
  inherited [<choice>]
 }
 config BR2_sparc boolean {
  prompt "sparc" if [<choice>]
  inherited [<choice>]
 }
 config BR2_sparc64 boolean {
  depends on [BR2_DEPRECATED]
  prompt "sparc64" if [<choice> && BR2_DEPRECATED]
  select BR2_ARCH_IS_64 if [<choice> && BR2_DEPRECATED]
  inherited [<choice> && BR2_DEPRECATED]
 }
 config BR2_x86_64 boolean {
  prompt "x86_64" if [<choice>]
  select BR2_ARCH_IS_64 if [<choice>]
  inherited [<choice>]
 }
 config BR2_xtensa boolean {
  prompt "xtensa" if [<choice>]
  inherited [<choice>]
 }
}
choice boolean {
 prompt "Target Architecture Variant" if [BR2_arm || BR2_armeb]
 depends on [BR2_arm || BR2_armeb]
 default [BR2_generic_arm] if [BR2_arm || BR2_armeb]
 config BR2_generic_arm boolean {
  prompt "generic_arm" if [<choice>]
  inherited [<choice>]
 }
 config BR2_arm7tdmi boolean {
  prompt "arm7tdmi" if [<choice>]
  inherited [<choice>]
 }
 config BR2_arm610 boolean {
  prompt "arm610" if [<choice>]
  inherited [<choice>]
 }
 config BR2_arm710 boolean {
  prompt "arm710" if [<choice>]
  inherited [<choice>]
 }
 config BR2_arm720t boolean {
  prompt "arm720t" if [<choice>]
  inherited [<choice>]
 }
 config BR2_arm920t boolean {
  prompt "arm920t" if [<choice>]
  inherited [<choice>]
 }
 config BR2_arm922t boolean {
  prompt "arm922t" if [<choice>]
  inherited [<choice>]
 }
 config BR2_arm926t boolean {
  prompt "arm926t" if [<choice>]
  inherited [<choice>]
 }
 config BR2_arm10t boolean {
  prompt "arm10t" if [<choice>]
  inherited [<choice>]
 }
 config BR2_arm1136jf_s boolean {
  prompt "arm1136jf_s" if [<choice>]
  inherited [<choice>]
 }
 config BR2_arm1176jz_s boolean {
  prompt "arm1176jz-s" if [<choice>]
  inherited [<choice>]
 }
 config BR2_arm1176jzf_s boolean {
  prompt "arm1176jzf-s" if [<choice>]
  inherited [<choice>]
 }
 config BR2_cortex_a8 boolean {
  prompt "cortex-A8" if [<choice>]
  inherited [<choice>]
 }
 config BR2_cortex_a9 boolean {
  prompt "cortex-A9" if [<choice>]
  inherited [<choice>]
 }
 config BR2_sa110 boolean {
  prompt "sa110" if [<choice>]
  inherited [<choice>]
 }
 config BR2_sa1100 boolean {
  prompt "sa1100" if [<choice>]
  inherited [<choice>]
 }
 config BR2_xscale boolean {
  prompt "xscale" if [<choice>]
  inherited [<choice>]
 }
 config BR2_iwmmxt boolean {
  prompt "iwmmxt" if [<choice>]
  inherited [<choice>]
 }
}
config BR2_ARM_TYPE string {
 default ["GENERIC_ARM"] if [BR2_generic_arm]
 default ["ARM610"] if [BR2_arm610]
 default ["ARM710"] if [BR2_arm710]
 default ["ARM7TDMI"] if [BR2_arm7tdmi]
 default ["ARM720T"] if [BR2_arm720t]
 default ["ARM920T"] if [BR2_arm920t]
 default ["ARM922T"] if [BR2_arm922t]
 default ["ARM926T"] if [BR2_arm926t]
 default ["ARM10T"] if [BR2_arm10t]
 default ["ARM1136JF_S"] if [BR2_arm1136jf_s]
 default ["ARM1176JZ_S"] if [BR2_arm1176jz_s]
 default ["ARM1176JZF_S"] if [BR2_arm1176jzf_s]
 default ["ARM_SA110"] if [BR2_sa110]
 default ["ARM_SA1100"] if [BR2_sa1100]
 default ["ARM_XSCALE"] if [BR2_xscale]
 default ["ARM_IWMMXT"] if [BR2_iwmmxt]
 default ["ARM_CORTEXA8"] if [BR2_cortex_a8]
 default ["ARM_CORTEXA9"] if [BR2_cortex_a9]
}
choice boolean {
 prompt "Target ABI" if [BR2_arm || BR2_armeb]
 depends on [BR2_arm || BR2_armeb]
 default [BR2_ARM_EABI] if [BR2_arm || BR2_armeb]
 config BR2_ARM_EABI boolean {
  prompt "EABI" if [<choice>]
  inherited [<choice>]
 }
 config BR2_ARM_OABI boolean {
  prompt "OABI" if [<choice>]
  inherited [<choice>]
 }
}
choice boolean {
 prompt "Target Architecture Variant" if [BR2_mips || BR2_mipsel]
 depends on [BR2_mips || BR2_mipsel]
 default [BR2_mips_3] if [(BR2_mips || BR2_mipsel) && BR2_mips]
 default [BR2_mips_1] if [(BR2_mips || BR2_mipsel) && BR2_mipsel]
 config BR2_mips_1 boolean {
  prompt "mips I (generic)" if [<choice>]
  inherited [<choice>]
 }
 config BR2_mips_2 boolean {
  prompt "mips II" if [<choice>]
  inherited [<choice>]
 }
 config BR2_mips_3 boolean {
  prompt "mips III" if [<choice>]
  inherited [<choice>]
 }
 config BR2_mips_4 boolean {
  prompt "mips IV" if [<choice>]
  inherited [<choice>]
 }
 config BR2_mips_32 boolean {
  prompt "mips 32" if [<choice>]
  inherited [<choice>]
 }
 config BR2_mips_32r2 boolean {
  prompt "mips 32r2" if [<choice>]
  inherited [<choice>]
 }
 config BR2_mips_64 boolean {
  prompt "mips 64" if [<choice>]
  inherited [<choice>]
 }
 config BR2_mips_64r2 boolean {
  prompt "mips 64r2" if [<choice>]
  inherited [<choice>]
 }
 config BR2_mips_16 boolean {
  prompt "mips 16" if [<choice>]
  inherited [<choice>]
 }
}
choice boolean {
 prompt "Target ABI" if [BR2_mips || BR2_mipsel]
 depends on [BR2_mips || BR2_mipsel]
 default [BR2_MIPS_OABI32] if [(BR2_mips || BR2_mipsel) && (BR_mips_32 || BR_mips_32r2)]
 default [BR2_MIPS_ABI32] if [(BR2_mips || BR2_mipsel) && (BR_mips_64 || BR_mips_64r2)]
 config BR2_MIPS_OABI32 boolean {
  prompt "o32" if [<choice>]
  inherited [<choice>]
 }
 config BR2_MIPS_ABI32 boolean {
  prompt "n32" if [<choice> && (BR2_mips_3 || BR2_mips_4 || BR2_mips_64 || BR2_mips_64r2 || BR2_mips_16)]
  depends on [BR2_mips_3 || BR2_mips_4 || BR2_mips_64 || BR2_mips_64r2 || BR2_mips_16]
  inherited [<choice> && (BR2_mips_3 || BR2_mips_4 || BR2_mips_64 || BR2_mips_64r2 || BR2_mips_16)]
 }
 config BR2_MIPS_EABI boolean {
  prompt "eabi" if [<choice> && (BR2_mips_3 || BR2_mips_4 || BR2_mips_64 || BR2_mips_64r2 || BR2_mips_16)]
  depends on [BR2_mips_3 || BR2_mips_4 || BR2_mips_64 || BR2_mips_64r2 || BR2_mips_16]
  inherited [<choice> && (BR2_mips_3 || BR2_mips_4 || BR2_mips_64 || BR2_mips_64r2 || BR2_mips_16)]
 }
 config BR2_MIPS_ABI64 boolean {
  prompt "n64" if [<choice> && (BR2_mips_3 || BR2_mips_4 || BR2_mips_64 || BR2_mips_64r2 || BR2_mips_16)]
  depends on [BR2_mips_3 || BR2_mips_4 || BR2_mips_64 || BR2_mips_64r2 || BR2_mips_16]
  inherited [<choice> && (BR2_mips_3 || BR2_mips_4 || BR2_mips_64 || BR2_mips_64r2 || BR2_mips_16)]
 }
 config BR2_MIPS_OABI64 boolean {
  prompt "o64" if [<choice> && (BR2_mips_3 || BR2_mips_4 || BR2_mips_64 || BR2_mips_64r2 || BR2_mips_16)]
  depends on [BR2_mips_3 || BR2_mips_4 || BR2_mips_64 || BR2_mips_64r2 || BR2_mips_16]
  inherited [<choice> && (BR2_mips_3 || BR2_mips_4 || BR2_mips_64 || BR2_mips_64r2 || BR2_mips_16)]
 }
 config BR2_MIPS_ABI_none boolean {
  prompt "unspecified" if [<choice> && BR2_mips_16]
  depends on [BR2_mips_16]
  inherited [<choice> && BR2_mips_16]
 }
}
choice boolean {
 prompt "Target Architecture Variant" if [BR2_sh]
 depends on [BR2_sh]
 default [BR2_sh4] if [BR2_sh]
 config BR2_sh2a_nofpueb boolean {
  prompt "sh2a_nofpueb" if [<choice>]
  inherited [<choice>]
 }
 config BR2_sh2eb boolean {
  prompt "sh2eb" if [<choice>]
  inherited [<choice>]
 }
 config BR2_sh3 boolean {
  prompt "sh3" if [<choice>]
  inherited [<choice>]
 }
 config BR2_sh3eb boolean {
  prompt "sh3eb" if [<choice>]
  inherited [<choice>]
 }
 config BR2_sh4 boolean {
  prompt "sh4" if [<choice>]
  inherited [<choice>]
 }
 config BR2_sh4eb boolean {
  prompt "sh4eb" if [<choice>]
  inherited [<choice>]
 }
}
choice boolean {
 prompt "Target Architecture Variant" if [BR2_i386]
 depends on [BR2_i386]
 default [BR2_x86_i386] if [BR2_i386]
 config BR2_x86_i386 boolean {
  prompt "i386" if [<choice>]
  inherited [<choice>]
 }
 config BR2_x86_i486 boolean {
  prompt "i486" if [<choice>]
  inherited [<choice>]
 }
 config BR2_x86_i586 boolean {
  prompt "i586" if [<choice>]
  inherited [<choice>]
 }
 config BR2_x86_i686 boolean {
  prompt "i686" if [<choice>]
  inherited [<choice>]
 }
 config BR2_x86_pentiumpro boolean {
  prompt "pentium pro" if [<choice>]
  inherited [<choice>]
 }
 config BR2_x86_pentium_mmx boolean {
  prompt "pentium MMX" if [<choice>]
  inherited [<choice>]
 }
 config BR2_x86_pentium_m boolean {
  prompt "pentium mobile" if [<choice>]
  inherited [<choice>]
 }
 config BR2_x86_pentium2 boolean {
  prompt "pentium2" if [<choice>]
  inherited [<choice>]
 }
 config BR2_x86_pentium3 boolean {
  prompt "pentium3" if [<choice>]
  inherited [<choice>]
 }
 config BR2_x86_pentium4 boolean {
  prompt "pentium4" if [<choice>]
  inherited [<choice>]
 }
 config BR2_x86_prescott boolean {
  prompt "prescott" if [<choice>]
  inherited [<choice>]
 }
 config BR2_x86_nocona boolean {
  prompt "nocona" if [<choice>]
  inherited [<choice>]
 }
 config BR2_x86_core2 boolean {
  prompt "core2" if [<choice>]
  inherited [<choice>]
 }
 config BR2_x86_k6 boolean {
  prompt "k6" if [<choice>]
  inherited [<choice>]
 }
 config BR2_x86_k6_2 boolean {
  prompt "k6-2" if [<choice>]
  inherited [<choice>]
 }
 config BR2_x86_athlon boolean {
  prompt "athlon" if [<choice>]
  inherited [<choice>]
 }
 config BR2_x86_athlon_4 boolean {
  prompt "athlon-4" if [<choice>]
  inherited [<choice>]
 }
 config BR2_x86_opteron boolean {
  prompt "opteron" if [<choice>]
  inherited [<choice>]
 }
 config BR2_x86_opteron_sse3 boolean {
  prompt "opteron w/ SSE3" if [<choice>]
  inherited [<choice>]
 }
 config BR2_x86_barcelona boolean {
  prompt "barcelona" if [<choice>]
  inherited [<choice>]
 }
 config BR2_x86_geode boolean {
  prompt "geode" if [<choice>]
  inherited [<choice>]
 }
 config BR2_x86_c3 boolean {
  prompt "cyrix 3 (MMX + 3dNOW!)" if [<choice>]
  inherited [<choice>]
 }
 config BR2_x86_winchip_c6 boolean {
  prompt "IDT winchip C6 (i486 + slow MMX)" if [<choice>]
  inherited [<choice>]
 }
 config BR2_x86_winchip2 boolean {
  prompt "IDT winchip2 (i486 +MMX +SSE)" if [<choice>]
  inherited [<choice>]
 }
}
choice boolean {
 prompt "Target Architecture Variant" if [BR2_x86_64]
 depends on [BR2_x86_64]
 default [BR2_x86_64_generic] if [BR2_x86_64]
 config BR2_x86_64_generic boolean {
  prompt "generic" if [<choice>]
  inherited [<choice>]
 }
 config BR2_x86_64_barcelona boolean {
  prompt "barcelona" if [<choice>]
  inherited [<choice>]
 }
 config BR2_x86_64_opteron_sse3 boolean {
  prompt "opteron w/ sse3" if [<choice>]
  inherited [<choice>]
 }
 config BR2_x86_64_opteron boolean {
  prompt "opteron" if [<choice>]
  inherited [<choice>]
 }
 config BR2_x86_64_nocona boolean {
  prompt "nocona" if [<choice>]
  inherited [<choice>]
 }
 config BR2_x86_64_core2 boolean {
  prompt "core2" if [<choice>]
  inherited [<choice>]
 }
}
choice boolean {
 prompt "Target Architecture Variant" if [BR2_alpha]
 depends on [BR2_alpha]
 default [BR2_alpha_21064] if [BR2_alpha]
 config BR2_alpha_21064 boolean {
  prompt "21064" if [<choice>]
  inherited [<choice>]
 }
 config BR2_alpha_21164 boolean {
  prompt "21164" if [<choice>]
  inherited [<choice>]
 }
 config BR2_alpha_21164a boolean {
  prompt "21164a" if [<choice>]
  inherited [<choice>]
 }
 config BR2_alpha_21164pc boolean {
  prompt "21164pc" if [<choice>]
  inherited [<choice>]
 }
 config BR2_alpha_21264 boolean {
  prompt "21264" if [<choice>]
  inherited [<choice>]
 }
 config BR2_alpha_21264a boolean {
  prompt "21264a" if [<choice>]
  inherited [<choice>]
 }
}
choice boolean {
 prompt "Target Architecture Variant" if [BR2_sparc]
 depends on [BR2_sparc]
 default [BR2_sparc_v7] if [BR2_sparc]
 config BR2_sparc_v7 boolean {
  prompt "v7" if [<choice>]
  inherited [<choice>]
 }
 config BR2_sparc_cypress boolean {
  prompt "cypress" if [<choice>]
  inherited [<choice>]
 }
 config BR2_sparc_v8 boolean {
  prompt "v8" if [<choice>]
  inherited [<choice>]
 }
 config BR2_sparc_supersparc boolean {
  prompt "supersparc" if [<choice>]
  inherited [<choice>]
 }
 config BR2_sparc_sparclite boolean {
  prompt "sparclite" if [<choice>]
  inherited [<choice>]
 }
 config BR2_sparc_f930 boolean {
  prompt "f930" if [<choice>]
  inherited [<choice>]
 }
 config BR2_sparc_f934 boolean {
  prompt "f934" if [<choice>]
  inherited [<choice>]
 }
 config BR2_sparc_hypersparc boolean {
  prompt "hypersparc" if [<choice>]
  inherited [<choice>]
 }
 config BR2_sparc_sparclite86x boolean {
  prompt "sparclite86x" if [<choice>]
  inherited [<choice>]
 }
 config BR2_sparc_sparclet boolean {
  prompt "sparclet" if [<choice>]
  inherited [<choice>]
 }
 config BR2_sparc_tsc701 boolean {
  prompt "tsc701" if [<choice>]
  inherited [<choice>]
 }
 config BR2_sparc_v9 boolean {
  prompt "v9" if [<choice>]
  inherited [<choice>]
 }
 config BR2_sparc_v9a boolean {
  prompt "v9a" if [<choice>]
  inherited [<choice>]
 }
 config BR2_sparc_v9b boolean {
  prompt "v9b" if [<choice>]
  inherited [<choice>]
 }
 config BR2_sparc_ultrasparc boolean {
  prompt "ultrasparc" if [<choice>]
  inherited [<choice>]
 }
 config BR2_sparc_ultrasparc3 boolean {
  prompt "ultrasparc3" if [<choice>]
  inherited [<choice>]
 }
 config BR2_sparc_niagara boolean {
  prompt "niagara" if [<choice>]
  inherited [<choice>]
 }
}
choice boolean {
 prompt "Target Architecture Variant" if [BR2_sparc64]
 depends on [BR2_sparc64]
 default [BR2_sparc64_v9] if [BR2_sparc64]
 config BR2_sparc64_v9 boolean {
  prompt "v9" if [<choice>]
  inherited [<choice>]
 }
 config BR2_sparc64_v9a boolean {
  prompt "v9a" if [<choice>]
  inherited [<choice>]
 }
 config BR2_sparc64_v9b boolean {
  prompt "v9b" if [<choice>]
  inherited [<choice>]
 }
 config BR2_sparc64_ultrasparc boolean {
  prompt "ultrasparc" if [<choice>]
  inherited [<choice>]
 }
 config BR2_sparc64_ultrasparc3 boolean {
  prompt "ultrasparc3" if [<choice>]
  inherited [<choice>]
 }
 config BR2_sparc64_niagara boolean {
  prompt "niagara" if [<choice>]
  inherited [<choice>]
 }
}
config BR2_SPARC_TYPE string {
 default ["V7"] if [BR2_sparc_v7 || BR2_sparc_cypress || BR2_sparc_sparclite || BR2_sparc_f930 || BR2_sparc_f934 || BR2_sparc_sparclite86x || BR2_sparc_sparclet || BR2_sparc_tsc701]
 default ["V8"] if [BR2_sparc_v8 || BR2_sparc_supersparc || BR2_sparc_hypersparc]
 default ["V9"] if [BR2_sparc_v9 || BR2_sparc_ultrasparc || BR2_sparc_ultrasparc3 || BR2_sparc_niagara || BR2_sparc64_v9 || BR2_sparc64_ultrasparc || BR2_sparc64_ultrasparc3 || BR2_sparc64_niagara]
 default ["V9"] if [BR2_sparc_v9a || BR2_sparc64_v9a]
 default ["V9B"] if [BR2_sparc_v9b || BR2_sparc64_v9b]
}
choice boolean {
 prompt "Target Architecture Variant" if [BR2_ia64]
 depends on [BR2_ia64]
 default [BR2_ia64_itanium2] if [BR2_ia64]
 config BR2_ia64_itanium1 boolean {
  prompt "itanium 1" if [<choice>]
  inherited [<choice>]
 }
 config BR2_ia64_itanium2 boolean {
  prompt "itanium 2" if [<choice>]
  inherited [<choice>]
 }
}
choice boolean {
 prompt "Target Architecture Variant" if [BR2_xtensa]
 depends on [BR2_xtensa]
 default [BR2_xtensa_dc232b] if [BR2_xtensa]
 config BR2_xtensa_custom boolean {
  prompt "Custom Xtensa processor configuration" if [<choice>]
  inherited [<choice>]
 }
 config BR2_xtensa_dc232a boolean {
  prompt "dc232a - Diamond 232L Standard Core Rev.A (LE)" if [<choice>]
  inherited [<choice>]
 }
 config BR2_xtensa_dc232b boolean {
  prompt "dc232b - Diamond 232L Standard Core Rev.B (LE)" if [<choice>]
  inherited [<choice>]
 }
}
config BR2_xtensa_custom_name string {
 prompt "Custom Xtensa processor configuration name" if [BR2_xtensa_custom]
 depends on [BR2_xtensa_custom]
 default [""] if [BR2_xtensa_custom]
 inherited [BR2_xtensa_custom]
}
config BR2_xtensa_core_name string {
 default ["BR2_xtensa_custom_name"] if [BR2_xtensa_custom]
 default ["dc232a"] if [BR2_xtensa_dc232a]
 default ["dc232b"] if [BR2_xtensa_dc232b]
}
choice boolean {
 prompt "Target Architecture Variant" if [BR2_powerpc]
 depends on [BR2_powerpc]
 default [BR2_generic_powerpc] if [BR2_powerpc]
 config BR2_generic_powerpc boolean {
  prompt "generic" if [<choice>]
  inherited [<choice>]
 }
 config BR2_powerpc_401 boolean {
  prompt "401" if [<choice>]
  inherited [<choice>]
 }
 config BR2_powerpc_403 boolean {
  prompt "403" if [<choice>]
  inherited [<choice>]
 }
 config BR2_powerpc_405 boolean {
  prompt "405" if [<choice>]
  inherited [<choice>]
 }
 config BR2_powerpc_405fp boolean {
  prompt "405 with FPU" if [<choice>]
  inherited [<choice>]
 }
 config BR2_powerpc_440 boolean {
  prompt "440" if [<choice>]
  inherited [<choice>]
 }
 config BR2_powerpc_440fp boolean {
  prompt "440 with FPU" if [<choice>]
  inherited [<choice>]
 }
 config BR2_powerpc_505 boolean {
  prompt "505" if [<choice>]
  inherited [<choice>]
 }
 config BR2_powerpc_601 boolean {
  prompt "601" if [<choice>]
  inherited [<choice>]
 }
 config BR2_powerpc_602 boolean {
  prompt "602" if [<choice>]
  inherited [<choice>]
 }
 config BR2_powerpc_603 boolean {
  prompt "603" if [<choice>]
  inherited [<choice>]
 }
 config BR2_powerpc_603e boolean {
  prompt "603e" if [<choice>]
  inherited [<choice>]
 }
 config BR2_powerpc_604 boolean {
  prompt "604" if [<choice>]
  inherited [<choice>]
 }
 config BR2_powerpc_604e boolean {
  prompt "604e" if [<choice>]
  inherited [<choice>]
 }
 config BR2_powerpc_620 boolean {
  prompt "620" if [<choice>]
  inherited [<choice>]
 }
 config BR2_powerpc_630 boolean {
  prompt "630" if [<choice>]
  inherited [<choice>]
 }
 config BR2_powerpc_740 boolean {
  prompt "740" if [<choice>]
  inherited [<choice>]
 }
 config BR2_powerpc_7400 boolean {
  prompt "7400" if [<choice>]
  inherited [<choice>]
 }
 config BR2_powerpc_7450 boolean {
  prompt "7450" if [<choice>]
  inherited [<choice>]
 }
 config BR2_powerpc_750 boolean {
  prompt "750" if [<choice>]
  inherited [<choice>]
 }
 config BR2_powerpc_801 boolean {
  prompt "801" if [<choice>]
  inherited [<choice>]
 }
 config BR2_powerpc_821 boolean {
  prompt "821" if [<choice>]
  inherited [<choice>]
 }
 config BR2_powerpc_823 boolean {
  prompt "823" if [<choice>]
  inherited [<choice>]
 }
 config BR2_powerpc_860 boolean {
  prompt "860" if [<choice>]
  inherited [<choice>]
 }
 config BR2_powerpc_970 boolean {
  prompt "970" if [<choice>]
  inherited [<choice>]
 }
 config BR2_powerpc_8540 boolean {
  prompt "8540" if [<choice>]
  inherited [<choice>]
 }
 config BR2_powerpc_e300c2 boolean {
  prompt "e300c2" if [<choice>]
  inherited [<choice>]
 }
 config BR2_powerpc_e300c3 boolean {
  prompt "e300c3" if [<choice>]
  inherited [<choice>]
 }
 config BR2_powerpc_e500mc boolean {
  prompt "e500mc" if [<choice>]
  inherited [<choice>]
 }
}
config BR2_ARCH string {
 default ["alpha"] if [BR2_alpha]
 default ["arm"] if [BR2_arm]
 default ["armeb"] if [BR2_armeb]
 default ["avr32"] if [BR2_avr32]
 default ["cris"] if [BR2_cris]
 default ["i386"] if [BR2_x86_i386]
 default ["i486"] if [BR2_x86_i486]
 default ["i586"] if [BR2_x86_i586]
 default ["i586"] if [BR2_x86_pentium_mmx]
 default ["i586"] if [BR2_x86_geode]
 default ["i686"] if [BR2_x86_i686]
 default ["i686"] if [BR2_x86_pentium2]
 default ["i686"] if [BR2_x86_pentium3]
 default ["i686"] if [BR2_x86_pentium4]
 default ["i686"] if [BR2_x86_pentium_m]
 default ["i686"] if [BR2_x86_pentiumpro]
 default ["i686"] if [BR2_x86_nocona]
 default ["i686"] if [BR2_x86_core2]
 default ["ia64"] if [BR2_ia64]
 default ["m68k"] if [BR2_m68k]
 default ["mips"] if [BR2_mips]
 default ["mipsel"] if [BR2_mipsel]
 default ["powerpc"] if [BR2_powerpc]
 default ["sh2a_nofpueb"] if [BR2_sh2a_nofpueb]
 default ["sh2eb"] if [BR2_sh2eb]
 default ["sh3"] if [BR2_sh3]
 default ["sh3eb"] if [BR2_sh3eb]
 default ["sh4"] if [BR2_sh4]
 default ["sh4eb"] if [BR2_sh4eb]
 default ["sh64"] if [BR2_sh64]
 default ["sparc"] if [BR2_sparc]
 default ["sparc64"] if [BR2_sparc64]
 default ["x86_64"] if [BR2_x86_64]
 default ["x86_64"] if [BR2_x86_64_generic]
 default ["x86_64"] if [BR2_x86_64_nocona]
 default ["x86_64"] if [BR2_x86_64_core2]
 default ["x86_64"] if [BR2_x86_64_opteron]
 default ["x86_64"] if [BR2_x86_64_opteron_sse3]
 default ["x86_64"] if [BR2_x86_64_barcelona]
 default ["xtensa"] if [BR2_xtensa]
}
config BR2_ENDIAN string {
 default ["LITTLE"] if [BR2_arm || BR2_cris || BR2_i386 || BR2_mipsel || BR2_sh3 || BR2_sh4 || BR2_x86_64 || BR2_sh64]
 default ["BIG"] if [BR2_alpha || BR2_armeb || BR2_avr32 || BR2_m68k || BR2_mips || BR2_powerpc || BR2_sh2a_nofpueb || BR2_sh2eb || BR2_sh3eb || BR2_sh4eb || BR2_sparc || BR2_sparc64]
}
config BR2_GCC_TARGET_TUNE string {
 default ["i386"] if [BR2_x86_i386]
 default ["i486"] if [BR2_x86_i486]
 default ["i586"] if [BR2_x86_i586]
 default ["pentium-mmx"] if [BR2_x86_pentium_mmx]
 default ["i686"] if [BR2_x86_i686]
 default ["pentiumpro"] if [BR2_x86_pentiumpro]
 default ["pentium-m"] if [BR2_x86_pentium_m]
 default ["pentium2"] if [BR2_x86_pentium2]
 default ["pentium3"] if [BR2_x86_pentium3]
 default ["pentium4"] if [BR2_x86_pentium4]
 default ["prescott"] if [BR2_x86_prescott]
 default ["nocona"] if [BR2_x86_nocona]
 default ["core2"] if [BR2_x86_core2]
 default ["k8"] if [BR2_x86_opteron]
 default ["k8-sse3"] if [BR2_x86_opteron_sse3]
 default ["barcelona"] if [BR2_x86_barcelona]
 default ["k6"] if [BR2_x86_k6]
 default ["k6-2"] if [BR2_x86_k6_2]
 default ["athlon"] if [BR2_x86_athlon]
 default ["athlon-4"] if [BR2_x86_athlon_4]
 default ["winchip-c6"] if [BR2_x86_winchip_c6]
 default ["winchip2"] if [BR2_x86_winchip2]
 default ["c3"] if [BR2_x86_c3]
 default ["geode"] if [BR2_x86_geode]
 default ["generic"] if [BR2_x86_64_generic]
 default ["nocona"] if [BR2_x86_64_nocona]
 default ["core2"] if [BR2_x86_64_core2]
 default ["k8"] if [BR2_x86_64_opteron]
 default ["k8-sse3"] if [BR2_x86_64_opteron_sse3]
 default ["barcelona"] if [BR2_x86_64_barcelona]
 default ["arm600"] if [BR2_arm600]
 default ["arm610"] if [BR2_arm610]
 default ["arm620"] if [BR2_arm620]
 default ["arm7tdmi"] if [BR2_arm7tdmi]
 default ["arm7tdmi"] if [BR2_arm720t]
 default ["arm7tdmi"] if [BR2_arm740t]
 default ["arm920"] if [BR2_arm920]
 default ["arm920t"] if [BR2_arm920t]
 default ["arm922t"] if [BR2_arm922t]
 default ["arm926ej-s"] if [BR2_arm926t]
 default ["arm1136j-s"] if [BR2_arm1136j_s]
 default ["arm1136jf-s"] if [BR2_arm1136jf_s]
 default ["arm1176jz-s"] if [BR2_arm1176jz_s]
 default ["arm1176jzf-s"] if [BR2_arm1176jzf_s]
 default ["cortex-a8"] if [BR2_cortex_a8]
 default ["cortex-a9"] if [BR2_cortex_a9]
 default ["strongarm110"] if [BR2_sa110]
 default ["strongarm1100"] if [BR2_sa1100]
 default ["xscale"] if [BR2_xscale]
 default ["iwmmxt"] if [BR2_iwmmxt]
 default ["v0"] if [BR2_cris_unknown]
 default ["v10"] if [BR2_cris_generic]
 default ["v3"] if [BR2_cris_etrax_4]
 default ["v8"] if [BR2_cris_etrax_100]
 default ["v10"] if [BR2_cris_etrax_100lx]
 default ["ev4"] if [BR2_alpha_21064]
 default ["ev5"] if [BR2_alpha_21164]
 default ["ev56"] if [BR2_alpha_21164a]
 default ["pca56"] if [BR2_alpha_21164pc]
 default ["ev6"] if [BR2_alpha_21264]
 default ["ev67"] if [BR2_alpha_21264a]
 default ["68000"] if [BR2_m68k_68000]
 default ["68010"] if [BR2_m68k_68010]
 default ["68020"] if [BR2_m68k_68020]
 default ["68030"] if [BR2_m68k_68030]
 default ["68040"] if [BR2_m68k_68040]
 default ["68060"] if [BR2_m68k_68060]
 default ["mips1"] if [BR2_mips_1]
 default ["mips2"] if [BR2_mips_2]
 default ["mips3"] if [BR2_mips_3]
 default ["mips4"] if [BR2_mips_4]
 default ["mips32"] if [BR2_mips_32]
 default ["mips32r2"] if [BR2_mips_32r2]
 default ["mips64"] if [BR2_mips_64]
 default ["mips64r2"] if [BR2_mips_64r2]
 default ["mips16"] if [BR2_mips_16]
 default ["401"] if [BR2_powerpc_401]
 default ["403"] if [BR2_powerpc_403]
 default ["405"] if [BR2_powerpc_405]
 default ["405fp"] if [BR2_powerpc_405fp]
 default ["440"] if [BR2_powerpc_440]
 default ["440fp"] if [BR2_powerpc_440fp]
 default ["505"] if [BR2_powerpc_505]
 default ["601"] if [BR2_powerpc_601]
 default ["602"] if [BR2_powerpc_602]
 default ["603"] if [BR2_powerpc_603]
 default ["603e"] if [BR2_powerpc_603e]
 default ["604"] if [BR2_powerpc_604]
 default ["604e"] if [BR2_powerpc_604e]
 default ["620"] if [BR2_powerpc_620]
 default ["630"] if [BR2_powerpc_630]
 default ["740"] if [BR2_powerpc_740]
 default ["7400"] if [BR2_powerpc_7400]
 default ["7450"] if [BR2_powerpc_7450]
 default ["750"] if [BR2_powerpc_750]
 default ["801"] if [BR2_powerpc_801]
 default ["821"] if [BR2_powerpc_821]
 default ["823"] if [BR2_powerpc_823]
 default ["860"] if [BR2_powerpc_860]
 default ["970"] if [BR2_powerpc_970]
 default ["8540"] if [BR2_powerpc_8540]
 default ["e300c2"] if [BR2_powerpc_e300c2]
 default ["e300c3"] if [BR2_powerpc_e300c3]
 default ["e500mc"] if [BR2_powerpc_e500mc]
 default ["v7"] if [BR2_sparc_v7]
 default ["cypress"] if [BR2_sparc_cypress]
 default ["v8"] if [BR2_sparc_v8]
 default ["supersparc"] if [BR2_sparc_supersparc]
 default ["hypersparc"] if [BR2_sparc_hypersparc]
 default ["sparclite"] if [BR2_sparc_sparclite]
 default ["f930"] if [BR2_sparc_f930]
 default ["f934"] if [BR2_sparc_f934]
 default ["sparclite86x"] if [BR2_sparc_sparclite86x]
 default ["sparclet"] if [BR2_sparc_sparclet]
 default ["tsc701"] if [BR2_sparc_tsc701]
 default ["v9"] if [BR2_sparc_v9 || BR2_sparc64_v9]
 default ["v9"] if [BR2_sparc_v9a || BR2_sparc64_v9a]
 default ["v9"] if [BR2_sparc_v9b || BR2_sparc64_v9b]
 default ["ultrasparc"] if [BR2_sparc_ultrasparc || BR2_sparc64_ultrasparc]
 default ["ultrasparc3"] if [BR2_sparc_ultrasparc3 || BR2_sparc64_ultrasparc3]
 default ["niagara"] if [BR2_sparc_niagara || BR2_sparc64_niagara]
}
config BR2_GCC_TARGET_ARCH string {
 default ["i386"] if [BR2_x86_i386]
 default ["i486"] if [BR2_x86_i486]
 default ["i586"] if [BR2_x86_i586]
 default ["pentium-mmx"] if [BR2_x86_pentium_mmx]
 default ["i686"] if [BR2_x86_i686]
 default ["pentiumpro"] if [BR2_x86_pentiumpro]
 default ["pentium-m"] if [BR2_x86_pentium_m]
 default ["pentium2"] if [BR2_x86_pentium2]
 default ["pentium3"] if [BR2_x86_pentium3]
 default ["pentium4"] if [BR2_x86_pentium4]
 default ["prescott"] if [BR2_x86_prescott]
 default ["nocona"] if [BR2_x86_nocona]
 default ["core2"] if [BR2_x86_core2]
 default ["k8"] if [BR2_x86_opteron]
 default ["k8-sse3"] if [BR2_x86_opteron_sse3]
 default ["barcelona"] if [BR2_x86_barcelona]
 default ["k6"] if [BR2_x86_k6]
 default ["k6-2"] if [BR2_x86_k6_2]
 default ["athlon"] if [BR2_x86_athlon]
 default ["athlon-4"] if [BR2_x86_athlon_4]
 default ["winchip-c6"] if [BR2_x86_winchip_c6]
 default ["winchip2"] if [BR2_x86_winchip2]
 default ["c3"] if [BR2_x86_c3]
 default ["geode"] if [BR2_x86_geode]
 default ["armv4t"] if [BR2_arm7tdmi]
 default ["armv3"] if [BR2_arm610]
 default ["armv3"] if [BR2_arm710]
 default ["armv4t"] if [BR2_arm720t]
 default ["armv4t"] if [BR2_arm920t]
 default ["armv4t"] if [BR2_arm922t]
 default ["armv5te"] if [BR2_arm926t]
 default ["armv5t"] if [BR2_arm10t]
 default ["armv6j"] if [BR2_arm1136jf_s]
 default ["armv6zk"] if [BR2_arm1176jz_s]
 default ["armv6zk"] if [BR2_arm1176jzf_s]
 default ["armv7-a"] if [BR2_cortex_a8]
 default ["armv7-a"] if [BR2_cortex_a9]
 default ["armv4"] if [BR2_sa110]
 default ["armv4"] if [BR2_sa1100]
 default ["armv5te"] if [BR2_xscale]
 default ["iwmmxt"] if [BR2_iwmmxt]
 default ["v0"] if [BR2_cris_unknown]
 default ["v10"] if [BR2_cris_generic]
 default ["v3"] if [BR2_cris_etrax_4]
 default ["v8"] if [BR2_cris_etrax_100]
 default ["v10"] if [BR2_cris_etrax_100lx]
 default ["68000"] if [BR2_m68k_68000]
 default ["68010"] if [BR2_m68k_68010]
 default ["68020"] if [BR2_m68k_68020]
 default ["68030"] if [BR2_m68k_68030]
 default ["68040"] if [BR2_m68k_68040]
 default ["68060"] if [BR2_m68k_68060]
}
config BR2_GCC_TARGET_ABI string {
 default ["apcs-gnu"] if [BR2_ARM_OABI]
 default ["atpcs"] if [BR2_arm_dunno]
 default ["aapcs"] if [BR2_arm_dunno]
 default ["aapcs-linux"] if [BR2_ARM_EABI]
 default ["32"] if [BR2_MIPS_OABI32]
 default ["n32"] if [BR2_MIPS_ABI32]
 default ["eabi"] if [BR2_MIPS_EABI]
 default ["o64"] if [BR2_MIPS_OABI64]
 default ["n64"] if [BR2_MIPS_ABI64]
 default ["mmixware"] if [BR2_mmix && BR2_MMIX_ABI_native]
 default ["gnu"] if [BR2_mmix && !BR2_MMIX_ABI_native]
 default ["altivec"] if [BR2_powerpc && BR2_PPC_ABI_altivec]
 default ["no-altivec"] if [BR2_powerpc && BR2_PPC_ABI_no-altivec]
 default ["spe"] if [BR2_powerpc && BR2_PPC_ABI_spe]
 default ["no-spe"] if [BR2_powerpc && BR2_PPC_ABI_no-spe]
 default ["ibmlongdouble"] if [BR2_powerpc && BR2_PPC_ABI_ibmlongdouble]
 default ["ieeelongdouble"] if [BR2_powerpc && BR2_PPC_ABI_ieeelongdouble]
}
menu "Target options" {
 menuconfig BR2_TARGET_ARMLTD boolean {
  prompt "ARM Ltd. Device Support" if [BR2_arm]
  depends on [BR2_arm]
  select BR2_ARM_EABI if [BR2_arm]
  select BR2_arm926t if [BR2_arm]
  inherited [BR2_arm]
  if [BR2_TARGET_ARMLTD] {
   choice boolean {
    prompt "Controller board" if [BR2_TARGET_ARMLTD]
    default [BR2_TARGET_ARM_INTEGRATOR_926] if [BR2_TARGET_ARMLTD]
    config BR2_TARGET_ARM_INTEGRATOR_926 boolean {
     prompt "Integrator arm926" if [<choice>]
     inherited [<choice>]
    }
    config BR2_TARGET_ARM_INTEGRATOR_926_HUGE boolean {
     prompt "Integrator arm926 (Huge)" if [<choice>]
     inherited [<choice>]
    }
   }
   config BR2_BOARD_NAME string {
    default ["integrator926"] if [BR2_TARGET_ARMLTD && BR2_TARGET_ARM_INTEGRATOR_926]
    default ["integrator926_huge"] if [BR2_TARGET_ARMLTD && BR2_TARGET_ARM_INTEGRATOR_926_HUGE]
    default ["at91rm9200df"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91RM9200DF]
    default ["at91rm9200se"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91RM9200SE]
    default ["at91rm9200ek"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91RM9200EK]
    default ["at91rm9200dk"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91RM9200DK]
    default ["at91sam9260ek"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9260EK]
    default ["at91sam9260dfc"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9260DFC]
    default ["at91sam9261ek"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9261EK]
    default ["at91sam9262ek"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9262EK]
    default ["at91sam9263ek"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9263EK]
    default ["at91sam9xeek"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9XEEK]
    default ["at91sam9g20ek"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9G20EK]
    default ["at91sam9g20dfc"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9G20DFC]
    default ["at91sam9g45ekes"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9G45EKES]
    default ["at91sam9m10ek"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9M10EK]
    default ["at91sam9m10dfc"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9M10DFC]
    default ["atstk100x"] if [BR2_TARGET_ATMEL && BR2_TARGET_AVR32_ATSTK1002]
    default ["atstk1005"] if [BR2_TARGET_ATMEL && BR2_TARGET_AVR32_ATSTK1005]
    default ["atngw100"] if [BR2_TARGET_ATMEL && BR2_TARGET_AVR32_ATNGW100]
    default ["atngw100-base"] if [BR2_TARGET_ATMEL && BR2_TARGET_AVR32_ATNGW100_BASE]
    default ["atngw100-expanded"] if [BR2_TARGET_ATMEL && BR2_TARGET_AVR32_ATNGW100_EXPANDED]
    default ["kb9202"] if [BR2_TARGET_KWIKBYTE && BR2_TARGET_KB9202]
    default ["v100sc2"] if [BR2_TARGET_VALKA && BR2_TARGET_VALKA_V100SC2]
    default ["i686"] if [BR2_TARGET_X86 && BR2_TARGET_I686]
    inherited [BR2_TARGET_ARMLTD]
   }
   config BR2_BOARD_PATH string {
    prompt "Board Path" if [BR2_TARGET_ARMLTD]
    default ["target/device/ARMLTD/$(BR2_BOARD_NAME)"] if [BR2_TARGET_ARMLTD]
    prompt "Atmel board repository" if [BR2_TARGET_ATMEL && (BR2_TARGET_AT91 || BR2_TARGET_AVR32)]
    depends on [BR2_TARGET_AT91 || BR2_TARGET_AVR32]
    default ["target/device/Atmel/$(BR2_BOARD_NAME)"] if [BR2_TARGET_ATMEL && (BR2_TARGET_AT91 || BR2_TARGET_AVR32)]
    prompt "Board Path" if [BR2_TARGET_KWIKBYTE]
    default ["target/device/KwikByte/$(BR2_BOARD_NAME)"] if [BR2_TARGET_KWIKBYTE]
    prompt "Board Path" if [BR2_TARGET_X86]
    default ["target/device/x86/$(BR2_BOARD_NAME)"] if [BR2_TARGET_X86]
    inherited [BR2_TARGET_ARMLTD]
   }
  }
 }
 menuconfig BR2_TARGET_ATMEL boolean {
  prompt "Atmel Device Support" if [BR2_arm || BR2_avr32]
  depends on [BR2_arm || BR2_avr32]
  inherited [BR2_arm || BR2_avr32]
  if [BR2_TARGET_ATMEL] {
   config BR2_TARGET_AT91 boolean {
    prompt "Board support for the Atmel AT91 range of microprocessors" if [BR2_TARGET_ATMEL && BR2_arm]
    depends on [BR2_arm]
    inherited [BR2_TARGET_ATMEL && BR2_arm]
    config BR2_TARGET_ATMEL_ALL boolean {
     prompt "Allow all ARM targets" if [BR2_TARGET_ATMEL && BR2_TARGET_AT91]
     depends on [BR2_TARGET_AT91]
     default [y] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91]
     inherited [BR2_TARGET_ATMEL && BR2_TARGET_AT91]
     config BR2_TARGET_ATMEL_NET boolean {
      prompt "With network controller" if [BR2_TARGET_ATMEL && BR2_TARGET_AT91 && !BR2_TARGET_ATMEL_ALL]
      depends on [BR2_TARGET_AT91]
      depends on [!BR2_TARGET_ATMEL_ALL]
      default [y] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91 && !BR2_TARGET_ATMEL_ALL]
      inherited [BR2_TARGET_ATMEL && BR2_TARGET_AT91 && !BR2_TARGET_ATMEL_ALL]
     }
     config BR2_TARGET_ATMEL_LCD boolean {
      prompt "With LCD controller" if [BR2_TARGET_ATMEL && BR2_TARGET_AT91 && !BR2_TARGET_ATMEL_ALL]
      depends on [BR2_TARGET_AT91]
      depends on [!BR2_TARGET_ATMEL_ALL]
      inherited [BR2_TARGET_ATMEL && BR2_TARGET_AT91 && !BR2_TARGET_ATMEL_ALL]
     }
     config BR2_TARGET_ATMEL_FPDSP boolean {
      prompt "With Floating Point DSP" if [BR2_TARGET_ATMEL && BR2_TARGET_AT91 && !BR2_TARGET_ATMEL_ALL]
      depends on [BR2_TARGET_AT91]
      depends on [!BR2_TARGET_ATMEL_ALL]
      inherited [BR2_TARGET_ATMEL && BR2_TARGET_AT91 && !BR2_TARGET_ATMEL_ALL]
     }
     config BR2_TARGET_ATMEL_MPB boolean {
      prompt "With customizable MP-Block" if [BR2_TARGET_ATMEL && BR2_TARGET_AT91 && !BR2_TARGET_ATMEL_ALL]
      depends on [BR2_TARGET_AT91]
      depends on [!BR2_TARGET_ATMEL_ALL]
      inherited [BR2_TARGET_ATMEL && BR2_TARGET_AT91 && !BR2_TARGET_ATMEL_ALL]
     }
    }
    choice boolean {
     prompt "AT91 device" if [BR2_TARGET_ATMEL && BR2_TARGET_AT91]
     depends on [BR2_TARGET_AT91]
     default [BR2_TARGET_AT91SAM9260] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91]
     config BR2_TARGET_AT91RM9200 boolean {
      prompt "Atmel AT91RM9200 Microprocessor" if [<choice> && BR2_TARGET_AT91 && !BR2_TARGET_ATMEL_LCD && !BR2_TARGET_ATMEL_FPDSP && !BR2_TARGET_ATMEL_MPB]
      depends on [BR2_TARGET_AT91]
      depends on [!BR2_TARGET_ATMEL_LCD]
      depends on [!BR2_TARGET_ATMEL_FPDSP]
      depends on [!BR2_TARGET_ATMEL_MPB]
      inherited [<choice> && BR2_TARGET_AT91 && !BR2_TARGET_ATMEL_LCD && !BR2_TARGET_ATMEL_FPDSP && !BR2_TARGET_ATMEL_MPB]
     }
     config BR2_TARGET_AT91SAM9260 boolean {
      prompt "Atmel AT91SAM9260 Microprocessor" if [<choice> && BR2_TARGET_AT91 && !BR2_TARGET_ATMEL_LCD && !BR2_TARGET_ATMEL_FPDSP && !BR2_TARGET_ATMEL_MPB]
      depends on [BR2_TARGET_AT91]
      depends on [!BR2_TARGET_ATMEL_LCD]
      depends on [!BR2_TARGET_ATMEL_FPDSP]
      depends on [!BR2_TARGET_ATMEL_MPB]
      inherited [<choice> && BR2_TARGET_AT91 && !BR2_TARGET_ATMEL_LCD && !BR2_TARGET_ATMEL_FPDSP && !BR2_TARGET_ATMEL_MPB]
     }
     config BR2_TARGET_AT91SAM9G20 boolean {
      prompt "Atmel AT91SAM9G20 Microprocessor" if [<choice> && BR2_TARGET_AT91 && !BR2_TARGET_ATMEL_LCD && !BR2_TARGET_ATMEL_FPDSP && !BR2_TARGET_ATMEL_MPB]
      depends on [BR2_TARGET_AT91]
      depends on [!BR2_TARGET_ATMEL_LCD]
      depends on [!BR2_TARGET_ATMEL_FPDSP]
      depends on [!BR2_TARGET_ATMEL_MPB]
      inherited [<choice> && BR2_TARGET_AT91 && !BR2_TARGET_ATMEL_LCD && !BR2_TARGET_ATMEL_FPDSP && !BR2_TARGET_ATMEL_MPB]
     }
     config BR2_TARGET_AT91SAM9261 boolean {
      prompt "Atmel AT91SAM9261 Microprocessor" if [<choice> && BR2_TARGET_AT91 && !BR2_TARGET_ATMEL_NET && !BR2_TARGET_ATMEL_FPDSP && !BR2_TARGET_ATMEL_MPB]
      depends on [BR2_TARGET_AT91]
      depends on [!BR2_TARGET_ATMEL_NET]
      depends on [!BR2_TARGET_ATMEL_FPDSP]
      depends on [!BR2_TARGET_ATMEL_MPB]
      inherited [<choice> && BR2_TARGET_AT91 && !BR2_TARGET_ATMEL_NET && !BR2_TARGET_ATMEL_FPDSP && !BR2_TARGET_ATMEL_MPB]
     }
     config BR2_TARGET_AT91SAM9261S boolean {
      prompt "Atmel AT91SAM9261S Microprocessor" if [<choice> && BR2_TARGET_AT91 && !BR2_TARGET_ATMEL_NET && !BR2_TARGET_ATMEL_FPDSP && !BR2_TARGET_ATMEL_MPB && !BR2_TARGET_AT91_ADVANCED_INFO]
      depends on [BR2_TARGET_AT91]
      depends on [!BR2_TARGET_ATMEL_NET]
      depends on [!BR2_TARGET_ATMEL_FPDSP]
      depends on [!BR2_TARGET_ATMEL_MPB]
      depends on [!BR2_TARGET_AT91_ADVANCED_INFO]
      inherited [<choice> && BR2_TARGET_AT91 && !BR2_TARGET_ATMEL_NET && !BR2_TARGET_ATMEL_FPDSP && !BR2_TARGET_ATMEL_MPB && !BR2_TARGET_AT91_ADVANCED_INFO]
     }
     config BR2_TARGET_AT91SAM9RL64 boolean {
      prompt "Atmel AT91SAM9RL64 Microprocessor" if [<choice> && BR2_TARGET_AT91 && !BR2_TARGET_ATMEL_NET && !BR2_TARGET_ATMEL_FPDSP && !BR2_TARGET_ATMEL_MPB && !BR2_TARGET_AT91_ADVANCED_INFO]
      depends on [BR2_TARGET_AT91]
      depends on [!BR2_TARGET_ATMEL_NET]
      depends on [!BR2_TARGET_ATMEL_FPDSP]
      depends on [!BR2_TARGET_ATMEL_MPB]
      depends on [!BR2_TARGET_AT91_ADVANCED_INFO]
      inherited [<choice> && BR2_TARGET_AT91 && !BR2_TARGET_ATMEL_NET && !BR2_TARGET_ATMEL_FPDSP && !BR2_TARGET_ATMEL_MPB && !BR2_TARGET_AT91_ADVANCED_INFO]
     }
     config BR2_TARGET_AT91SAM9263 boolean {
      prompt "Atmel AT91SAM9263 Microprocessor" if [<choice> && BR2_TARGET_AT91 && !BR2_TARGET_ATMEL_FPDSP && !BR2_TARGET_ATMEL_MPB]
      depends on [BR2_TARGET_AT91]
      depends on [!BR2_TARGET_ATMEL_FPDSP]
      depends on [!BR2_TARGET_ATMEL_MPB]
      inherited [<choice> && BR2_TARGET_AT91 && !BR2_TARGET_ATMEL_FPDSP && !BR2_TARGET_ATMEL_MPB]
     }
     config BR2_TARGET_AT91SAM9G40 boolean {
      prompt "Atmel AT91SAM9G40 Microprocessor" if [<choice> && BR2_TARGET_AT91 && !BR2_TARGET_ATMEL_FPDSP && !BR2_TARGET_ATMEL_MPB && !BR2_TARGET_AT91_ADVANCED_INFO]
      depends on [BR2_TARGET_AT91]
      depends on [!BR2_TARGET_ATMEL_FPDSP]
      depends on [!BR2_TARGET_ATMEL_MPB]
      depends on [!BR2_TARGET_AT91_ADVANCED_INFO]
      inherited [<choice> && BR2_TARGET_AT91 && !BR2_TARGET_ATMEL_FPDSP && !BR2_TARGET_ATMEL_MPB && !BR2_TARGET_AT91_ADVANCED_INFO]
     }
     config BR2_TARGET_AT91SAM9G45 boolean {
      prompt "Atmel AT91SAM9G45 Microprocessor" if [<choice> && BR2_TARGET_AT91 && !BR2_TARGET_ATMEL_FPDSP && !BR2_TARGET_ATMEL_MPB]
      depends on [BR2_TARGET_AT91]
      depends on [!BR2_TARGET_ATMEL_FPDSP]
      depends on [!BR2_TARGET_ATMEL_MPB]
      inherited [<choice> && BR2_TARGET_AT91 && !BR2_TARGET_ATMEL_FPDSP && !BR2_TARGET_ATMEL_MPB]
     }
     config BR2_TARGET_AT91SAM9M10 boolean {
      prompt "Atmel AT91SAM9M10 Microprocessor" if [<choice> && BR2_TARGET_AT91 && !BR2_TARGET_ATMEL_FPDSP && !BR2_TARGET_ATMEL_MPB && !BR2_TARGET_AT91_ADVANCED_INFO]
      depends on [BR2_TARGET_AT91]
      depends on [!BR2_TARGET_ATMEL_FPDSP]
      depends on [!BR2_TARGET_ATMEL_MPB]
      depends on [!BR2_TARGET_AT91_ADVANCED_INFO]
      inherited [<choice> && BR2_TARGET_AT91 && !BR2_TARGET_ATMEL_FPDSP && !BR2_TARGET_ATMEL_MPB && !BR2_TARGET_AT91_ADVANCED_INFO]
     }
     config BR2_TARGET_AT91SAM9M11 boolean {
      prompt "Atmel AT91SAM9M11 Microprocessor" if [<choice> && BR2_TARGET_AT91 && !BR2_TARGET_ATMEL_FPDSP && !BR2_TARGET_ATMEL_MPB && !BR2_TARGET_AT91_ADVANCED_INFO]
      depends on [BR2_TARGET_AT91]
      depends on [!BR2_TARGET_ATMEL_FPDSP]
      depends on [!BR2_TARGET_ATMEL_MPB]
      depends on [!BR2_TARGET_AT91_ADVANCED_INFO]
      inherited [<choice> && BR2_TARGET_AT91 && !BR2_TARGET_ATMEL_FPDSP && !BR2_TARGET_ATMEL_MPB && !BR2_TARGET_AT91_ADVANCED_INFO]
     }
     config BR2_TARGET_AT91SAM9XE boolean {
      prompt "Atmel AT91SAM9XE Microprocessors" if [<choice> && BR2_TARGET_AT91 && !BR2_TARGET_ATMEL_LCD && !BR2_TARGET_ATMEL_FPDSP && !BR2_TARGET_ATMEL_MPB && !BR2_TARGET_AT91_ADVANCED_INFO]
      depends on [BR2_TARGET_AT91]
      depends on [!BR2_TARGET_ATMEL_LCD]
      depends on [!BR2_TARGET_ATMEL_FPDSP]
      depends on [!BR2_TARGET_ATMEL_MPB]
      depends on [!BR2_TARGET_AT91_ADVANCED_INFO]
      inherited [<choice> && BR2_TARGET_AT91 && !BR2_TARGET_ATMEL_LCD && !BR2_TARGET_ATMEL_FPDSP && !BR2_TARGET_ATMEL_MPB && !BR2_TARGET_AT91_ADVANCED_INFO]
     }
     config BR2_TARGET_AT572D940HF boolean {
      prompt "Atmel AT572D940HF Microprocessor" if [<choice> && BR2_TARGET_AT91 && !BR2_TARGET_ATMEL_LCD && !BR2_TARGET_ATMEL_MPB && !BR2_TARGET_AT91_ADVANCED_INFO]
      depends on [BR2_TARGET_AT91]
      depends on [!BR2_TARGET_ATMEL_LCD]
      depends on [!BR2_TARGET_ATMEL_MPB]
      depends on [!BR2_TARGET_AT91_ADVANCED_INFO]
      inherited [<choice> && BR2_TARGET_AT91 && !BR2_TARGET_ATMEL_LCD && !BR2_TARGET_ATMEL_MPB && !BR2_TARGET_AT91_ADVANCED_INFO]
     }
     config BR2_TARGET_AT91CAP9 boolean {
      prompt "Atmel AT91CAP9 Microprocessor" if [<choice> && BR2_TARGET_AT91 && !BR2_TARGET_ATMEL_FPDSP && !BR2_TARGET_AT91_ADVANCED_INFO]
      depends on [BR2_TARGET_AT91]
      depends on [!BR2_TARGET_ATMEL_FPDSP]
      depends on [!BR2_TARGET_AT91_ADVANCED_INFO]
      inherited [<choice> && BR2_TARGET_AT91 && !BR2_TARGET_ATMEL_FPDSP && !BR2_TARGET_AT91_ADVANCED_INFO]
     }
    }
    choice boolean {
     prompt "Development Board support" if [BR2_TARGET_ATMEL && BR2_TARGET_AT91]
     depends on [BR2_TARGET_AT91]
     default [BR2_TARGET_AT91SAM9260DFC] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91]
     config BR2_TARGET_AT91RM9200DF boolean {
      prompt "Atmel AT91RM9200 Generic Dataflash(Card) Board Support" if [<choice> && BR2_TARGET_AT91RM9200]
      depends on [BR2_TARGET_AT91RM9200]
      select BR2_BOOTSOURCE_DATAFLASHCARD if [<choice> && BR2_TARGET_AT91RM9200]
      inherited [<choice> && BR2_TARGET_AT91RM9200]
     }
     config BR2_TARGET_AT91RM9200EK boolean {
      prompt "Atmel AT91RM9200EK Development Board Support" if [<choice> && BR2_TARGET_AT91RM9200]
      depends on [BR2_TARGET_AT91RM9200]
      select BR2_BOOTSOURCE_DATAFLASHCARD if [<choice> && BR2_TARGET_AT91RM9200]
      select BR2_BOOTSOURCE_FLASH if [<choice> && BR2_TARGET_AT91RM9200]
      inherited [<choice> && BR2_TARGET_AT91RM9200]
     }
     config BR2_TARGET_AT91RM9200DK boolean {
      prompt "Atmel AT91RM9200DK Development Board Support" if [<choice> && BR2_TARGET_AT91RM9200]
      depends on [BR2_TARGET_AT91RM9200]
      select BR2_BOOTSOURCE_DATAFLASH if [<choice> && BR2_TARGET_AT91RM9200]
      select BR2_BOOTSOURCE_FLASH if [<choice> && BR2_TARGET_AT91RM9200]
      inherited [<choice> && BR2_TARGET_AT91RM9200]
     }
     config BR2_TARGET_AT91SAM9260DFC boolean {
      prompt "Atmel AT91SAM9260DFC" if [<choice> && (BR2_TARGET_AT91SAM9260 || BR2_TARGET_AT91SAM9XE)]
      depends on [BR2_TARGET_AT91SAM9260 || BR2_TARGET_AT91SAM9XE]
      select BR2_BOOTSOURCE_DATAFLASHCARD if [<choice> && (BR2_TARGET_AT91SAM9260 || BR2_TARGET_AT91SAM9XE)]
      select BR2_BOOTSOURCE_DATAFLASH if [<choice> && (BR2_TARGET_AT91SAM9260 || BR2_TARGET_AT91SAM9XE)]
      inherited [<choice> && (BR2_TARGET_AT91SAM9260 || BR2_TARGET_AT91SAM9XE)]
     }
     config BR2_TARGET_AT91SAM9260EK boolean {
      prompt "Atmel AT91SAM9260EK" if [<choice> && (BR2_TARGET_AT91SAM9260 || BR2_TARGET_AT91SAM9XE)]
      depends on [BR2_TARGET_AT91SAM9260 || BR2_TARGET_AT91SAM9XE]
      select BR2_BOOTSOURCE_DATAFLASHCARD if [<choice> && (BR2_TARGET_AT91SAM9260 || BR2_TARGET_AT91SAM9XE)]
      select BR2_BOOTSOURCE_DATAFLASH if [<choice> && (BR2_TARGET_AT91SAM9260 || BR2_TARGET_AT91SAM9XE)]
      select BR2_BOOTSOURCE_NANDFLASH if [<choice> && (BR2_TARGET_AT91SAM9260 || BR2_TARGET_AT91SAM9XE)]
      inherited [<choice> && (BR2_TARGET_AT91SAM9260 || BR2_TARGET_AT91SAM9XE)]
     }
     config BR2_TARGET_AT91SAM9G20DFC boolean {
      prompt "Atmel AT91SAM9G20DFC" if [<choice> && BR2_TARGET_AT91SAM9G20]
      depends on [BR2_TARGET_AT91SAM9G20]
      select BR2_BOOTSOURCE_DATAFLASHCARD if [<choice> && BR2_TARGET_AT91SAM9G20]
      inherited [<choice> && BR2_TARGET_AT91SAM9G20]
     }
     config BR2_TARGET_AT91SAM9G20EK boolean {
      prompt "Atmel AT91SAM9G20EK" if [<choice> && BR2_TARGET_AT91SAM9G20]
      depends on [BR2_TARGET_AT91SAM9G20]
      select BR2_BOOTSOURCE_DATAFLASHCARD if [<choice> && BR2_TARGET_AT91SAM9G20]
      select BR2_BOOTSOURCE_DATAFLASH if [<choice> && BR2_TARGET_AT91SAM9G20]
      select BR2_BOOTSOURCE_NANDFLASH if [<choice> && BR2_TARGET_AT91SAM9G20]
      inherited [<choice> && BR2_TARGET_AT91SAM9G20]
     }
     config BR2_TARGET_AT91SAM9XEEK boolean {
      prompt "Atmel AT91SAM9XE-EK" if [<choice> && (BR2_TARGET_AT91SAM9260 || BR2_TARGET_AT91SAM9XE)]
      depends on [BR2_TARGET_AT91SAM9260 || BR2_TARGET_AT91SAM9XE]
      select BR2_BOOTSOURCE_DATAFLASHCARD if [<choice> && (BR2_TARGET_AT91SAM9260 || BR2_TARGET_AT91SAM9XE)]
      select BR2_BOOTSOURCE_DATAFLASH if [<choice> && (BR2_TARGET_AT91SAM9260 || BR2_TARGET_AT91SAM9XE)]
      select BR2_BOOTSOURCE_NANDFLASH if [<choice> && (BR2_TARGET_AT91SAM9260 || BR2_TARGET_AT91SAM9XE)]
      inherited [<choice> && (BR2_TARGET_AT91SAM9260 || BR2_TARGET_AT91SAM9XE)]
     }
     config BR2_TARGET_AT91SAM9261EK boolean {
      prompt "Atmel AT91SAM9261EK" if [<choice> && (BR2_TARGET_AT91SAM9261 || BR2_TARGET_AT91SAM9261S)]
      depends on [BR2_TARGET_AT91SAM9261 || BR2_TARGET_AT91SAM9261S]
      select BR2_BOOTSOURCE_DATAFLASH if [<choice> && (BR2_TARGET_AT91SAM9261 || BR2_TARGET_AT91SAM9261S)]
      select BR2_BOOTSOURCE_NANDFLASH if [<choice> && (BR2_TARGET_AT91SAM9261 || BR2_TARGET_AT91SAM9261S)]
      inherited [<choice> && (BR2_TARGET_AT91SAM9261 || BR2_TARGET_AT91SAM9261S)]
     }
     config BR2_TARGET_AT91SAM9RL64EK boolean {
      prompt "Atmel AT91SAM9RL64EK" if [<choice> && BR2_TARGET_AT91SAM9RL64]
      depends on [BR2_TARGET_AT91SAM9RL64]
      select BR2_BOOTSOURCE_DATAFLASHCARD if [<choice> && BR2_TARGET_AT91SAM9RL64]
      select BR2_BOOTSOURCE_DATAFLASH if [<choice> && BR2_TARGET_AT91SAM9RL64]
      select BR2_BOOTSOURCE_NANDFLASH if [<choice> && BR2_TARGET_AT91SAM9RL64]
      select BR2_BOOTSOURCE_SDCARD if [<choice> && BR2_TARGET_AT91SAM9RL64]
      inherited [<choice> && BR2_TARGET_AT91SAM9RL64]
     }
     config BR2_TARGET_AT91SAM9263EK boolean {
      prompt "Atmel AT91SAM9263EK" if [<choice> && BR2_TARGET_AT91SAM9263]
      depends on [BR2_TARGET_AT91SAM9263]
      select BR2_BOOTSOURCE_DATAFLASHCARD if [<choice> && BR2_TARGET_AT91SAM9263]
      select BR2_BOOTSOURCE_NANDFLASH if [<choice> && BR2_TARGET_AT91SAM9263]
      inherited [<choice> && BR2_TARGET_AT91SAM9263]
     }
     config BR2_TARGET_AT91SAM9G45EKES boolean {
      prompt "Atmel AT91SAM9G45EKES" if [<choice> && BR2_TARGET_AT91SAM9G45]
      depends on [BR2_TARGET_AT91SAM9G45]
      select BR2_BOOTSOURCE_DATAFLASHCARD if [<choice> && BR2_TARGET_AT91SAM9G45]
      select BR2_BOOTSOURCE_NANDFLASH if [<choice> && BR2_TARGET_AT91SAM9G45]
      inherited [<choice> && BR2_TARGET_AT91SAM9G45]
     }
     config BR2_TARGET_AT572D940DCM boolean {
      prompt "Atmel AT572D940 Diopsis Computer Module" if [<choice> && BR2_TARGET_AT572D940HF]
      depends on [BR2_TARGET_AT572D940HF]
      select BR2_BOOTSOURCE_FLASH if [<choice> && BR2_TARGET_AT572D940HF]
      select BR2_BOOTSOURCE_SDCARD if [<choice> && BR2_TARGET_AT572D940HF]
      inherited [<choice> && BR2_TARGET_AT572D940HF]
     }
     config BR2_TARGET_AT91CAP9DK boolean {
      prompt "Atmel AT91CAP9DK" if [<choice> && BR2_TARGET_AT91CAP9]
      depends on [BR2_TARGET_AT91CAP9]
      select BR2_BOOTSOURCE_DATAFLASHCARD if [<choice> && BR2_TARGET_AT91CAP9]
      select BR2_BOOTSOURCE_DATAFLASH if [<choice> && BR2_TARGET_AT91CAP9]
      select BR2_BOOTSOURCE_NANDFLASH if [<choice> && BR2_TARGET_AT91CAP9]
      inherited [<choice> && BR2_TARGET_AT91CAP9]
     }
     config BR2_TARGET_AT91CAP9ADK boolean {
      prompt "Atmel AT91CAP9ADK" if [<choice> && BR2_TARGET_AT91CAP9]
      depends on [BR2_TARGET_AT91CAP9]
      select BR2_BOOTSOURCE_DATAFLASHCARD if [<choice> && BR2_TARGET_AT91CAP9]
      select BR2_BOOTSOURCE_DATAFLASH if [<choice> && BR2_TARGET_AT91CAP9]
      select BR2_BOOTSOURCE_NANDFLASH if [<choice> && BR2_TARGET_AT91CAP9]
      inherited [<choice> && BR2_TARGET_AT91CAP9]
     }
    }
   }
   choice boolean {
    prompt "SPI Mode" if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9261EK]
    depends on [BR2_TARGET_AT91SAM9261EK]
    default [BR2_TARGET_AT91SAM9261EK_SPIMODE0] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9261EK]
    config BR2_TARGET_AT91SAM9261EK_SPIMODE0 boolean {
     prompt "SPI Mode 0" if [<choice> && BR2_TARGET_AT91SAM9261EK]
     depends on [BR2_TARGET_AT91SAM9261EK]
     inherited [<choice> && BR2_TARGET_AT91SAM9261EK]
    }
    config BR2_TARGET_AT91SAM9261EK_SPIMODE3 boolean {
     prompt "SPI Mode 3" if [<choice> && BR2_TARGET_AT91SAM9261EK]
     depends on [BR2_TARGET_AT91SAM9261EK]
     inherited [<choice> && BR2_TARGET_AT91SAM9261EK]
    }
   }
   config BR2_TARGET_AVR32 boolean {
    prompt "Board support for the Atmel AP7 microprocessors" if [BR2_TARGET_ATMEL && BR2_avr32]
    depends on [BR2_avr32]
    inherited [BR2_TARGET_ATMEL && BR2_avr32]
    choice boolean {
     prompt "AVR32 device" if [BR2_TARGET_ATMEL && BR2_TARGET_AVR32]
     depends on [BR2_TARGET_AVR32]
     default [BR2_TARGET_AT32AP7000] if [BR2_TARGET_ATMEL && BR2_TARGET_AVR32]
     config BR2_TARGET_AT32AP7000 boolean {
      prompt "Board support for the Atmel AT32AP7000 Microprocessor" if [<choice> && BR2_TARGET_AVR32]
      depends on [BR2_TARGET_AVR32]
      inherited [<choice> && BR2_TARGET_AVR32]
     }
     config BR2_TARGET_AT32AP7001 boolean {
      prompt "Board support for the Atmel AT32AP7001 Microprocessor" if [<choice> && BR2_TARGET_AVR32]
      depends on [BR2_TARGET_AVR32]
      inherited [<choice> && BR2_TARGET_AVR32]
     }
     config BR2_TARGET_AT32AP7002 boolean {
      prompt "Board support for the Atmel AT32AP7002 Microprocessor" if [<choice> && BR2_TARGET_AVR32]
      depends on [BR2_TARGET_AVR32]
      inherited [<choice> && BR2_TARGET_AVR32]
     }
     config BR2_TARGET_AT32AP7200 boolean {
      prompt "Board support for the Atmel AT32AP7200 Microprocessor" if [<choice> && BR2_TARGET_AVR32]
      depends on [BR2_TARGET_AVR32]
      inherited [<choice> && BR2_TARGET_AVR32]
     }
    }
    choice boolean {
     prompt "Development board support" if [BR2_TARGET_ATMEL && BR2_TARGET_AVR32]
     depends on [BR2_TARGET_AVR32]
     default [BR2_TARGET_AVR32_ATSTK1000] if [BR2_TARGET_ATMEL && BR2_TARGET_AVR32]
     config BR2_TARGET_AVR32_ATSTK1002 boolean {
      prompt "Atmel ATSTK1000/2 AVR32 development board support" if [<choice> && BR2_TARGET_AT32AP7000]
      depends on [BR2_TARGET_AT32AP7000]
      select BR2_PACKAGE_LINUX if [<choice> && BR2_TARGET_AT32AP7000]
      inherited [<choice> && BR2_TARGET_AT32AP7000]
     }
     config BR2_TARGET_AVR32_ATSTK1005 boolean {
      prompt "Atmel ATSTK1000/5 AVR32 development board support" if [<choice> && BR2_TARGET_AT32AP7200]
      depends on [BR2_TARGET_AT32AP7200]
      select BR2_PACKAGE_LINUX if [<choice> && BR2_TARGET_AT32AP7200]
      inherited [<choice> && BR2_TARGET_AT32AP7200]
     }
     config BR2_TARGET_AVR32_ATNGW100 boolean {
      prompt "Atmel AVR32 network gateway board support" if [<choice> && BR2_TARGET_AT32AP7000]
      depends on [BR2_TARGET_AT32AP7000]
      select BR2_PACKAGE_LINUX if [<choice> && BR2_TARGET_AT32AP7000]
      inherited [<choice> && BR2_TARGET_AT32AP7000]
     }
     config BR2_TARGET_AVR32_ATNGW100_BASE boolean {
      prompt "Atmel AVR32 basic network gateway board support" if [<choice> && BR2_TARGET_AT32AP7000]
      depends on [BR2_TARGET_AT32AP7000]
      select BR2_PACKAGE_LINUX if [<choice> && BR2_TARGET_AT32AP7000]
      inherited [<choice> && BR2_TARGET_AT32AP7000]
     }
    }
   }
   config BR2_BOARD_NAME string {
    default ["integrator926"] if [BR2_TARGET_ARMLTD && BR2_TARGET_ARM_INTEGRATOR_926]
    default ["integrator926_huge"] if [BR2_TARGET_ARMLTD && BR2_TARGET_ARM_INTEGRATOR_926_HUGE]
    default ["at91rm9200df"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91RM9200DF]
    default ["at91rm9200se"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91RM9200SE]
    default ["at91rm9200ek"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91RM9200EK]
    default ["at91rm9200dk"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91RM9200DK]
    default ["at91sam9260ek"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9260EK]
    default ["at91sam9260dfc"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9260DFC]
    default ["at91sam9261ek"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9261EK]
    default ["at91sam9262ek"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9262EK]
    default ["at91sam9263ek"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9263EK]
    default ["at91sam9xeek"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9XEEK]
    default ["at91sam9g20ek"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9G20EK]
    default ["at91sam9g20dfc"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9G20DFC]
    default ["at91sam9g45ekes"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9G45EKES]
    default ["at91sam9m10ek"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9M10EK]
    default ["at91sam9m10dfc"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9M10DFC]
    default ["atstk100x"] if [BR2_TARGET_ATMEL && BR2_TARGET_AVR32_ATSTK1002]
    default ["atstk1005"] if [BR2_TARGET_ATMEL && BR2_TARGET_AVR32_ATSTK1005]
    default ["atngw100"] if [BR2_TARGET_ATMEL && BR2_TARGET_AVR32_ATNGW100]
    default ["atngw100-base"] if [BR2_TARGET_ATMEL && BR2_TARGET_AVR32_ATNGW100_BASE]
    default ["atngw100-expanded"] if [BR2_TARGET_ATMEL && BR2_TARGET_AVR32_ATNGW100_EXPANDED]
    default ["kb9202"] if [BR2_TARGET_KWIKBYTE && BR2_TARGET_KB9202]
    default ["v100sc2"] if [BR2_TARGET_VALKA && BR2_TARGET_VALKA_V100SC2]
    default ["i686"] if [BR2_TARGET_X86 && BR2_TARGET_I686]
    inherited [BR2_TARGET_ATMEL]
   }
   config BR2_TARGET_AT91_ADVANCED_INFO boolean {
    prompt "Remove work in progress" if [BR2_TARGET_ATMEL && BR2_TARGET_AT91]
    depends on [BR2_TARGET_AT91]
    default [y] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91]
    inherited [BR2_TARGET_ATMEL && BR2_TARGET_AT91]
   }
   menu "Secondary locations" {
    depends on [BR2_TARGET_ATMEL]
    config BR2_AT91_LINUXPATCH_SITE string {
     prompt "AT91 Linux Patch mirror site" if [BR2_TARGET_ATMEL && BR2_TARGET_AT91]
     depends on [BR2_TARGET_AT91]
     default ["http://maxim.org.za/AT91RM9200/2.6"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91]
     prompt "AT91 Linux Patch mirror site" if [BR2_TARGET_KWIKBYTE]
     default ["http://maxim.org.za/AT91RM9200/2.6"] if [BR2_TARGET_KWIKBYTE]
     inherited [BR2_TARGET_ATMEL && BR2_TARGET_AT91]
    }
    config BR2_BOARD_PATH string {
     prompt "Board Path" if [BR2_TARGET_ARMLTD]
     default ["target/device/ARMLTD/$(BR2_BOARD_NAME)"] if [BR2_TARGET_ARMLTD]
     prompt "Atmel board repository" if [BR2_TARGET_ATMEL && (BR2_TARGET_AT91 || BR2_TARGET_AVR32)]
     depends on [BR2_TARGET_AT91 || BR2_TARGET_AVR32]
     default ["target/device/Atmel/$(BR2_BOARD_NAME)"] if [BR2_TARGET_ATMEL && (BR2_TARGET_AT91 || BR2_TARGET_AVR32)]
     prompt "Board Path" if [BR2_TARGET_KWIKBYTE]
     default ["target/device/KwikByte/$(BR2_BOARD_NAME)"] if [BR2_TARGET_KWIKBYTE]
     prompt "Board Path" if [BR2_TARGET_X86]
     default ["target/device/x86/$(BR2_BOARD_NAME)"] if [BR2_TARGET_X86]
     inherited [BR2_TARGET_ATMEL && (BR2_TARGET_AT91 || BR2_TARGET_AVR32)]
    }
   }
  }
 }
 menuconfig BR2_TARGET_KWIKBYTE boolean {
  prompt "KwikByte Board Support" if [BR2_arm]
  depends on [BR2_arm]
  inherited [BR2_arm]
  if [BR2_TARGET_KWIKBYTE] {
   choice boolean {
    prompt "KwikByte target board" if [BR2_TARGET_KWIKBYTE]
    default [BR2_TARGET_KB9202] if [BR2_TARGET_KWIKBYTE]
    config BR2_TARGET_KB9202 boolean {
     prompt "Board support for the KwikByte 9202 Evaluation Board" if [<choice> && (BR2_arm920t || BR2_generic_arm)]
     depends on [BR2_arm920t || BR2_generic_arm]
     inherited [<choice> && (BR2_arm920t || BR2_generic_arm)]
    }
   }
   config BR2_BOARD_NAME string {
    default ["integrator926"] if [BR2_TARGET_ARMLTD && BR2_TARGET_ARM_INTEGRATOR_926]
    default ["integrator926_huge"] if [BR2_TARGET_ARMLTD && BR2_TARGET_ARM_INTEGRATOR_926_HUGE]
    default ["at91rm9200df"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91RM9200DF]
    default ["at91rm9200se"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91RM9200SE]
    default ["at91rm9200ek"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91RM9200EK]
    default ["at91rm9200dk"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91RM9200DK]
    default ["at91sam9260ek"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9260EK]
    default ["at91sam9260dfc"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9260DFC]
    default ["at91sam9261ek"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9261EK]
    default ["at91sam9262ek"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9262EK]
    default ["at91sam9263ek"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9263EK]
    default ["at91sam9xeek"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9XEEK]
    default ["at91sam9g20ek"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9G20EK]
    default ["at91sam9g20dfc"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9G20DFC]
    default ["at91sam9g45ekes"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9G45EKES]
    default ["at91sam9m10ek"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9M10EK]
    default ["at91sam9m10dfc"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9M10DFC]
    default ["atstk100x"] if [BR2_TARGET_ATMEL && BR2_TARGET_AVR32_ATSTK1002]
    default ["atstk1005"] if [BR2_TARGET_ATMEL && BR2_TARGET_AVR32_ATSTK1005]
    default ["atngw100"] if [BR2_TARGET_ATMEL && BR2_TARGET_AVR32_ATNGW100]
    default ["atngw100-base"] if [BR2_TARGET_ATMEL && BR2_TARGET_AVR32_ATNGW100_BASE]
    default ["atngw100-expanded"] if [BR2_TARGET_ATMEL && BR2_TARGET_AVR32_ATNGW100_EXPANDED]
    default ["kb9202"] if [BR2_TARGET_KWIKBYTE && BR2_TARGET_KB9202]
    default ["v100sc2"] if [BR2_TARGET_VALKA && BR2_TARGET_VALKA_V100SC2]
    default ["i686"] if [BR2_TARGET_X86 && BR2_TARGET_I686]
    inherited [BR2_TARGET_KWIKBYTE]
   }
   choice boolean {
    prompt "Add AT91 specific patches" if [BR2_TARGET_KWIKBYTE && BR2_KERNEL_ARCH_PATCH_ENABLED && BR2_arm]
    depends on [BR2_KERNEL_ARCH_PATCH_ENABLED]
    depends on [BR2_arm]
    default [BR2_ARCH_AT91_2_6_24_KB] if [BR2_TARGET_KWIKBYTE && BR2_KERNEL_ARCH_PATCH_ENABLED && BR2_arm && BR2_LINUX_2_6_24]
    config BR2_ARCH_AT91_2_6_24_KB boolean {
     prompt "2.6.24" if [<choice>]
     inherited [<choice>]
    }
   }
   config BR2_KERNEL_ARCH_PATCH_VERSION string {
    depends on [BR2_KERNEL_ARCH_PATCH_ENABLED]
    depends on [BR2_arm]
    default ["2.6.24"] if [BR2_TARGET_KWIKBYTE && BR2_KERNEL_ARCH_PATCH_ENABLED && BR2_arm && BR2_ARCH_AT91_2_6_24_KB]
    inherited [BR2_TARGET_KWIKBYTE && BR2_KERNEL_ARCH_PATCH_ENABLED && BR2_arm]
   }
   config BR2_KERNEL_ARCH_PATCH_DIR string {
    default ["target/device/Atmel/arch-arm/kernel-patches-$(BR2_KERNEL_ARCH_PATCH_VERSION)"] if [BR2_TARGET_KWIKBYTE]
    inherited [BR2_TARGET_KWIKBYTE]
   }
   config BR2_BOARD_PATH string {
    prompt "Board Path" if [BR2_TARGET_ARMLTD]
    default ["target/device/ARMLTD/$(BR2_BOARD_NAME)"] if [BR2_TARGET_ARMLTD]
    prompt "Atmel board repository" if [BR2_TARGET_ATMEL && (BR2_TARGET_AT91 || BR2_TARGET_AVR32)]
    depends on [BR2_TARGET_AT91 || BR2_TARGET_AVR32]
    default ["target/device/Atmel/$(BR2_BOARD_NAME)"] if [BR2_TARGET_ATMEL && (BR2_TARGET_AT91 || BR2_TARGET_AVR32)]
    prompt "Board Path" if [BR2_TARGET_KWIKBYTE]
    default ["target/device/KwikByte/$(BR2_BOARD_NAME)"] if [BR2_TARGET_KWIKBYTE]
    prompt "Board Path" if [BR2_TARGET_X86]
    default ["target/device/x86/$(BR2_BOARD_NAME)"] if [BR2_TARGET_X86]
    inherited [BR2_TARGET_KWIKBYTE]
   }
   config BR2_AT91_LINUXPATCH_SITE string {
    prompt "AT91 Linux Patch mirror site" if [BR2_TARGET_ATMEL && BR2_TARGET_AT91]
    depends on [BR2_TARGET_AT91]
    default ["http://maxim.org.za/AT91RM9200/2.6"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91]
    prompt "AT91 Linux Patch mirror site" if [BR2_TARGET_KWIKBYTE]
    default ["http://maxim.org.za/AT91RM9200/2.6"] if [BR2_TARGET_KWIKBYTE]
    inherited [BR2_TARGET_KWIKBYTE]
   }
  }
 }
 menuconfig BR2_TARGET_VALKA boolean {
  prompt "ValkaSys" if [BR2_avr32]
  depends on [BR2_avr32]
  inherited [BR2_avr32]
  if [BR2_TARGET_VALKA] {
   choice boolean {
    prompt "Controller board" if [BR2_TARGET_VALKA]
    depends on [BR2_TARGET_VALKA]
    config BR2_TARGET_VALKA_V100SC2 boolean {
     prompt "V100SC2 (Based on NGW100)" if [<choice> && BR2_TARGET_VALKA]
     depends on [BR2_TARGET_VALKA]
     inherited [<choice> && BR2_TARGET_VALKA]
    }
   }
   config BR2_BOARD_NAME string {
    default ["integrator926"] if [BR2_TARGET_ARMLTD && BR2_TARGET_ARM_INTEGRATOR_926]
    default ["integrator926_huge"] if [BR2_TARGET_ARMLTD && BR2_TARGET_ARM_INTEGRATOR_926_HUGE]
    default ["at91rm9200df"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91RM9200DF]
    default ["at91rm9200se"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91RM9200SE]
    default ["at91rm9200ek"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91RM9200EK]
    default ["at91rm9200dk"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91RM9200DK]
    default ["at91sam9260ek"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9260EK]
    default ["at91sam9260dfc"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9260DFC]
    default ["at91sam9261ek"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9261EK]
    default ["at91sam9262ek"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9262EK]
    default ["at91sam9263ek"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9263EK]
    default ["at91sam9xeek"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9XEEK]
    default ["at91sam9g20ek"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9G20EK]
    default ["at91sam9g20dfc"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9G20DFC]
    default ["at91sam9g45ekes"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9G45EKES]
    default ["at91sam9m10ek"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9M10EK]
    default ["at91sam9m10dfc"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9M10DFC]
    default ["atstk100x"] if [BR2_TARGET_ATMEL && BR2_TARGET_AVR32_ATSTK1002]
    default ["atstk1005"] if [BR2_TARGET_ATMEL && BR2_TARGET_AVR32_ATSTK1005]
    default ["atngw100"] if [BR2_TARGET_ATMEL && BR2_TARGET_AVR32_ATNGW100]
    default ["atngw100-base"] if [BR2_TARGET_ATMEL && BR2_TARGET_AVR32_ATNGW100_BASE]
    default ["atngw100-expanded"] if [BR2_TARGET_ATMEL && BR2_TARGET_AVR32_ATNGW100_EXPANDED]
    default ["kb9202"] if [BR2_TARGET_KWIKBYTE && BR2_TARGET_KB9202]
    default ["v100sc2"] if [BR2_TARGET_VALKA && BR2_TARGET_VALKA_V100SC2]
    default ["i686"] if [BR2_TARGET_X86 && BR2_TARGET_I686]
    inherited [BR2_TARGET_VALKA]
   }
  }
 }
 menuconfig BR2_TARGET_X86 boolean {
  prompt "Generic x86 Device Support" if [BR2_i386]
  depends on [BR2_i386]
  inherited [BR2_i386]
  if [BR2_TARGET_X86] {
   choice boolean {
    prompt "Pentium (or later) Controller board" if [BR2_TARGET_X86]
    config BR2_TARGET_I686 boolean {
     prompt "i686" if [<choice> && BR2_i386]
     depends on [BR2_i386]
     inherited [<choice> && BR2_i386]
    }
   }
   config BR2_BOARD_NAME string {
    default ["integrator926"] if [BR2_TARGET_ARMLTD && BR2_TARGET_ARM_INTEGRATOR_926]
    default ["integrator926_huge"] if [BR2_TARGET_ARMLTD && BR2_TARGET_ARM_INTEGRATOR_926_HUGE]
    default ["at91rm9200df"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91RM9200DF]
    default ["at91rm9200se"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91RM9200SE]
    default ["at91rm9200ek"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91RM9200EK]
    default ["at91rm9200dk"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91RM9200DK]
    default ["at91sam9260ek"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9260EK]
    default ["at91sam9260dfc"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9260DFC]
    default ["at91sam9261ek"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9261EK]
    default ["at91sam9262ek"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9262EK]
    default ["at91sam9263ek"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9263EK]
    default ["at91sam9xeek"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9XEEK]
    default ["at91sam9g20ek"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9G20EK]
    default ["at91sam9g20dfc"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9G20DFC]
    default ["at91sam9g45ekes"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9G45EKES]
    default ["at91sam9m10ek"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9M10EK]
    default ["at91sam9m10dfc"] if [BR2_TARGET_ATMEL && BR2_TARGET_AT91SAM9M10DFC]
    default ["atstk100x"] if [BR2_TARGET_ATMEL && BR2_TARGET_AVR32_ATSTK1002]
    default ["atstk1005"] if [BR2_TARGET_ATMEL && BR2_TARGET_AVR32_ATSTK1005]
    default ["atngw100"] if [BR2_TARGET_ATMEL && BR2_TARGET_AVR32_ATNGW100]
    default ["atngw100-base"] if [BR2_TARGET_ATMEL && BR2_TARGET_AVR32_ATNGW100_BASE]
    default ["atngw100-expanded"] if [BR2_TARGET_ATMEL && BR2_TARGET_AVR32_ATNGW100_EXPANDED]
    default ["kb9202"] if [BR2_TARGET_KWIKBYTE && BR2_TARGET_KB9202]
    default ["v100sc2"] if [BR2_TARGET_VALKA && BR2_TARGET_VALKA_V100SC2]
    default ["i686"] if [BR2_TARGET_X86 && BR2_TARGET_I686]
    inherited [BR2_TARGET_X86]
   }
   config BR2_BOARD_PATH string {
    prompt "Board Path" if [BR2_TARGET_ARMLTD]
    default ["target/device/ARMLTD/$(BR2_BOARD_NAME)"] if [BR2_TARGET_ARMLTD]
    prompt "Atmel board repository" if [BR2_TARGET_ATMEL && (BR2_TARGET_AT91 || BR2_TARGET_AVR32)]
    depends on [BR2_TARGET_AT91 || BR2_TARGET_AVR32]
    default ["target/device/Atmel/$(BR2_BOARD_NAME)"] if [BR2_TARGET_ATMEL && (BR2_TARGET_AT91 || BR2_TARGET_AVR32)]
    prompt "Board Path" if [BR2_TARGET_KWIKBYTE]
    default ["target/device/KwikByte/$(BR2_BOARD_NAME)"] if [BR2_TARGET_KWIKBYTE]
    prompt "Board Path" if [BR2_TARGET_X86]
    default ["target/device/x86/$(BR2_BOARD_NAME)"] if [BR2_TARGET_X86]
    inherited [BR2_TARGET_X86]
   }
  }
 }
 menuconfig BR2_TARGET_XTENSA boolean {
  prompt "Device and Board Support for Xtensa and Diamond cores" if [BR2_xtensa]
  depends on [BR2_xtensa]
  default [y] if [BR2_xtensa]
  inherited [BR2_xtensa]
  if [BR2_TARGET_XTENSA] {
   config BR2_TARGET_XTENSA_XTAV60 boolean {
    prompt "XTAV60/200 board (Avnet LX60 or LX200 plus Tensilica IP)" if [BR2_TARGET_XTENSA && BR2_xtensa]
    depends on [BR2_xtensa]
    default [y] if [BR2_TARGET_XTENSA && BR2_xtensa]
    inherited [BR2_TARGET_XTENSA && BR2_xtensa]
   }
  }
 }
 if [!BR2_TARGET_ATMEL && !BR2_TARGET_KWIKBYTE && !BR2_TARGET_VALKA] {
  config BR2_TARGET_GENERIC_HOSTNAME string {
   prompt "System hostname" if [!BR2_TARGET_ATMEL && !BR2_TARGET_KWIKBYTE && !BR2_TARGET_VALKA]
   default ["buildroot"] if [!BR2_TARGET_ATMEL && !BR2_TARGET_KWIKBYTE && !BR2_TARGET_VALKA]
   inherited [!BR2_TARGET_ATMEL && !BR2_TARGET_KWIKBYTE && !BR2_TARGET_VALKA]
  }
  config BR2_TARGET_GENERIC_ISSUE string {
   prompt "System banner" if [!BR2_TARGET_ATMEL && !BR2_TARGET_KWIKBYTE && !BR2_TARGET_VALKA]
   default ["Welcome to Buildroot"] if [!BR2_TARGET_ATMEL && !BR2_TARGET_KWIKBYTE && !BR2_TARGET_VALKA]
   inherited [!BR2_TARGET_ATMEL && !BR2_TARGET_KWIKBYTE && !BR2_TARGET_VALKA]
  }
  menuconfig BR2_TARGET_GENERIC_GETTY boolean {
   prompt "Generic serial port config" if [!BR2_TARGET_ATMEL && !BR2_TARGET_KWIKBYTE && !BR2_TARGET_VALKA]
   inherited [!BR2_TARGET_ATMEL && !BR2_TARGET_KWIKBYTE && !BR2_TARGET_VALKA]
   if [!BR2_TARGET_ATMEL && !BR2_TARGET_KWIKBYTE && !BR2_TARGET_VALKA && BR2_TARGET_GENERIC_GETTY] {
    choice boolean {
     prompt "Serial port to run a getty on" if [!BR2_TARGET_ATMEL && !BR2_TARGET_KWIKBYTE && !BR2_TARGET_VALKA && BR2_TARGET_GENERIC_GETTY]
     default [BR2_TARGET_GENERIC_GETTY_TTYS0] if [!BR2_TARGET_ATMEL && !BR2_TARGET_KWIKBYTE && !BR2_TARGET_VALKA && BR2_TARGET_GENERIC_GETTY]
     config BR2_TARGET_GENERIC_GETTY_NONE boolean {
      prompt "none" if [<choice>]
      inherited [<choice>]
     }
     config BR2_TARGET_GENERIC_GETTY_TTYS0 boolean {
      prompt "ttyS0" if [<choice>]
      inherited [<choice>]
     }
     config BR2_TARGET_GENERIC_GETTY_TTYS1 boolean {
      prompt "ttyS1" if [<choice>]
      inherited [<choice>]
     }
     config BR2_TARGET_GENERIC_GETTY_TTYS2 boolean {
      prompt "ttyS2" if [<choice>]
      inherited [<choice>]
     }
     config BR2_TARGET_GENERIC_GETTY_TTYS3 boolean {
      prompt "ttyS3" if [<choice>]
      inherited [<choice>]
     }
     config BR2_TARGET_GENERIC_GETTY_TTYAMA0 boolean {
      prompt "ttyAMA0" if [<choice> && BR2_arm]
      depends on [BR2_arm]
      inherited [<choice> && BR2_arm]
     }
     config BR2_TARGET_GENERIC_GETTY_TTYAMA1 boolean {
      prompt "ttyAMA1" if [<choice> && BR2_arm]
      depends on [BR2_arm]
      inherited [<choice> && BR2_arm]
     }
     config BR2_TARGET_GENERIC_GETTY_TTYAMA2 boolean {
      prompt "ttyAMA2" if [<choice> && BR2_arm]
      depends on [BR2_arm]
      inherited [<choice> && BR2_arm]
     }
     config BR2_TARGET_GENERIC_GETTY_TTYAMA3 boolean {
      prompt "ttyAMA3" if [<choice> && BR2_arm]
      depends on [BR2_arm]
      inherited [<choice> && BR2_arm]
     }
     config BR2_TARGET_GENERIC_GETTY_TTYSAC0 boolean {
      prompt "ttySAC0" if [<choice> && BR2_arm]
      depends on [BR2_arm]
      inherited [<choice> && BR2_arm]
     }
     config BR2_TARGET_GENERIC_GETTY_TTYSAC1 boolean {
      prompt "ttySAC1" if [<choice> && BR2_arm]
      depends on [BR2_arm]
      inherited [<choice> && BR2_arm]
     }
     config BR2_TARGET_GENERIC_GETTY_TTYSAC2 boolean {
      prompt "ttySAC2" if [<choice> && BR2_arm]
      depends on [BR2_arm]
      inherited [<choice> && BR2_arm]
     }
     config BR2_TARGET_GENERIC_GETTY_TTYSAC3 boolean {
      prompt "ttySAC3" if [<choice> && BR2_arm]
      depends on [BR2_arm]
      inherited [<choice> && BR2_arm]
     }
     config BR2_TARGET_GENERIC_GETTY_TTYMXC0 boolean {
      prompt "ttymxc0" if [<choice> && BR2_arm]
      depends on [BR2_arm]
      inherited [<choice> && BR2_arm]
     }
     config BR2_TARGET_GENERIC_GETTY_TTYMXC1 boolean {
      prompt "ttymxc1" if [<choice> && BR2_arm]
      depends on [BR2_arm]
      inherited [<choice> && BR2_arm]
     }
     config BR2_TARGET_GENERIC_GETTY_TTYMXC2 boolean {
      prompt "ttymxc2" if [<choice> && BR2_arm]
      depends on [BR2_arm]
      inherited [<choice> && BR2_arm]
     }
     config BR2_TARGET_GENERIC_GETTY_TTYUL0 boolean {
      prompt "ttyUL0" if [<choice> && BR2_powerpc]
      depends on [BR2_powerpc]
      inherited [<choice> && BR2_powerpc]
     }
     config BR2_TARGET_GENERIC_GETTY_TTYUL1 boolean {
      prompt "ttyUL1" if [<choice> && BR2_powerpc]
      depends on [BR2_powerpc]
      inherited [<choice> && BR2_powerpc]
     }
     config BR2_TARGET_GENERIC_GETTY_TTYUL2 boolean {
      prompt "ttyUL2" if [<choice> && BR2_powerpc]
      depends on [BR2_powerpc]
      inherited [<choice> && BR2_powerpc]
     }
     config BR2_TARGET_GENERIC_GETTY_TTYUL3 boolean {
      prompt "ttyUL3" if [<choice> && BR2_powerpc]
      depends on [BR2_powerpc]
      inherited [<choice> && BR2_powerpc]
     }
     config BR2_TARGET_GENERIC_GETTY_TTYPSC0 boolean {
      prompt "ttyPSC0" if [<choice> && BR2_powerpc]
      depends on [BR2_powerpc]
      inherited [<choice> && BR2_powerpc]
     }
     config BR2_TARGET_GENERIC_GETTY_TTYPSC1 boolean {
      prompt "ttyPSC1" if [<choice> && BR2_powerpc]
      depends on [BR2_powerpc]
      inherited [<choice> && BR2_powerpc]
     }
     config BR2_TARGET_GENERIC_GETTY_TTYPSC2 boolean {
      prompt "ttyPSC2" if [<choice> && BR2_powerpc]
      depends on [BR2_powerpc]
      inherited [<choice> && BR2_powerpc]
     }
     config BR2_TARGET_GENERIC_GETTY_TTYPSC3 boolean {
      prompt "ttyPSC3" if [<choice> && BR2_powerpc]
      depends on [BR2_powerpc]
      inherited [<choice> && BR2_powerpc]
     }
     config BR2_TARGET_GENERIC_GETTY_TTYCPM0 boolean {
      prompt "ttyCPM0" if [<choice> && BR2_powerpc]
      depends on [BR2_powerpc]
      inherited [<choice> && BR2_powerpc]
     }
     config BR2_TARGET_GENERIC_GETTY_TTYCPM1 boolean {
      prompt "ttyCPM1" if [<choice> && BR2_powerpc]
      depends on [BR2_powerpc]
      inherited [<choice> && BR2_powerpc]
     }
     config BR2_TARGET_GENERIC_GETTY_TTYCPM2 boolean {
      prompt "ttyCPM2" if [<choice> && BR2_powerpc]
      depends on [BR2_powerpc]
      inherited [<choice> && BR2_powerpc]
     }
     config BR2_TARGET_GENERIC_GETTY_TTYCPM3 boolean {
      prompt "ttyCPM3" if [<choice> && BR2_powerpc]
      depends on [BR2_powerpc]
      inherited [<choice> && BR2_powerpc]
     }
    }
    config BR2_TARGET_GENERIC_GETTY_PORT string {
     default ["#ttyS0"] if [!BR2_TARGET_ATMEL && !BR2_TARGET_KWIKBYTE && !BR2_TARGET_VALKA && BR2_TARGET_GENERIC_GETTY && BR2_TARGET_GENERIC_GETTY_NONE]
     default ["ttyS0"] if [!BR2_TARGET_ATMEL && !BR2_TARGET_KWIKBYTE && !BR2_TARGET_VALKA && BR2_TARGET_GENERIC_GETTY && BR2_TARGET_GENERIC_GETTY_TTYS0]
     default ["ttyS1"] if [!BR2_TARGET_ATMEL && !BR2_TARGET_KWIKBYTE && !BR2_TARGET_VALKA && BR2_TARGET_GENERIC_GETTY && BR2_TARGET_GENERIC_GETTY_TTYS1]
     default ["ttyS2"] if [!BR2_TARGET_ATMEL && !BR2_TARGET_KWIKBYTE && !BR2_TARGET_VALKA && BR2_TARGET_GENERIC_GETTY && BR2_TARGET_GENERIC_GETTY_TTYS2]
     default ["ttyS3"] if [!BR2_TARGET_ATMEL && !BR2_TARGET_KWIKBYTE && !BR2_TARGET_VALKA && BR2_TARGET_GENERIC_GETTY && BR2_TARGET_GENERIC_GETTY_TTYS3]
     default ["ttyAMA0"] if [!BR2_TARGET_ATMEL && !BR2_TARGET_KWIKBYTE && !BR2_TARGET_VALKA && BR2_TARGET_GENERIC_GETTY && BR2_TARGET_GENERIC_GETTY_TTYAMA0]
     default ["ttyAMA1"] if [!BR2_TARGET_ATMEL && !BR2_TARGET_KWIKBYTE && !BR2_TARGET_VALKA && BR2_TARGET_GENERIC_GETTY && BR2_TARGET_GENERIC_GETTY_TTYAMA1]
     default ["ttyAMA2"] if [!BR2_TARGET_ATMEL && !BR2_TARGET_KWIKBYTE && !BR2_TARGET_VALKA && BR2_TARGET_GENERIC_GETTY && BR2_TARGET_GENERIC_GETTY_TTYAMA2]
     default ["ttyAMA3"] if [!BR2_TARGET_ATMEL && !BR2_TARGET_KWIKBYTE && !BR2_TARGET_VALKA && BR2_TARGET_GENERIC_GETTY && BR2_TARGET_GENERIC_GETTY_TTYAMA3]
     default ["ttySAC0"] if [!BR2_TARGET_ATMEL && !BR2_TARGET_KWIKBYTE && !BR2_TARGET_VALKA && BR2_TARGET_GENERIC_GETTY && BR2_TARGET_GENERIC_GETTY_TTYSAC0]
     default ["ttySAC1"] if [!BR2_TARGET_ATMEL && !BR2_TARGET_KWIKBYTE && !BR2_TARGET_VALKA && BR2_TARGET_GENERIC_GETTY && BR2_TARGET_GENERIC_GETTY_TTYSAC1]
     default ["ttySAC2"] if [!BR2_TARGET_ATMEL && !BR2_TARGET_KWIKBYTE && !BR2_TARGET_VALKA && BR2_TARGET_GENERIC_GETTY && BR2_TARGET_GENERIC_GETTY_TTYSAC2]
     default ["ttySAC3"] if [!BR2_TARGET_ATMEL && !BR2_TARGET_KWIKBYTE && !BR2_TARGET_VALKA && BR2_TARGET_GENERIC_GETTY && BR2_TARGET_GENERIC_GETTY_TTYSAC3]
     default ["ttymxc0"] if [!BR2_TARGET_ATMEL && !BR2_TARGET_KWIKBYTE && !BR2_TARGET_VALKA && BR2_TARGET_GENERIC_GETTY && BR2_TARGET_GENERIC_GETTY_TTYMXC0]
     default ["ttymxc1"] if [!BR2_TARGET_ATMEL && !BR2_TARGET_KWIKBYTE && !BR2_TARGET_VALKA && BR2_TARGET_GENERIC_GETTY && BR2_TARGET_GENERIC_GETTY_TTYMXC1]
     default ["ttymxc2"] if [!BR2_TARGET_ATMEL && !BR2_TARGET_KWIKBYTE && !BR2_TARGET_VALKA && BR2_TARGET_GENERIC_GETTY && BR2_TARGET_GENERIC_GETTY_TTYMXC2]
     default ["ttyUL0"] if [!BR2_TARGET_ATMEL && !BR2_TARGET_KWIKBYTE && !BR2_TARGET_VALKA && BR2_TARGET_GENERIC_GETTY && BR2_TARGET_GENERIC_GETTY_TTYUL0]
     default ["ttyUL1"] if [!BR2_TARGET_ATMEL && !BR2_TARGET_KWIKBYTE && !BR2_TARGET_VALKA && BR2_TARGET_GENERIC_GETTY && BR2_TARGET_GENERIC_GETTY_TTYUL1]
     default ["ttyUL2"] if [!BR2_TARGET_ATMEL && !BR2_TARGET_KWIKBYTE && !BR2_TARGET_VALKA && BR2_TARGET_GENERIC_GETTY && BR2_TARGET_GENERIC_GETTY_TTYUL2]
     default ["ttyUL3"] if [!BR2_TARGET_ATMEL && !BR2_TARGET_KWIKBYTE && !BR2_TARGET_VALKA && BR2_TARGET_GENERIC_GETTY && BR2_TARGET_GENERIC_GETTY_TTYUL3]
     default ["ttyPSC0"] if [!BR2_TARGET_ATMEL && !BR2_TARGET_KWIKBYTE && !BR2_TARGET_VALKA && BR2_TARGET_GENERIC_GETTY && BR2_TARGET_GENERIC_GETTY_TTYPSC0]
     default ["ttyPSC1"] if [!BR2_TARGET_ATMEL && !BR2_TARGET_KWIKBYTE && !BR2_TARGET_VALKA && BR2_TARGET_GENERIC_GETTY && BR2_TARGET_GENERIC_GETTY_TTYPSC1]
     default ["ttyPSC2"] if [!BR2_TARGET_ATMEL && !BR2_TARGET_KWIKBYTE && !BR2_TARGET_VALKA && BR2_TARGET_GENERIC_GETTY && BR2_TARGET_GENERIC_GETTY_TTYPSC2]
     default ["ttyPSC3"] if [!BR2_TARGET_ATMEL && !BR2_TARGET_KWIKBYTE && !BR2_TARGET_VALKA && BR2_TARGET_GENERIC_GETTY && BR2_TARGET_GENERIC_GETTY_TTYPSC3]
     default ["ttyCPM0"] if [!BR2_TARGET_ATMEL && !BR2_TARGET_KWIKBYTE && !BR2_TARGET_VALKA && BR2_TARGET_GENERIC_GETTY && BR2_TARGET_GENERIC_GETTY_TTYCPM0]
     default ["ttyCPM1"] if [!BR2_TARGET_ATMEL && !BR2_TARGET_KWIKBYTE && !BR2_TARGET_VALKA && BR2_TARGET_GENERIC_GETTY && BR2_TARGET_GENERIC_GETTY_TTYCPM1]
     default ["ttyCPM2"] if [!BR2_TARGET_ATMEL && !BR2_TARGET_KWIKBYTE && !BR2_TARGET_VALKA && BR2_TARGET_GENERIC_GETTY && BR2_TARGET_GENERIC_GETTY_TTYCPM2]
     default ["ttyCPM3"] if [!BR2_TARGET_ATMEL && !BR2_TARGET_KWIKBYTE && !BR2_TARGET_VALKA && BR2_TARGET_GENERIC_GETTY && BR2_TARGET_GENERIC_GETTY_TTYCPM3]
     inherited [!BR2_TARGET_ATMEL && !BR2_TARGET_KWIKBYTE && !BR2_TARGET_VALKA && BR2_TARGET_GENERIC_GETTY]
    }
    choice boolean {
     prompt "Baudrate to use" if [!BR2_TARGET_ATMEL && !BR2_TARGET_KWIKBYTE && !BR2_TARGET_VALKA && BR2_TARGET_GENERIC_GETTY]
     default [BR2_TARGET_GENERIC_GETTY_BAUDRATE_115200] if [!BR2_TARGET_ATMEL && !BR2_TARGET_KWIKBYTE && !BR2_TARGET_VALKA && BR2_TARGET_GENERIC_GETTY]
     config BR2_TARGET_GENERIC_GETTY_BAUDRATE_KEEP boolean {
      prompt "keep kernel default" if [<choice>]
      inherited [<choice>]
     }
     config BR2_TARGET_GENERIC_GETTY_BAUDRATE_9600 boolean {
      prompt "9600" if [<choice>]
      inherited [<choice>]
     }
     config BR2_TARGET_GENERIC_GETTY_BAUDRATE_19200 boolean {
      prompt "19200" if [<choice>]
      inherited [<choice>]
     }
     config BR2_TARGET_GENERIC_GETTY_BAUDRATE_38400 boolean {
      prompt "38400" if [<choice>]
      inherited [<choice>]
     }
     config BR2_TARGET_GENERIC_GETTY_BAUDRATE_57600 boolean {
      prompt "57600" if [<choice>]
      inherited [<choice>]
     }
     config BR2_TARGET_GENERIC_GETTY_BAUDRATE_115200 boolean {
      prompt "115200" if [<choice>]
      inherited [<choice>]
     }
    }
    config BR2_TARGET_GENERIC_GETTY_BAUDRATE string {
     default ["0"] if [!BR2_TARGET_ATMEL && !BR2_TARGET_KWIKBYTE && !BR2_TARGET_VALKA && BR2_TARGET_GENERIC_GETTY && BR2_TARGET_GENERIC_GETTY_BAUDRATE_KEEP]
     default ["9600"] if [!BR2_TARGET_ATMEL && !BR2_TARGET_KWIKBYTE && !BR2_TARGET_VALKA && BR2_TARGET_GENERIC_GETTY && BR2_TARGET_GENERIC_GETTY_BAUDRATE_9600]
     default ["19200"] if [!BR2_TARGET_ATMEL && !BR2_TARGET_KWIKBYTE && !BR2_TARGET_VALKA && BR2_TARGET_GENERIC_GETTY && BR2_TARGET_GENERIC_GETTY_BAUDRATE_19200]
     default ["38400"] if [!BR2_TARGET_ATMEL && !BR2_TARGET_KWIKBYTE && !BR2_TARGET_VALKA && BR2_TARGET_GENERIC_GETTY && BR2_TARGET_GENERIC_GETTY_BAUDRATE_38400]
     default ["57600"] if [!BR2_TARGET_ATMEL && !BR2_TARGET_KWIKBYTE && !BR2_TARGET_VALKA && BR2_TARGET_GENERIC_GETTY && BR2_TARGET_GENERIC_GETTY_BAUDRATE_57600]
     default ["115200"] if [!BR2_TARGET_ATMEL && !BR2_TARGET_KWIKBYTE && !BR2_TARGET_VALKA && BR2_TARGET_GENERIC_GETTY && BR2_TARGET_GENERIC_GETTY_BAUDRATE_115200]
     inherited [!BR2_TARGET_ATMEL && !BR2_TARGET_KWIKBYTE && !BR2_TARGET_VALKA && BR2_TARGET_GENERIC_GETTY]
    }
   }
  }
 }
}
menu "Build options" {
 menu "Commands" {
  config BR2_WGET string {
   prompt "Wget command" if []
   default ["wget --passive-ftp -nd"] if []
  }
  config BR2_SVN string {
   prompt "Subversion (svn) command" if []
   default ["svn"] if []
  }
  config BR2_BZR string {
   prompt "Bazaar (bzr) command" if []
   default ["bzr"] if []
  }
  config BR2_GIT string {
   prompt "Git command" if []
   default ["git"] if []
  }
  config BR2_ZCAT string {
   prompt "zcat command" if []
   default ["gzip -d -c"] if []
  }
  config BR2_BZCAT string {
   prompt "bzcat command" if []
   default ["bzcat"] if []
  }
  config BR2_TAR_OPTIONS string {
   prompt "Tar options" if []
   default [""] if []
  }
 }
 config BR2_DL_DIR string {
  prompt "Download dir" if []
  default ["$(TOPDIR)/dl"] if []
 }
 config BR2_STAGING_DIR string {
  prompt "Toolchain and header file location?" if []
  default ["$(BASE_DIR)/staging"] if []
 }
 menu "Mirrors and Download locations" {
  config BR2_PRIMARY_SITE string {
   prompt "Primary download site" if []
   default [""] if []
  }
  config BR2_BACKUP_SITE string {
   prompt "Backup download site" if []
   default ["http://sources.buildroot.net/"] if []
  }
  config BR2_SOURCEFORGE_MIRROR string {
   prompt "Sourceforge mirror site" if []
   default ["easynews"] if []
  }
  config BR2_KERNEL_MIRROR string {
   prompt "Kernel.org mirror" if []
   default ["http://www.kernel.org/pub/"] if []
  }
  config BR2_GNU_MIRROR string {
   prompt "GNU Software mirror" if []
   default ["http://ftp.gnu.org/pub/gnu"] if []
  }
  config BR2_DEBIAN_MIRROR string {
   prompt "Debian Software mirror" if []
   default ["http://ftp.debian.org"] if []
  }
  if [BR2_TARGET_ATMEL] {
   config BR2_ATMEL_MIRROR string {
    prompt "Atmel AVR32/AT91 download site" if [BR2_TARGET_ATMEL]
    default ["ftp://www.at91.com/pub/buildroot/"] if [BR2_TARGET_ATMEL]
    inherited [BR2_TARGET_ATMEL]
   }
   config BR2_AT91_PATCH_MIRROR string {
    prompt "Atmel AT91 Linux Patch download site" if [BR2_TARGET_ATMEL]
    default ["http://maxim.org.za/AT91RM9200/2.6/"] if [BR2_TARGET_ATMEL]
    inherited [BR2_TARGET_ATMEL]
   }
  }
 }
 config BR2_JLEVEL integer {
  prompt "Number of jobs to run simultaneously" if []
  default [2] if []
 }
 config BR2_DEPRECATED boolean {
  prompt "Show packages that are deprecated or obsolete" if []
 }
 config BR2_ENABLE_DEBUG boolean {
  prompt "build packages with debugging symbols" if []
  select BR2_PACKAGE_GDB_SERVER if []
  if [BR2_ENABLE_DEBUG] {
   choice boolean {
    prompt "gcc debug level" if [BR2_ENABLE_DEBUG]
    default [BR2_DEBUG_2] if [BR2_ENABLE_DEBUG]
    config BR2_DEBUG_1 boolean {
     prompt "debug level 1" if [<choice>]
     inherited [<choice>]
    }
    config BR2_DEBUG_2 boolean {
     prompt "debug level 2" if [<choice>]
     inherited [<choice>]
    }
    config BR2_DEBUG_3 boolean {
     prompt "debug level 3" if [<choice>]
     inherited [<choice>]
    }
   }
  }
 }
 choice boolean {
  prompt "strip" if []
  default [BR2_STRIP_strip] if []
  config BR2_STRIP_strip boolean {
   prompt "strip" if [<choice> && !BR2_ENABLE_DEBUG && !BR2_ELF2FLT]
   depends on [!BR2_ENABLE_DEBUG && !BR2_ELF2FLT]
   inherited [<choice> && !BR2_ENABLE_DEBUG && !BR2_ELF2FLT]
  }
  config BR2_STRIP_sstrip boolean {
   prompt "sstrip" if [<choice> && !BR2_ENABLE_DEBUG && !BR2_ELF2FLT]
   select BR2_PACKAGE_SSTRIP_HOST if [<choice> && !BR2_ENABLE_DEBUG && !BR2_ELF2FLT]
   depends on [!BR2_ENABLE_DEBUG && !BR2_ELF2FLT]
   inherited [<choice> && !BR2_ENABLE_DEBUG && !BR2_ELF2FLT]
  }
  config BR2_STRIP_none boolean {
   prompt "none" if [<choice>]
   inherited [<choice>]
  }
 }
 choice boolean {
  prompt "gcc optimization level" if []
  default [BR2_OPTIMIZE_S] if []
  config BR2_OPTIMIZE_0 boolean {
   prompt "optimization level 0" if [<choice>]
   inherited [<choice>]
  }
  config BR2_OPTIMIZE_1 boolean {
   prompt "optimization level 1" if [<choice>]
   inherited [<choice>]
  }
  config BR2_OPTIMIZE_2 boolean {
   prompt "optimization level 2" if [<choice>]
   inherited [<choice>]
  }
  config BR2_OPTIMIZE_3 boolean {
   prompt "optimization level 3" if [<choice>]
   inherited [<choice>]
  }
  config BR2_OPTIMIZE_S boolean {
   prompt "optimize for size" if [<choice>]
   inherited [<choice>]
  }
 }
 config BR2_PREFER_STATIC_LIB boolean {
  prompt "prefer static libraries" if []
 }
 config BR2_HAVE_DOCUMENTATION boolean {
  prompt "documentation on the target" if []
 }
 config BR2_HAVE_DEVFILES boolean {
  prompt "development files in target filesystem" if []
 }
 menu "Advanced" {
  config BR2_CONFIG_CACHE boolean {
   prompt "Use a central configure cache file (EXPERIMENTAL)" if []
  }
 }
}
menu "Toolchain" {
 choice boolean {
  prompt "Toolchain type" if []
  config BR2_TOOLCHAIN_BUILDROOT boolean {
   prompt "Buildroot toolchain" if [<choice>]
   inherited [<choice>]
  }
  config BR2_TOOLCHAIN_EXTERNAL boolean {
   prompt "External toolchain" if [<choice>]
   inherited [<choice>]
  }
 }
 if [BR2_TOOLCHAIN_BUILDROOT] {
  choice boolean {
   prompt "Kernel Headers" if [BR2_TOOLCHAIN_BUILDROOT]
   default [BR2_KERNEL_HEADERS_2_6_35] if [BR2_TOOLCHAIN_BUILDROOT]
   config BR2_KERNEL_HEADERS_2_6_29 boolean {
    prompt "Linux 2.6.29.x kernel headers" if [<choice> && BR2_DEPRECATED]
    depends on [BR2_DEPRECATED]
    inherited [<choice> && BR2_DEPRECATED]
   }
   config BR2_KERNEL_HEADERS_2_6_30 boolean {
    prompt "Linux 2.6.30.x kernel headers" if [<choice> && BR2_DEPRECATED]
    depends on [BR2_DEPRECATED]
    inherited [<choice> && BR2_DEPRECATED]
   }
   config BR2_KERNEL_HEADERS_2_6_31 boolean {
    prompt "Linux 2.6.31.x kernel headers" if [<choice> && BR2_DEPRECATED]
    depends on [BR2_DEPRECATED]
    inherited [<choice> && BR2_DEPRECATED]
   }
   config BR2_KERNEL_HEADERS_2_6_32 boolean {
    prompt "Linux 2.6.32.x kernel headers" if [<choice> && BR2_DEPRECATED]
    depends on [BR2_DEPRECATED]
    inherited [<choice> && BR2_DEPRECATED]
   }
   config BR2_KERNEL_HEADERS_2_6_33 boolean {
    prompt "Linux 2.6.33.x kernel headers" if [<choice>]
    inherited [<choice>]
   }
   config BR2_KERNEL_HEADERS_2_6_34 boolean {
    prompt "Linux 2.6.34.x kernel headers" if [<choice>]
    inherited [<choice>]
   }
   config BR2_KERNEL_HEADERS_2_6_35 boolean {
    prompt "Linux 2.6.35.x kernel headers" if [<choice>]
    inherited [<choice>]
   }
   config BR2_KERNEL_HEADERS_VERSION boolean {
    prompt "Linux 2.6 (manually specified version)" if [<choice>]
    inherited [<choice>]
   }
   config BR2_KERNEL_HEADERS_SNAP boolean {
    prompt "Local Linux snapshot (linux-2.6.tar.bz2)" if [<choice>]
    inherited [<choice>]
   }
  }
  config BR2_DEFAULT_KERNEL_VERSION string {
   prompt "linux version" if [BR2_TOOLCHAIN_BUILDROOT && BR2_KERNEL_HEADERS_VERSION]
   depends on [BR2_KERNEL_HEADERS_VERSION]
   inherited [BR2_TOOLCHAIN_BUILDROOT && BR2_KERNEL_HEADERS_VERSION]
  }
  config BR2_DEFAULT_KERNEL_HEADERS string {
   default ["2.6.29.6"] if [BR2_TOOLCHAIN_BUILDROOT && BR2_KERNEL_HEADERS_2_6_29]
   default ["2.6.30.10"] if [BR2_TOOLCHAIN_BUILDROOT && BR2_KERNEL_HEADERS_2_6_30]
   default ["2.6.31.14"] if [BR2_TOOLCHAIN_BUILDROOT && BR2_KERNEL_HEADERS_2_6_31]
   default ["2.6.32.23"] if [BR2_TOOLCHAIN_BUILDROOT && BR2_KERNEL_HEADERS_2_6_32]
   default ["2.6.33.7"] if [BR2_TOOLCHAIN_BUILDROOT && BR2_KERNEL_HEADERS_2_6_33]
   default ["2.6.34.7"] if [BR2_TOOLCHAIN_BUILDROOT && BR2_KERNEL_HEADERS_2_6_34]
   default ["2.6.35.6"] if [BR2_TOOLCHAIN_BUILDROOT && BR2_KERNEL_HEADERS_2_6_35]
   default ["2.6"] if [BR2_TOOLCHAIN_BUILDROOT && BR2_KERNEL_HEADERS_SNAP]
   default ["BR2_DEFAULT_KERNEL_VERSION"] if [BR2_TOOLCHAIN_BUILDROOT && BR2_KERNEL_HEADERS_VERSION]
   inherited [BR2_TOOLCHAIN_BUILDROOT]
  }
  choice boolean {
   prompt "uClibc C library Version" if [BR2_TOOLCHAIN_BUILDROOT]
   default [BR2_UCLIBC_VERSION_0_9_31] if [BR2_TOOLCHAIN_BUILDROOT]
   config BR2_UCLIBC_VERSION_0_9_29 boolean {
    depends on [!BR2_avr32]
    depends on [BR2_DEPRECATED]
    prompt "uClibc 0.9.29" if [<choice> && !BR2_avr32 && BR2_DEPRECATED]
    inherited [<choice> && !BR2_avr32 && BR2_DEPRECATED]
   }
   config BR2_UCLIBC_VERSION_0_9_30 boolean {
    prompt "uClibc 0.9.30.x" if [<choice>]
    inherited [<choice>]
   }
   config BR2_UCLIBC_VERSION_0_9_31 boolean {
    prompt "uClibc 0.9.31.x" if [<choice>]
    inherited [<choice>]
   }
   config BR2_UCLIBC_VERSION_SNAPSHOT boolean {
    prompt "daily snapshot" if [<choice>]
    inherited [<choice>]
   }
  }
  config BR2_USE_UCLIBC_SNAPSHOT string {
   prompt "Date (yyyymmdd) of snapshot or 'snapshot' for latest" if [BR2_TOOLCHAIN_BUILDROOT && BR2_UCLIBC_VERSION_SNAPSHOT]
   default ["snapshot"] if [BR2_TOOLCHAIN_BUILDROOT && BR2_UCLIBC_VERSION_SNAPSHOT]
   depends on [BR2_UCLIBC_VERSION_SNAPSHOT]
   inherited [BR2_TOOLCHAIN_BUILDROOT && BR2_UCLIBC_VERSION_SNAPSHOT]
  }
  config BR2_UCLIBC_VERSION_STRING string {
   default ["0.9.29"] if [BR2_TOOLCHAIN_BUILDROOT && BR2_UCLIBC_VERSION_0_9_29]
   default ["0.9.30.3"] if [BR2_TOOLCHAIN_BUILDROOT && BR2_UCLIBC_VERSION_0_9_30]
   default ["0.9.31"] if [BR2_TOOLCHAIN_BUILDROOT && BR2_UCLIBC_VERSION_0_9_31]
   default ["BR2_USE_UCLIBC_SNAPSHOT"] if [BR2_TOOLCHAIN_BUILDROOT && BR2_UCLIBC_VERSION_SNAPSHOT]
   inherited [BR2_TOOLCHAIN_BUILDROOT]
  }
  config BR2_UCLIBC_CONFIG string {
   prompt "uClibc configuration file to use?" if [BR2_TOOLCHAIN_BUILDROOT]
   default ["toolchain/uClibc/uClibc-0.9.29.config"] if [BR2_TOOLCHAIN_BUILDROOT && BR2_UCLIBC_VERSION_0_9_29]
   default ["toolchain/uClibc/uClibc-0.9.30.config"] if [BR2_TOOLCHAIN_BUILDROOT && BR2_UCLIBC_VERSION_0_9_30]
   default ["toolchain/uClibc/uClibc-0.9.31.config"] if [BR2_TOOLCHAIN_BUILDROOT && BR2_UCLIBC_VERSION_0_9_31]
   default ["toolchain/uClibc/uClibc-snapshot.config"] if [BR2_TOOLCHAIN_BUILDROOT && BR2_UCLIBC_VERSION_SNAPSHOT]
   inherited [BR2_TOOLCHAIN_BUILDROOT]
  }
  config BR2_PTHREAD_DEBUG boolean {
   prompt "Thread library debugging" if [BR2_TOOLCHAIN_BUILDROOT && (BR2_PTHREADS || BR2_PTHREADS_OLD || BR2_PTHREADS_NATIVE)]
   depends on [BR2_PTHREADS || BR2_PTHREADS_OLD || BR2_PTHREADS_NATIVE]
   inherited [BR2_TOOLCHAIN_BUILDROOT && (BR2_PTHREADS || BR2_PTHREADS_OLD || BR2_PTHREADS_NATIVE)]
  }
  config BR2_UCLIBC_INSTALL_TEST_SUITE boolean {
   prompt "Compile and install uClibc tests" if [BR2_TOOLCHAIN_BUILDROOT]
   select BR2_PACKAGE_MAKE if [BR2_TOOLCHAIN_BUILDROOT]
   inherited [BR2_TOOLCHAIN_BUILDROOT]
  }
  choice boolean {
   prompt "Binutils Version" if [BR2_TOOLCHAIN_BUILDROOT]
   default [BR2_BINUTILS_VERSION_2_20_1] if [BR2_TOOLCHAIN_BUILDROOT]
   config BR2_BINUTILS_VERSION_2_17 boolean {
    depends on [!BR2_avr32]
    depends on [BR2_DEPRECATED]
    prompt "binutils 2.17" if [<choice> && !BR2_avr32 && BR2_DEPRECATED]
    inherited [<choice> && !BR2_avr32 && BR2_DEPRECATED]
   }
   config BR2_BINUTILS_VERSION_2_18 boolean {
    depends on [!BR2_avr32]
    depends on [BR2_DEPRECATED]
    prompt "binutils 2.18" if [<choice> && !BR2_avr32 && BR2_DEPRECATED]
    inherited [<choice> && !BR2_avr32 && BR2_DEPRECATED]
   }
   config BR2_BINUTILS_VERSION_2_18_AVR32_1_0_1 boolean {
    depends on [BR2_avr32]
    prompt "binutils 2.18-avr32-1.0.1" if [<choice> && BR2_avr32]
    inherited [<choice> && BR2_avr32]
   }
   config BR2_BINUTILS_VERSION_2_19 boolean {
    depends on [!BR2_avr32]
    depends on [BR2_DEPRECATED]
    prompt "binutils 2.19" if [<choice> && !BR2_avr32 && BR2_DEPRECATED]
    inherited [<choice> && !BR2_avr32 && BR2_DEPRECATED]
   }
   config BR2_BINUTILS_VERSION_2_19_1 boolean {
    depends on [!BR2_avr32]
    depends on [BR2_DEPRECATED]
    prompt "binutils 2.19.1" if [<choice> && !BR2_avr32 && BR2_DEPRECATED]
    inherited [<choice> && !BR2_avr32 && BR2_DEPRECATED]
   }
   config BR2_BINUTILS_VERSION_2_20 boolean {
    depends on [!BR2_avr32]
    prompt "binutils 2.20" if [<choice> && !BR2_avr32]
    inherited [<choice> && !BR2_avr32]
   }
   config BR2_BINUTILS_VERSION_2_20_1 boolean {
    depends on [!BR2_avr32]
    prompt "binutils 2.20.1" if [<choice> && !BR2_avr32]
    inherited [<choice> && !BR2_avr32]
   }
  }
  config BR2_BINUTILS_VERSION string {
   default ["2.17"] if [BR2_TOOLCHAIN_BUILDROOT && BR2_BINUTILS_VERSION_2_17]
   default ["2.18"] if [BR2_TOOLCHAIN_BUILDROOT && BR2_BINUTILS_VERSION_2_18]
   default ["2.18-avr32-1.0.1"] if [BR2_TOOLCHAIN_BUILDROOT && BR2_BINUTILS_VERSION_2_18_AVR32_1_0_1]
   default ["2.19"] if [BR2_TOOLCHAIN_BUILDROOT && BR2_BINUTILS_VERSION_2_19]
   default ["2.19.1"] if [BR2_TOOLCHAIN_BUILDROOT && BR2_BINUTILS_VERSION_2_19_1]
   default ["2.20"] if [BR2_TOOLCHAIN_BUILDROOT && BR2_BINUTILS_VERSION_2_20]
   default ["2.20.1"] if [BR2_TOOLCHAIN_BUILDROOT && BR2_BINUTILS_VERSION_2_20_1]
   inherited [BR2_TOOLCHAIN_BUILDROOT]
  }
  config BR2_EXTRA_BINUTILS_CONFIG_OPTIONS string {
   prompt "Additional binutils options" if [BR2_TOOLCHAIN_BUILDROOT]
   default [""] if [BR2_TOOLCHAIN_BUILDROOT]
   inherited [BR2_TOOLCHAIN_BUILDROOT]
  }
  choice boolean {
   prompt "GCC compiler Version" if [BR2_TOOLCHAIN_BUILDROOT]
   default [BR2_GCC_VERSION_4_3_X] if [BR2_TOOLCHAIN_BUILDROOT && !BR2_avr32]
   default [BR2_GCC_VERSION_4_2_2_AVR32_2_1_5] if [BR2_TOOLCHAIN_BUILDROOT && BR2_avr32]
   config BR2_GCC_VERSION_4_2_2_AVR32_2_1_5 boolean {
    depends on [BR2_avr32]
    prompt "gcc 4.2.2-avr32-2.1.5" if [<choice> && BR2_avr32]
    inherited [<choice> && BR2_avr32]
   }
   config BR2_GCC_VERSION_4_2_4 boolean {
    depends on [!BR2_avr32]
    prompt "gcc 4.2.4" if [<choice> && !BR2_avr32]
    inherited [<choice> && !BR2_avr32]
   }
   config BR2_GCC_VERSION_4_3_X boolean {
    depends on [!BR2_avr32]
    prompt "gcc 4.3.x" if [<choice> && !BR2_avr32]
    inherited [<choice> && !BR2_avr32]
   }
   config BR2_GCC_VERSION_4_4_X boolean {
    depends on [!BR2_avr32]
    prompt "gcc 4.4.x" if [<choice> && !BR2_avr32]
    inherited [<choice> && !BR2_avr32]
   }
   config BR2_GCC_VERSION_SNAP boolean {
    depends on [!BR2_avr32]
    prompt "gcc snapshot" if [<choice> && !BR2_avr32]
    inherited [<choice> && !BR2_avr32]
   }
  }
  config BR2_GCC_SUPPORTS_FINEGRAINEDMTUNE boolean {
   default [y] if [BR2_TOOLCHAIN_BUILDROOT && !BR2_GCC_VERSION_4_2_1 && !BR2_GCC_VERSION_4_2_2 && !BR2_GCC_VERSION_4_2_3 && !BR2_GCC_VERSION_4_2_4 && !BR2_GCC_VERSION_4_2_2_AVR32_2_1_5]
   inherited [BR2_TOOLCHAIN_BUILDROOT]
  }
  config BR2_GCC_SNAP_DATE string {
   prompt "GCC snapshot date" if [BR2_TOOLCHAIN_BUILDROOT && BR2_GCC_VERSION_SNAP]
   default ["20070921"] if [BR2_TOOLCHAIN_BUILDROOT && BR2_GCC_VERSION_SNAP]
   depends on [BR2_GCC_VERSION_SNAP]
   inherited [BR2_TOOLCHAIN_BUILDROOT && BR2_GCC_VERSION_SNAP]
  }
  config BR2_GCC_VERSION string {
   default ["4.2.2-avr32-2.1.5"] if [BR2_TOOLCHAIN_BUILDROOT && BR2_GCC_VERSION_4_2_2_AVR32_2_1_5]
   default ["4.2.4"] if [BR2_TOOLCHAIN_BUILDROOT && BR2_GCC_VERSION_4_2_4]
   default ["4.3.5"] if [BR2_TOOLCHAIN_BUILDROOT && BR2_GCC_VERSION_4_3_X]
   default ["4.4.4"] if [BR2_TOOLCHAIN_BUILDROOT && BR2_GCC_VERSION_4_4_X]
   default ["BR2_GCC_SNAP_DATE"] if [BR2_TOOLCHAIN_BUILDROOT && BR2_GCC_VERSION_SNAP]
   inherited [BR2_TOOLCHAIN_BUILDROOT]
  }
  config BR2_EXTRA_GCC_CONFIG_OPTIONS string {
   prompt "Additional gcc options" if [BR2_TOOLCHAIN_BUILDROOT]
   default [""] if [BR2_TOOLCHAIN_BUILDROOT]
   inherited [BR2_TOOLCHAIN_BUILDROOT]
  }
  config BR2_GCC_CROSS_FORTRAN boolean {
   prompt "Fortran cross-compiler support" if [BR2_TOOLCHAIN_BUILDROOT && !BR2_avr32]
   depends on [!BR2_avr32]
   inherited [BR2_TOOLCHAIN_BUILDROOT && !BR2_avr32]
  }
  config BR2_GCC_CROSS_JAVA boolean {
   inherited [BR2_TOOLCHAIN_BUILDROOT]
  }
  config BR2_INSTALL_LIBGCJ boolean {
   prompt "Build/install java compiler and libgcj?" if [BR2_TOOLCHAIN_BUILDROOT && !BR2_avr32 && BR2_INSTALL_LIBSTDCPP && BROKEN]
   depends on [!BR2_avr32 && BR2_INSTALL_LIBSTDCPP]
   select BR2_GCC_CROSS_JAVA if [BR2_TOOLCHAIN_BUILDROOT && !BR2_avr32 && BR2_INSTALL_LIBSTDCPP && BROKEN]
   select BR2_LARGEFILE if [BR2_TOOLCHAIN_BUILDROOT && !BR2_avr32 && BR2_INSTALL_LIBSTDCPP && BROKEN]
   depends on [BROKEN]
   inherited [BR2_TOOLCHAIN_BUILDROOT && !BR2_avr32 && BR2_INSTALL_LIBSTDCPP && BROKEN]
  }
  config BR2_INSTALL_OBJC boolean {
   prompt "Build/install Objective-C compiler and runtime?" if [BR2_TOOLCHAIN_BUILDROOT && !BR2_avr32]
   depends on [!BR2_avr32]
   inherited [BR2_TOOLCHAIN_BUILDROOT && !BR2_avr32]
  }
  config BR2_INSTALL_FORTRAN boolean {
   prompt "Build/install Fortran compiler and runtime?" if [BR2_TOOLCHAIN_BUILDROOT && !BR2_avr32]
   depends on [!BR2_avr32]
   select BR2_PACKAGE_LIBMPFR if [BR2_TOOLCHAIN_BUILDROOT && !BR2_avr32]
   inherited [BR2_TOOLCHAIN_BUILDROOT && !BR2_avr32]
  }
  config BR2_GCC_SHARED_LIBGCC boolean {
   prompt "Build/install a shared libgcc?" if [BR2_TOOLCHAIN_BUILDROOT && !BR2_PREFER_STATIC_LIB && !BR2_sparc && !BR2_sparc64]
   depends on [!BR2_PREFER_STATIC_LIB]
   default [y] if [BR2_TOOLCHAIN_BUILDROOT && !BR2_PREFER_STATIC_LIB && !BR2_sparc && !BR2_sparc64]
   depends on [!BR2_sparc && !BR2_sparc64]
   inherited [BR2_TOOLCHAIN_BUILDROOT && !BR2_PREFER_STATIC_LIB && !BR2_sparc && !BR2_sparc64]
  }
  config BR2_GCC_ENABLE_TLS boolean {
   prompt "Enable compiler tls support" if [BR2_TOOLCHAIN_BUILDROOT && BR2_PTHREADS_NATIVE]
   default [y] if [BR2_TOOLCHAIN_BUILDROOT && BR2_PTHREADS_NATIVE]
   depends on [BR2_PTHREADS_NATIVE]
   inherited [BR2_TOOLCHAIN_BUILDROOT && BR2_PTHREADS_NATIVE]
  }
  config BR2_CCACHE boolean {
   prompt "Enable ccache support?" if [BR2_TOOLCHAIN_BUILDROOT]
   inherited [BR2_TOOLCHAIN_BUILDROOT]
   config BR2_CCACHE_DIR string {
    prompt "ccache dir location?" if [BR2_TOOLCHAIN_BUILDROOT && BR2_CCACHE]
    depends on [BR2_CCACHE]
    default ["$(TOOLCHAIN_DIR)/ccache-$(CCACHE_VER)/cache"] if [BR2_TOOLCHAIN_BUILDROOT && BR2_CCACHE]
    inherited [BR2_TOOLCHAIN_BUILDROOT && BR2_CCACHE]
   }
  }
 }
 if [BR2_TOOLCHAIN_EXTERNAL] {
  choice boolean {
   prompt "External toolchain C library" if [BR2_TOOLCHAIN_EXTERNAL]
   default [BR2_TOOLCHAIN_EXTERNAL_UCLIBC] if [BR2_TOOLCHAIN_EXTERNAL]
   config BR2_TOOLCHAIN_EXTERNAL_UCLIBC boolean {
    prompt "uClibc" if [<choice>]
    inherited [<choice>]
   }
   config BR2_TOOLCHAIN_EXTERNAL_GLIBC boolean {
    prompt "glibc" if [<choice>]
    inherited [<choice>]
   }
  }
  config BR2_TOOLCHAIN_EXTERNAL_STRIP boolean {
   default [y] if [BR2_TOOLCHAIN_EXTERNAL]
   prompt "Strip shared libraries" if [BR2_TOOLCHAIN_EXTERNAL]
   inherited [BR2_TOOLCHAIN_EXTERNAL]
  }
 }
 config BR2_PACKAGE_GDB boolean {
  prompt "Build gdb debugger for the Target" if [BR2_USE_WCHAR]
  select BR2_PACKAGE_NCURSES if [BR2_USE_WCHAR]
  depends on [BR2_USE_WCHAR]
  inherited [BR2_USE_WCHAR]
 }
 config BR2_PACKAGE_GDB_SERVER boolean {
  prompt "Build gdb server for the Target" if []
 }
 config BR2_PACKAGE_GDB_HOST boolean {
  prompt "Build gdb for the Host" if [!BR2_TOOLCHAIN_EXTERNAL]
  depends on [!BR2_TOOLCHAIN_EXTERNAL]
  inherited [!BR2_TOOLCHAIN_EXTERNAL]
 }
 choice boolean {
  prompt "GDB debugger Version" if [BR2_PACKAGE_GDB || BR2_PACKAGE_GDB_SERVER || BR2_PACKAGE_GDB_HOST]
  default [BR2_GDB_VERSION_6_8] if [(BR2_PACKAGE_GDB || BR2_PACKAGE_GDB_SERVER || BR2_PACKAGE_GDB_HOST) && !BR2_avr32]
  default [BR2_GDB_VERSION_6_7_1_AVR32_2_1_5] if [(BR2_PACKAGE_GDB || BR2_PACKAGE_GDB_SERVER || BR2_PACKAGE_GDB_HOST) && BR2_avr32]
  depends on [BR2_PACKAGE_GDB || BR2_PACKAGE_GDB_SERVER || BR2_PACKAGE_GDB_HOST]
  config BR2_GDB_VERSION_6_6 boolean {
   prompt "gdb 6.6" if [<choice> && !BR2_avr32 && BR2_DEPRECATED]
   depends on [!BR2_avr32]
   depends on [BR2_DEPRECATED]
   inherited [<choice> && !BR2_avr32 && BR2_DEPRECATED]
  }
  config BR2_GDB_VERSION_6_7_1 boolean {
   depends on [!BR2_avr32]
   prompt "gdb 6.7.1" if [<choice> && !BR2_avr32]
   inherited [<choice> && !BR2_avr32]
  }
  config BR2_GDB_VERSION_6_7_1_AVR32_2_1_5 boolean {
   depends on [BR2_avr32]
   prompt "gdb 6.7.1-avr32-2.1.5" if [<choice> && BR2_avr32]
   inherited [<choice> && BR2_avr32]
  }
  config BR2_GDB_VERSION_6_8 boolean {
   prompt "gdb 6.8" if [<choice> && !BR2_avr32]
   depends on [!BR2_avr32]
   inherited [<choice> && !BR2_avr32]
  }
  config BR2_GDB_VERSION_7_0_1 boolean {
   prompt "gdb 7.0.1" if [<choice>]
   select BR2_PTHREAD_DEBUG if [<choice> && !BR2_PTHREADS_NONE]
   inherited [<choice>]
  }
  config BR2_GDB_VERSION_7_1 boolean {
   prompt "gdb 7.1" if [<choice>]
   select BR2_PTHREAD_DEBUG if [<choice> && !BR2_PTHREADS_NONE]
   inherited [<choice>]
  }
 }
 config BR2_GDB_VERSION string {
  default ["6.6"] if [BR2_GDB_VERSION_6_6]
  default ["6.7.1"] if [BR2_GDB_VERSION_6_7_1]
  default ["6.7.1-avr32-2.1.5"] if [BR2_GDB_VERSION_6_7_1_AVR32_2_1_5]
  default ["6.8"] if [BR2_GDB_VERSION_6_8]
  default ["7.0.1"] if [BR2_GDB_VERSION_7_0_1]
  default ["7.1"] if [BR2_GDB_VERSION_7_1]
 }
 config BR2_LARGEFILE boolean {
  prompt "Enable large file (files > 2 GB) support?" if [!BR2_cris]
  depends on [!BR2_cris]
  inherited [!BR2_cris]
 }
 config BR2_INET_IPV6 boolean {
  prompt "Enable IPv6" if []
 }
 config BR2_INET_RPC boolean {
  prompt "Enable RPC" if []
 }
 config BR2_ENABLE_LOCALE boolean {
  prompt "Enable toolchain locale/i18n support?" if []
  select BR2_USE_WCHAR if []
 }
 config BR2_ENABLE_LOCALE_PURGE boolean {
  prompt "Purge unwanted locales" if []
  config BR2_ENABLE_LOCALE_WHITELIST string {
   prompt "Locales to keep" if [BR2_ENABLE_LOCALE_PURGE]
   default ["C en_US de fr"] if [BR2_ENABLE_LOCALE_PURGE]
   depends on [BR2_ENABLE_LOCALE_PURGE]
   inherited [BR2_ENABLE_LOCALE_PURGE]
  }
 }
 config BR2_NEEDS_GETTEXT boolean {
  default [y] if [BR2_TOOLCHAIN_BUILDROOT]
  default [y] if [BR2_TOOLCHAIN_EXTERNAL_UCLIBC]
 }
 config BR2_NEEDS_GETTEXT_IF_LOCALE boolean {
  default [y] if [BR2_NEEDS_GETTEXT && BR2_ENABLE_LOCALE]
 }
 config BR2_USE_WCHAR boolean {
  prompt "Enable WCHAR support" if []
 }
 config BR2_PREFER_SOFT_FLOAT boolean {
  default [y] if [BR2_arm || BR2_armeb || BR2_avr32 || BR2_mips || BR2_mipsel]
 }
 config BR2_SOFT_FLOAT boolean {
  prompt "Use software floating point by default" if [BR2_arm || BR2_armeb || BR2_avr32 || BR2_mips || BR2_mipsel || BR2_powerpc]
  depends on [BR2_arm || BR2_armeb || BR2_avr32 || BR2_mips || BR2_mipsel || BR2_powerpc]
  default [BR2_PREFER_SOFT_FLOAT] if [BR2_arm || BR2_armeb || BR2_avr32 || BR2_mips || BR2_mipsel || BR2_powerpc]
  inherited [BR2_arm || BR2_armeb || BR2_avr32 || BR2_mips || BR2_mipsel || BR2_powerpc]
 }
 config BR2_USE_SSP boolean {
  prompt "Enable stack protection support" if []
 }
 choice boolean {
  prompt "Thread library implementation" if []
  default [BR2_PTHREADS_OLD] if []
  config BR2_PTHREADS_NONE boolean {
   prompt "none" if [<choice>]
   inherited [<choice>]
  }
  config BR2_PTHREADS boolean {
   prompt "linuxthreads" if [<choice>]
   inherited [<choice>]
  }
  config BR2_PTHREADS_OLD boolean {
   prompt "linuxthreads (stable/old)" if [<choice>]
   inherited [<choice>]
  }
  config BR2_PTHREADS_NATIVE boolean {
   prompt "Native POSIX Threading (NPTL)" if [<choice> && BR2_UCLIBC_VERSION_SNAPSHOT]
   depends on [BR2_UCLIBC_VERSION_SNAPSHOT]
   inherited [<choice> && BR2_UCLIBC_VERSION_SNAPSHOT]
  }
 }
 config BR2_PROGRAM_INVOCATION boolean {
  prompt "Enable 'program invocation name'" if []
 }
 config BR2_GCC_CROSS_CXX boolean {
 }
 config BR2_INSTALL_LIBSTDCPP boolean {
  prompt "Build/install c++ compiler and libstdc++?" if [BR2_GCC_SUPPORTS_FINEGRAINEDMTUNE || !BR2_ENABLE_LOCALE || !BR2_UCLIBC_VERSION_0_9_31]
  select BR2_GCC_CROSS_CXX if [BR2_GCC_SUPPORTS_FINEGRAINEDMTUNE || !BR2_ENABLE_LOCALE || !BR2_UCLIBC_VERSION_0_9_31]
  depends on [!(!BR2_GCC_SUPPORTS_FINEGRAINEDMTUNE && BR2_ENABLE_LOCALE && BR2_UCLIBC_VERSION_0_9_31)]
  inherited [BR2_GCC_SUPPORTS_FINEGRAINEDMTUNE || !BR2_ENABLE_LOCALE || !BR2_UCLIBC_VERSION_0_9_31]
 }
 config BR2_TARGET_OPTIMIZATION string {
  prompt "Target Optimizations" if []
  default ["-pipe"] if []
 }
 if [BR2_TOOLCHAIN_BUILDROOT] {
  config BR2_ELF2FLT boolean {
   prompt "Enable elf2flt support?" if [BR2_TOOLCHAIN_BUILDROOT && (BR2_arm || BR2_sh || BR2_sparc)]
   depends on [BR2_arm || BR2_sh || BR2_sparc]
   inherited [BR2_TOOLCHAIN_BUILDROOT && (BR2_arm || BR2_sh || BR2_sparc)]
  }
  config BR2_MKLIBS boolean {
   prompt "Run mklibs on the built root filesystem" if [BR2_TOOLCHAIN_BUILDROOT]
   inherited [BR2_TOOLCHAIN_BUILDROOT]
  }
  config BR2_PACKAGE_SSTRIP_TARGET boolean {
   prompt "Install sstrip for the target system" if [BR2_TOOLCHAIN_BUILDROOT]
   inherited [BR2_TOOLCHAIN_BUILDROOT]
  }
  config BR2_PACKAGE_SSTRIP_HOST boolean {
   prompt "Install sstrip for the host/build system" if [BR2_TOOLCHAIN_BUILDROOT]
   inherited [BR2_TOOLCHAIN_BUILDROOT]
  }
  config BR2_VFP_FLOAT boolean {
   prompt "Use ARM Vector Floating Point unit" if [BR2_TOOLCHAIN_BUILDROOT && !BR2_SOFT_FLOAT && (BR2_arm || BR2_armeb)]
   depends on [!BR2_SOFT_FLOAT]
   depends on [BR2_arm || BR2_armeb]
   inherited [BR2_TOOLCHAIN_BUILDROOT && !BR2_SOFT_FLOAT && (BR2_arm || BR2_armeb)]
  }
  config BR2_CROSS_TOOLCHAIN_TARGET_UTILS boolean {
   prompt "Include target utils in cross toolchain" if [BR2_TOOLCHAIN_BUILDROOT]
   default [y] if [BR2_TOOLCHAIN_BUILDROOT]
   inherited [BR2_TOOLCHAIN_BUILDROOT]
  }
 }
 if [BR2_TOOLCHAIN_EXTERNAL] {
  config BR2_TOOLCHAIN_EXTERNAL_PATH string {
   prompt "External toolchain path" if [BR2_TOOLCHAIN_EXTERNAL]
   default ["/path/to/staging_dir/usr"] if [BR2_TOOLCHAIN_EXTERNAL]
   inherited [BR2_TOOLCHAIN_EXTERNAL]
  }
  config BR2_TOOLCHAIN_EXTERNAL_PREFIX string {
   prompt "External toolchain prefix" if [BR2_TOOLCHAIN_EXTERNAL]
   default ["$(ARCH)-linux"] if [BR2_TOOLCHAIN_EXTERNAL]
   inherited [BR2_TOOLCHAIN_EXTERNAL]
  }
 }
}
menu "Package Selection for the target" {
 config BR2_PACKAGE_BUSYBOX boolean {
  prompt "BusyBox" if []
  default [y] if []
  if [BR2_PACKAGE_BUSYBOX] {
   choice boolean {
    prompt "BusyBox Version" if [BR2_PACKAGE_BUSYBOX]
    default [BR2_BUSYBOX_VERSION_1_17_X] if [BR2_PACKAGE_BUSYBOX]
    config BR2_BUSYBOX_VERSION_1_13_X boolean {
     prompt "BusyBox 1.13.x" if [<choice> && BR2_DEPRECATED]
     depends on [BR2_DEPRECATED]
     inherited [<choice> && BR2_DEPRECATED]
    }
    config BR2_BUSYBOX_VERSION_1_14_X boolean {
     prompt "BusyBox 1.14.x" if [<choice> && BR2_DEPRECATED]
     depends on [BR2_DEPRECATED]
     inherited [<choice> && BR2_DEPRECATED]
    }
    config BR2_BUSYBOX_VERSION_1_15_X boolean {
     prompt "BusyBox 1.15.x" if [<choice>]
     inherited [<choice>]
    }
    config BR2_BUSYBOX_VERSION_1_16_X boolean {
     prompt "BusyBox 1.16.x" if [<choice>]
     inherited [<choice>]
    }
    config BR2_BUSYBOX_VERSION_1_17_X boolean {
     prompt "BusyBox 1.17.x" if [<choice>]
     inherited [<choice>]
    }
    config BR2_PACKAGE_BUSYBOX_SNAPSHOT boolean {
     prompt "daily snapshot" if [<choice>]
     inherited [<choice>]
    }
   }
   config BR2_BUSYBOX_VERSION string {
    default ["1.13.4"] if [BR2_PACKAGE_BUSYBOX && BR2_BUSYBOX_VERSION_1_13_X]
    default ["1.14.4"] if [BR2_PACKAGE_BUSYBOX && BR2_BUSYBOX_VERSION_1_14_X]
    default ["1.15.3"] if [BR2_PACKAGE_BUSYBOX && BR2_BUSYBOX_VERSION_1_15_X]
    default ["1.16.2"] if [BR2_PACKAGE_BUSYBOX && BR2_BUSYBOX_VERSION_1_16_X]
    default ["1.17.2"] if [BR2_PACKAGE_BUSYBOX && BR2_BUSYBOX_VERSION_1_17_X]
    inherited [BR2_PACKAGE_BUSYBOX]
   }
   config BR2_PACKAGE_BUSYBOX_FULLINSTALL boolean {
    prompt "Run BusyBox's own full installation" if [BR2_PACKAGE_BUSYBOX]
    default [y] if [BR2_PACKAGE_BUSYBOX]
    inherited [BR2_PACKAGE_BUSYBOX]
   }
   config BR2_PACKAGE_BUSYBOX_CONFIG string {
    prompt "BusyBox configuration file to use?" if [BR2_PACKAGE_BUSYBOX]
    default ["package/busybox/busybox-1.17.x.config"] if [BR2_PACKAGE_BUSYBOX && BR2_PACKAGE_BUSYBOX_SNAPSHOT]
    default ["package/busybox/busybox-1.13.x.config"] if [BR2_PACKAGE_BUSYBOX && BR2_BUSYBOX_VERSION_1_13_X]
    default ["package/busybox/busybox-1.13.x.config"] if [BR2_PACKAGE_BUSYBOX && BR2_BUSYBOX_VERSION_1_14_X]
    default ["package/busybox/busybox-1.13.x.config"] if [BR2_PACKAGE_BUSYBOX && BR2_BUSYBOX_VERSION_1_15_X]
    default ["package/busybox/busybox-1.16.x.config"] if [BR2_PACKAGE_BUSYBOX && BR2_BUSYBOX_VERSION_1_16_X]
    default ["package/busybox/busybox-1.17.x.config"] if [BR2_PACKAGE_BUSYBOX && BR2_BUSYBOX_VERSION_1_17_X]
    inherited [BR2_PACKAGE_BUSYBOX]
   }
   config BR2_PACKAGE_BUSYBOX_SHOW_OTHERS boolean {
    prompt "Show packages that are also provided by busybox" if [BR2_PACKAGE_BUSYBOX]
    default [y] if [!BR2_PACKAGE_BUSYBOX]
    inherited [BR2_PACKAGE_BUSYBOX]
   }
  }
  if [!BR2_PACKAGE_BUSYBOX] {
   config BR2_PACKAGE_BUSYBOX_SHOW_OTHERS boolean {
    prompt "Show packages that are also provided by busybox" if [BR2_PACKAGE_BUSYBOX]
    default [y] if [!BR2_PACKAGE_BUSYBOX]
    inherited [!BR2_PACKAGE_BUSYBOX]
   }
  }
 }
 config BR2_PACKAGE_CUSTOMIZE boolean {
  prompt "customize" if []
 }
 menu "Audio and video libraries and applications" {
  config BR2_PACKAGE_ALSA_LIB boolean {
   prompt "alsa-lib" if []
   select BR2_PACKAGE_ALSA_LIB_PCM if []
   config BR2_PACKAGE_ALSA_LIB_PYTHON boolean {
    prompt "Python support for alsa-lib" if [BR2_PACKAGE_ALSA_LIB && BR2_PACKAGE_PYTHON]
    depends on [BR2_PACKAGE_ALSA_LIB]
    depends on [BR2_PACKAGE_PYTHON]
    inherited [BR2_PACKAGE_ALSA_LIB && BR2_PACKAGE_PYTHON]
   }
   if [BR2_PACKAGE_ALSA_LIB] {
    menu "ALSA lib selection" {
     depends on [BR2_PACKAGE_ALSA_LIB]
     config BR2_PACKAGE_ALSA_LIB_DEVDIR string {
      prompt "directory with ALSA device files" if [BR2_PACKAGE_ALSA_LIB]
      default ["/dev/snd"] if [BR2_PACKAGE_ALSA_LIB]
      inherited [BR2_PACKAGE_ALSA_LIB]
     }
     config BR2_PACKAGE_ALSA_LIB_PCM_PLUGINS string {
      prompt "built PCM plugins" if [BR2_PACKAGE_ALSA_LIB]
      default ["all"] if [BR2_PACKAGE_ALSA_LIB]
      inherited [BR2_PACKAGE_ALSA_LIB]
     }
     config BR2_PACKAGE_ALSA_LIB_CTL_PLUGINS string {
      prompt "built control plugins" if [BR2_PACKAGE_ALSA_LIB]
      default ["all"] if [BR2_PACKAGE_ALSA_LIB]
      inherited [BR2_PACKAGE_ALSA_LIB]
     }
     config BR2_PACKAGE_ALSA_LIB_ALOAD boolean {
      prompt "aload" if [BR2_PACKAGE_ALSA_LIB]
      default [y] if [BR2_PACKAGE_ALSA_LIB]
      inherited [BR2_PACKAGE_ALSA_LIB]
     }
     config BR2_PACKAGE_ALSA_LIB_MIXER boolean {
      prompt "mixer" if [BR2_PACKAGE_ALSA_LIB]
      default [y] if [BR2_PACKAGE_ALSA_LIB]
      inherited [BR2_PACKAGE_ALSA_LIB]
     }
     config BR2_PACKAGE_ALSA_LIB_PCM boolean {
      prompt "pcm" if [BR2_PACKAGE_ALSA_LIB]
      default [y] if [BR2_PACKAGE_ALSA_LIB]
      inherited [BR2_PACKAGE_ALSA_LIB]
     }
     config BR2_PACKAGE_ALSA_LIB_RAWMIDI boolean {
      prompt "rawmidi" if [BR2_PACKAGE_ALSA_LIB]
      default [y] if [BR2_PACKAGE_ALSA_LIB]
      inherited [BR2_PACKAGE_ALSA_LIB]
     }
     config BR2_PACKAGE_ALSA_LIB_HWDEP boolean {
      prompt "hwdep" if [BR2_PACKAGE_ALSA_LIB]
      default [y] if [BR2_PACKAGE_ALSA_LIB]
      inherited [BR2_PACKAGE_ALSA_LIB]
     }
     config BR2_PACKAGE_ALSA_LIB_SEQ boolean {
      prompt "seq" if [BR2_PACKAGE_ALSA_LIB]
      default [y] if [BR2_PACKAGE_ALSA_LIB]
      inherited [BR2_PACKAGE_ALSA_LIB]
     }
     config BR2_PACKAGE_ALSA_LIB_ALISP boolean {
      prompt "alisp" if [BR2_PACKAGE_ALSA_LIB]
      default [y] if [BR2_PACKAGE_ALSA_LIB]
      inherited [BR2_PACKAGE_ALSA_LIB]
     }
     config BR2_PACKAGE_ALSA_LIB_OLD_SYMBOLS boolean {
      prompt "old-symbols" if [BR2_PACKAGE_ALSA_LIB]
      default [y] if [BR2_PACKAGE_ALSA_LIB]
      inherited [BR2_PACKAGE_ALSA_LIB]
     }
    }
   }
   config BR2_PACKAGE_ALSA_UTILS boolean {
    prompt "alsa-utils" if [BR2_LARGEFILE && BR2_PACKAGE_ALSA_LIB]
    depends on [BR2_LARGEFILE]
    depends on [BR2_PACKAGE_ALSA_LIB]
    inherited [BR2_LARGEFILE && BR2_PACKAGE_ALSA_LIB]
   }
  }
  if [BR2_PACKAGE_ALSA_UTILS] {
   menu "ALSA utils selection" {
    depends on [BR2_PACKAGE_ALSA_UTILS]
    config BR2_PACKAGE_ALSA_UTILS_ALSACONF boolean {
     prompt "alsaconf" if [BR2_PACKAGE_ALSA_UTILS]
     inherited [BR2_PACKAGE_ALSA_UTILS]
    }
    config BR2_PACKAGE_ALSA_UTILS_ALSACTL boolean {
     prompt "alsactl" if [BR2_PACKAGE_ALSA_UTILS]
     default [y] if [BR2_PACKAGE_ALSA_UTILS]
     inherited [BR2_PACKAGE_ALSA_UTILS]
    }
    config BR2_PACKAGE_ALSA_UTILS_ALSAMIXER boolean {
     prompt "alsamixer" if [BR2_PACKAGE_ALSA_UTILS && BR2_USE_WCHAR]
     select BR2_PACKAGE_NCURSES if [BR2_PACKAGE_ALSA_UTILS && BR2_USE_WCHAR]
     select BR2_PACKAGE_NCURSES_TARGET_PANEL if [BR2_PACKAGE_ALSA_UTILS && BR2_USE_WCHAR]
     select BR2_PACKAGE_NCURSES_TARGET_FORM if [BR2_PACKAGE_ALSA_UTILS && BR2_USE_WCHAR]
     select BR2_PACKAGE_NCURSES_TARGET_MENU if [BR2_PACKAGE_ALSA_UTILS && BR2_USE_WCHAR]
     depends on [BR2_USE_WCHAR]
     default [y] if [BR2_PACKAGE_ALSA_UTILS && BR2_USE_WCHAR]
     inherited [BR2_PACKAGE_ALSA_UTILS && BR2_USE_WCHAR]
    }
    config BR2_PACKAGE_ALSA_UTILS_AMIDI boolean {
     prompt "amidi" if [BR2_PACKAGE_ALSA_UTILS]
     inherited [BR2_PACKAGE_ALSA_UTILS]
    }
    config BR2_PACKAGE_ALSA_UTILS_AMIXER boolean {
     prompt "amixer" if [BR2_PACKAGE_ALSA_UTILS]
     inherited [BR2_PACKAGE_ALSA_UTILS]
    }
    config BR2_PACKAGE_ALSA_UTILS_APLAY boolean {
     prompt "aplay" if [BR2_PACKAGE_ALSA_UTILS]
     inherited [BR2_PACKAGE_ALSA_UTILS]
    }
    config BR2_PACKAGE_ALSA_UTILS_ARECORD boolean {
     prompt "arecord" if [BR2_PACKAGE_ALSA_UTILS]
     inherited [BR2_PACKAGE_ALSA_UTILS]
    }
    config BR2_PACKAGE_ALSA_UTILS_IECSET boolean {
     prompt "iecset" if [BR2_PACKAGE_ALSA_UTILS]
     inherited [BR2_PACKAGE_ALSA_UTILS]
    }
    config BR2_PACKAGE_ALSA_UTILS_ACONNECT boolean {
     prompt "aconnect" if [BR2_PACKAGE_ALSA_UTILS]
     inherited [BR2_PACKAGE_ALSA_UTILS]
    }
    config BR2_PACKAGE_ALSA_UTILS_APLAYMIDI boolean {
     prompt "aplaymidi" if [BR2_PACKAGE_ALSA_UTILS]
     inherited [BR2_PACKAGE_ALSA_UTILS]
    }
    config BR2_PACKAGE_ALSA_UTILS_ARECORDMIDI boolean {
     prompt "arecordmidi" if [BR2_PACKAGE_ALSA_UTILS]
     inherited [BR2_PACKAGE_ALSA_UTILS]
    }
    config BR2_PACKAGE_ALSA_UTILS_ASEQDUMP boolean {
     prompt "aseqdump" if [BR2_PACKAGE_ALSA_UTILS]
     inherited [BR2_PACKAGE_ALSA_UTILS]
    }
    config BR2_PACKAGE_ALSA_UTILS_ASEQNET boolean {
     prompt "aseqnet" if [BR2_PACKAGE_ALSA_UTILS]
     inherited [BR2_PACKAGE_ALSA_UTILS]
    }
    config BR2_PACKAGE_ALSA_UTILS_SPEAKER_TEST boolean {
     prompt "speaker-test" if [BR2_PACKAGE_ALSA_UTILS]
     inherited [BR2_PACKAGE_ALSA_UTILS]
    }
   }
  }
  config BR2_PACKAGE_AUMIX boolean {
   prompt "aumix" if []
   select BR2_PACKAGE_NCURSES if []
  }
  config BR2_PACKAGE_FLAC boolean {
   prompt "flac" if []
  }
  menuconfig BR2_PACKAGE_FFMPEG boolean {
   prompt "ffmpeg" if [BR2_LARGEFILE]
   depends on [BR2_LARGEFILE]
   inherited [BR2_LARGEFILE]
   if [BR2_PACKAGE_FFMPEG] {
    config BR2_PACKAGE_FFMPEG_GPL boolean {
     prompt "Enable GPL code" if [BR2_PACKAGE_FFMPEG]
     inherited [BR2_PACKAGE_FFMPEG]
    }
    config BR2_PACKAGE_FFMPEG_NONFREE boolean {
     prompt "Enable nonfree code" if [BR2_PACKAGE_FFMPEG]
     inherited [BR2_PACKAGE_FFMPEG]
    }
    config BR2_PACKAGE_FFMPEG_FFMPEG boolean {
     prompt "Build ffmpeg (the command line application)" if [BR2_PACKAGE_FFMPEG]
     default [y] if [BR2_PACKAGE_FFMPEG]
     inherited [BR2_PACKAGE_FFMPEG]
    }
    config BR2_PACKAGE_FFMPEG_FFPLAY boolean {
     prompt "Build ffplay" if [BR2_PACKAGE_FFMPEG]
     select BR2_PACKAGE_SDL if [BR2_PACKAGE_FFMPEG]
     inherited [BR2_PACKAGE_FFMPEG]
    }
    config BR2_PACKAGE_FFMPEG_FFSERVER boolean {
     prompt "Build ffserver" if [BR2_PACKAGE_FFMPEG]
     inherited [BR2_PACKAGE_FFMPEG]
    }
    config BR2_PACKAGE_FFMPEG_ENCODERS string {
     prompt "Enabled encoders" if [BR2_PACKAGE_FFMPEG]
     default ["all"] if [BR2_PACKAGE_FFMPEG]
     inherited [BR2_PACKAGE_FFMPEG]
    }
    config BR2_PACKAGE_FFMPEG_DECODERS string {
     prompt "Enabled decoders" if [BR2_PACKAGE_FFMPEG]
     default ["all"] if [BR2_PACKAGE_FFMPEG]
     inherited [BR2_PACKAGE_FFMPEG]
    }
    config BR2_PACKAGE_FFMPEG_MUXERS string {
     prompt "Enabled muxers" if [BR2_PACKAGE_FFMPEG]
     default ["all"] if [BR2_PACKAGE_FFMPEG]
     inherited [BR2_PACKAGE_FFMPEG]
    }
    config BR2_PACKAGE_FFMPEG_DEMUXERS string {
     prompt "Enabled demuxers" if [BR2_PACKAGE_FFMPEG]
     default ["all"] if [BR2_PACKAGE_FFMPEG]
     inherited [BR2_PACKAGE_FFMPEG]
    }
    config BR2_PACKAGE_FFMPEG_PARSERS string {
     prompt "Enabled parsers" if [BR2_PACKAGE_FFMPEG]
     default ["all"] if [BR2_PACKAGE_FFMPEG]
     inherited [BR2_PACKAGE_FFMPEG]
    }
    config BR2_PACKAGE_FFMPEG_BSFS string {
     prompt "Enabled bitstreams" if [BR2_PACKAGE_FFMPEG]
     default ["all"] if [BR2_PACKAGE_FFMPEG]
     inherited [BR2_PACKAGE_FFMPEG]
    }
    config BR2_PACKAGE_FFMPEG_PROTOCOLS string {
     prompt "Enabled protocols" if [BR2_PACKAGE_FFMPEG]
     default ["all"] if [BR2_PACKAGE_FFMPEG]
     inherited [BR2_PACKAGE_FFMPEG]
    }
    config BR2_PACKAGE_FFMPEG_FILTERS string {
     prompt "Enabled filters" if [BR2_PACKAGE_FFMPEG]
     default ["all"] if [BR2_PACKAGE_FFMPEG]
     inherited [BR2_PACKAGE_FFMPEG]
    }
    config BR2_PACKAGE_FFMPEG_INDEVS boolean {
     prompt "Enable input devices" if [BR2_PACKAGE_FFMPEG]
     default [y] if [BR2_PACKAGE_FFMPEG]
     inherited [BR2_PACKAGE_FFMPEG]
    }
    config BR2_PACKAGE_FFMPEG_OUTDEVS boolean {
     prompt "Enable output devices" if [BR2_PACKAGE_FFMPEG]
     default [y] if [BR2_PACKAGE_FFMPEG]
     inherited [BR2_PACKAGE_FFMPEG]
    }
    config BR2_PACKAGE_FFMPEG_EXTRACONF string {
     prompt "Additional parameters for ./configure" if [BR2_PACKAGE_FFMPEG]
     default [""] if [BR2_PACKAGE_FFMPEG]
     inherited [BR2_PACKAGE_FFMPEG]
    }
   }
  }
  config BR2_PACKAGE_GSTREAMER boolean {
   prompt "gstreamer" if [BR2_USE_WCHAR]
   depends on [BR2_USE_WCHAR]
   select BR2_PACKAGE_LIBGLIB2 if [BR2_USE_WCHAR]
   inherited [BR2_USE_WCHAR]
  }
  config BR2_PACKAGE_GSTREAMER_LIBXML2 boolean {
   prompt "require libxml2 for registry and load/save" if [BR2_PACKAGE_GSTREAMER]
   default [y] if [BR2_PACKAGE_GSTREAMER]
   select BR2_PACKAGE_LIBXML2 if [BR2_PACKAGE_GSTREAMER]
   depends on [BR2_PACKAGE_GSTREAMER]
   inherited [BR2_PACKAGE_GSTREAMER]
  }
  menuconfig BR2_PACKAGE_GST_PLUGINS_BASE boolean {
   prompt "gst-plugins-base" if [BR2_PACKAGE_GSTREAMER]
   depends on [BR2_PACKAGE_GSTREAMER]
   select BR2_PACKAGE_LIBOIL if [BR2_PACKAGE_GSTREAMER]
   inherited [BR2_PACKAGE_GSTREAMER]
   if [BR2_PACKAGE_GST_PLUGINS_BASE] {
    config BR2_PACKAGE_GST_PLUGINS_BASE_PLUGIN_ADDER boolean {
     prompt "adder" if [BR2_PACKAGE_GST_PLUGINS_BASE]
     inherited [BR2_PACKAGE_GST_PLUGINS_BASE]
    }
    config BR2_PACKAGE_GST_PLUGINS_BASE_PLUGIN_APP boolean {
     prompt "app" if [BR2_PACKAGE_GST_PLUGINS_BASE]
     inherited [BR2_PACKAGE_GST_PLUGINS_BASE]
    }
    config BR2_PACKAGE_GST_PLUGINS_BASE_PLUGIN_AUDIOCONVERT boolean {
     prompt "audioconvert (mandatory for audio playback)" if [BR2_PACKAGE_GST_PLUGINS_BASE]
     default [y] if [BR2_PACKAGE_GST_PLUGINS_BASE]
     inherited [BR2_PACKAGE_GST_PLUGINS_BASE]
    }
    config BR2_PACKAGE_GST_PLUGINS_BASE_PLUGIN_AUDIORATE boolean {
     prompt "audiorate" if [BR2_PACKAGE_GST_PLUGINS_BASE]
     inherited [BR2_PACKAGE_GST_PLUGINS_BASE]
    }
    config BR2_PACKAGE_GST_PLUGINS_BASE_PLUGIN_AUDIORESAMPLE boolean {
     prompt "audioresample (mandatory for audio playback)" if [BR2_PACKAGE_GST_PLUGINS_BASE]
     default [y] if [BR2_PACKAGE_GST_PLUGINS_BASE]
     inherited [BR2_PACKAGE_GST_PLUGINS_BASE]
    }
    config BR2_PACKAGE_GST_PLUGINS_BASE_PLUGIN_AUDIOTESTSRC boolean {
     prompt "audiotestsrc" if [BR2_PACKAGE_GST_PLUGINS_BASE]
     inherited [BR2_PACKAGE_GST_PLUGINS_BASE]
    }
    config BR2_PACKAGE_GST_PLUGINS_BASE_PLUGIN_FFMPEGCOLORSPACE boolean {
     prompt "ffmpegcolorspace (mandatory for video playback)" if [BR2_PACKAGE_GST_PLUGINS_BASE]
     default [y] if [BR2_PACKAGE_GST_PLUGINS_BASE]
     inherited [BR2_PACKAGE_GST_PLUGINS_BASE]
    }
    config BR2_PACKAGE_GST_PLUGINS_BASE_PLUGIN_GDP boolean {
     prompt "gdp" if [BR2_PACKAGE_GST_PLUGINS_BASE]
     inherited [BR2_PACKAGE_GST_PLUGINS_BASE]
    }
    config BR2_PACKAGE_GST_PLUGINS_BASE_PLUGIN_PLAYBACK boolean {
     prompt "playback (mandatory)" if [BR2_PACKAGE_GST_PLUGINS_BASE]
     default [y] if [BR2_PACKAGE_GST_PLUGINS_BASE]
     inherited [BR2_PACKAGE_GST_PLUGINS_BASE]
    }
    config BR2_PACKAGE_GST_PLUGINS_BASE_PLUGIN_SUBPARSE boolean {
     prompt "subparse" if [BR2_PACKAGE_GST_PLUGINS_BASE]
     inherited [BR2_PACKAGE_GST_PLUGINS_BASE]
    }
    config BR2_PACKAGE_GST_PLUGINS_BASE_PLUGIN_TCP boolean {
     prompt "tcp" if [BR2_PACKAGE_GST_PLUGINS_BASE]
     inherited [BR2_PACKAGE_GST_PLUGINS_BASE]
    }
    config BR2_PACKAGE_GST_PLUGINS_BASE_PLUGIN_TYPEFIND boolean {
     prompt "typefind (mandatory)" if [BR2_PACKAGE_GST_PLUGINS_BASE]
     default [y] if [BR2_PACKAGE_GST_PLUGINS_BASE]
     inherited [BR2_PACKAGE_GST_PLUGINS_BASE]
    }
    config BR2_PACKAGE_GST_PLUGINS_BASE_PLUGIN_VIDEOTESTSRC boolean {
     prompt "videotestsrc" if [BR2_PACKAGE_GST_PLUGINS_BASE]
     inherited [BR2_PACKAGE_GST_PLUGINS_BASE]
    }
    config BR2_PACKAGE_GST_PLUGINS_BASE_PLUGIN_VIDEORATE boolean {
     prompt "videorate" if [BR2_PACKAGE_GST_PLUGINS_BASE]
     inherited [BR2_PACKAGE_GST_PLUGINS_BASE]
    }
    config BR2_PACKAGE_GST_PLUGINS_BASE_PLUGIN_VIDEOSCALE boolean {
     prompt "videoscale (mandatory for video playback)" if [BR2_PACKAGE_GST_PLUGINS_BASE]
     default [y] if [BR2_PACKAGE_GST_PLUGINS_BASE]
     inherited [BR2_PACKAGE_GST_PLUGINS_BASE]
    }
    config BR2_PACKAGE_GST_PLUGINS_BASE_PLUGIN_VOLUME boolean {
     prompt "volume (mandatory for audio playback)" if [BR2_PACKAGE_GST_PLUGINS_BASE]
     default [y] if [BR2_PACKAGE_GST_PLUGINS_BASE]
     inherited [BR2_PACKAGE_GST_PLUGINS_BASE]
    }
    config BR2_PACKAGE_GST_PLUGINS_BASE_PLUGIN_OGG boolean {
     prompt "ogg (*.ogg audio/video)" if [BR2_PACKAGE_GST_PLUGINS_BASE]
     select BR2_PACKAGE_LIBOGG if [BR2_PACKAGE_GST_PLUGINS_BASE]
     inherited [BR2_PACKAGE_GST_PLUGINS_BASE]
    }
    config BR2_PACKAGE_GST_PLUGINS_BASE_PLUGIN_PANGO boolean {
     prompt "pango font renderer" if [BR2_PACKAGE_GST_PLUGINS_BASE && BR2_INSTALL_LIBSTDCPP]
     depends on [BR2_INSTALL_LIBSTDCPP]
     select BR2_PACKAGE_PANGO if [BR2_PACKAGE_GST_PLUGINS_BASE && BR2_INSTALL_LIBSTDCPP]
     inherited [BR2_PACKAGE_GST_PLUGINS_BASE && BR2_INSTALL_LIBSTDCPP]
    }
    config BR2_PACKAGE_GST_PLUGINS_BASE_PLUGIN_THEORA boolean {
     prompt "theora (*.ogg video)" if [BR2_PACKAGE_GST_PLUGINS_BASE]
     select BR2_PACKAGE_LIBTHEORA if [BR2_PACKAGE_GST_PLUGINS_BASE]
     inherited [BR2_PACKAGE_GST_PLUGINS_BASE]
    }
    config BR2_PACKAGE_GST_PLUGINS_BASE_PLUGIN_VORBIS boolean {
     prompt "vorbis (*.ogg audio)" if [BR2_PACKAGE_GST_PLUGINS_BASE]
     select BR2_PACKAGE_LIBVORBIS if [BR2_PACKAGE_GST_PLUGINS_BASE]
     inherited [BR2_PACKAGE_GST_PLUGINS_BASE]
    }
   }
  }
  menuconfig BR2_PACKAGE_GST_PLUGINS_GOOD boolean {
   prompt "gst-plugins-good" if [BR2_PACKAGE_GSTREAMER]
   depends on [BR2_PACKAGE_GSTREAMER]
   select BR2_PACKAGE_GST_PLUGINS_BASE if [BR2_PACKAGE_GSTREAMER]
   inherited [BR2_PACKAGE_GSTREAMER]
   if [BR2_PACKAGE_GST_PLUGINS_GOOD] {
    config BR2_PACKAGE_GST_PLUGINS_GOOD_JPEG boolean {
     prompt "jpeg (JPEG support)" if [BR2_PACKAGE_GST_PLUGINS_GOOD]
     select BR2_PACKAGE_JPEG if [BR2_PACKAGE_GST_PLUGINS_GOOD]
     inherited [BR2_PACKAGE_GST_PLUGINS_GOOD]
    }
    config BR2_PACKAGE_GST_PLUGINS_GOOD_PNG boolean {
     prompt "png (PNG support)" if [BR2_PACKAGE_GST_PLUGINS_GOOD]
     select BR2_PACKAGE_LIBPNG if [BR2_PACKAGE_GST_PLUGINS_GOOD]
     inherited [BR2_PACKAGE_GST_PLUGINS_GOOD]
    }
    config BR2_PACKAGE_GST_PLUGINS_GOOD_BZ2 boolean {
     prompt "bz2 support" if [BR2_PACKAGE_GST_PLUGINS_GOOD && BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_MATROSKA]
     depends on [BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_MATROSKA]
     select BR2_PACKAGE_BZIP2 if [BR2_PACKAGE_GST_PLUGINS_GOOD && BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_MATROSKA]
     inherited [BR2_PACKAGE_GST_PLUGINS_GOOD && BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_MATROSKA]
    }
    config BR2_PACKAGE_GST_PLUGINS_GOOD_ZLIB boolean {
     prompt "zlib support" if [BR2_PACKAGE_GST_PLUGINS_GOOD && (BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_QTDEMUX || BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_ID3DEMUX || BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_MATROSKA)]
     depends on [BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_QTDEMUX || BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_ID3DEMUX || BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_MATROSKA]
     select BR2_PACKAGE_ZLIB if [BR2_PACKAGE_GST_PLUGINS_GOOD && (BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_QTDEMUX || BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_ID3DEMUX || BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_MATROSKA)]
     inherited [BR2_PACKAGE_GST_PLUGINS_GOOD && (BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_QTDEMUX || BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_ID3DEMUX || BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_MATROSKA)]
    }
    config BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_VIDEOFILTER boolean {
     prompt "videofilter" if [BR2_PACKAGE_GST_PLUGINS_GOOD]
     inherited [BR2_PACKAGE_GST_PLUGINS_GOOD]
    }
    config BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_ALPHA boolean {
     prompt "alpha" if [BR2_PACKAGE_GST_PLUGINS_GOOD]
     inherited [BR2_PACKAGE_GST_PLUGINS_GOOD]
    }
    config BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_APETAG boolean {
     prompt "apetag" if [BR2_PACKAGE_GST_PLUGINS_GOOD]
     inherited [BR2_PACKAGE_GST_PLUGINS_GOOD]
    }
    config BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_AUDIOFX boolean {
     prompt "audiofx" if [BR2_PACKAGE_GST_PLUGINS_GOOD]
     inherited [BR2_PACKAGE_GST_PLUGINS_GOOD]
    }
    config BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_AUPARSE boolean {
     prompt "auparse" if [BR2_PACKAGE_GST_PLUGINS_GOOD]
     inherited [BR2_PACKAGE_GST_PLUGINS_GOOD]
    }
    config BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_AUTODETECT boolean {
     prompt "autodetect" if [BR2_PACKAGE_GST_PLUGINS_GOOD]
     inherited [BR2_PACKAGE_GST_PLUGINS_GOOD]
    }
    config BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_AVI boolean {
     prompt "avi (*.avi video)" if [BR2_PACKAGE_GST_PLUGINS_GOOD]
     default [y] if [BR2_PACKAGE_GST_PLUGINS_GOOD]
     inherited [BR2_PACKAGE_GST_PLUGINS_GOOD]
    }
    config BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_CUTTER boolean {
     prompt "cutter" if [BR2_PACKAGE_GST_PLUGINS_GOOD]
     inherited [BR2_PACKAGE_GST_PLUGINS_GOOD]
    }
    config BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_DEBUGUTILS boolean {
     prompt "debugutils" if [BR2_PACKAGE_GST_PLUGINS_GOOD]
     inherited [BR2_PACKAGE_GST_PLUGINS_GOOD]
    }
    config BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_DEINTERLACE boolean {
     prompt "deinterlace" if [BR2_PACKAGE_GST_PLUGINS_GOOD]
     inherited [BR2_PACKAGE_GST_PLUGINS_GOOD]
    }
    config BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_EFFECTV boolean {
     prompt "effectv" if [BR2_PACKAGE_GST_PLUGINS_GOOD]
     inherited [BR2_PACKAGE_GST_PLUGINS_GOOD]
    }
    config BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_EQUALIZER boolean {
     prompt "equalizer" if [BR2_PACKAGE_GST_PLUGINS_GOOD]
     inherited [BR2_PACKAGE_GST_PLUGINS_GOOD]
    }
    config BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_FLV boolean {
     prompt "flv" if [BR2_PACKAGE_GST_PLUGINS_GOOD]
     inherited [BR2_PACKAGE_GST_PLUGINS_GOOD]
    }
    config BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_ID3DEMUX boolean {
     prompt "id3demux (*.mp3 audio)" if [BR2_PACKAGE_GST_PLUGINS_GOOD]
     inherited [BR2_PACKAGE_GST_PLUGINS_GOOD]
    }
    config BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_ICYDEMUX boolean {
     prompt "icydemux" if [BR2_PACKAGE_GST_PLUGINS_GOOD]
     inherited [BR2_PACKAGE_GST_PLUGINS_GOOD]
    }
    config BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_INTERLEAVE boolean {
     prompt "interleave" if [BR2_PACKAGE_GST_PLUGINS_GOOD]
     inherited [BR2_PACKAGE_GST_PLUGINS_GOOD]
    }
    config BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_FLX boolean {
     prompt "flx" if [BR2_PACKAGE_GST_PLUGINS_GOOD]
     inherited [BR2_PACKAGE_GST_PLUGINS_GOOD]
    }
    config BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_GOOM boolean {
     prompt "goom" if [BR2_PACKAGE_GST_PLUGINS_GOOD]
     inherited [BR2_PACKAGE_GST_PLUGINS_GOOD]
    }
    config BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_GOOM2K1 boolean {
     prompt "goom2k1" if [BR2_PACKAGE_GST_PLUGINS_GOOD]
     inherited [BR2_PACKAGE_GST_PLUGINS_GOOD]
    }
    config BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_LAW boolean {
     prompt "law" if [BR2_PACKAGE_GST_PLUGINS_GOOD]
     inherited [BR2_PACKAGE_GST_PLUGINS_GOOD]
    }
    config BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_LEVEL boolean {
     prompt "level" if [BR2_PACKAGE_GST_PLUGINS_GOOD]
     inherited [BR2_PACKAGE_GST_PLUGINS_GOOD]
    }
    config BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_MATROSKA boolean {
     prompt "matroska" if [BR2_PACKAGE_GST_PLUGINS_GOOD]
     inherited [BR2_PACKAGE_GST_PLUGINS_GOOD]
    }
    config BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_MONOSCOPE boolean {
     prompt "monoscope" if [BR2_PACKAGE_GST_PLUGINS_GOOD]
     inherited [BR2_PACKAGE_GST_PLUGINS_GOOD]
    }
    config BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_MULTIFILE boolean {
     prompt "multifile" if [BR2_PACKAGE_GST_PLUGINS_GOOD]
     inherited [BR2_PACKAGE_GST_PLUGINS_GOOD]
    }
    config BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_MULTIPART boolean {
     prompt "multipart" if [BR2_PACKAGE_GST_PLUGINS_GOOD]
     inherited [BR2_PACKAGE_GST_PLUGINS_GOOD]
    }
    config BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_QTDEMUX boolean {
     prompt "qtdemux" if [BR2_PACKAGE_GST_PLUGINS_GOOD]
     inherited [BR2_PACKAGE_GST_PLUGINS_GOOD]
    }
    config BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_REPLAYGAIN boolean {
     prompt "replaygain" if [BR2_PACKAGE_GST_PLUGINS_GOOD]
     inherited [BR2_PACKAGE_GST_PLUGINS_GOOD]
    }
    config BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_RTP boolean {
     prompt "rtp" if [BR2_PACKAGE_GST_PLUGINS_GOOD]
     inherited [BR2_PACKAGE_GST_PLUGINS_GOOD]
    }
    config BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_RTPMANAGER boolean {
     prompt "rtpmanager" if [BR2_PACKAGE_GST_PLUGINS_GOOD]
     inherited [BR2_PACKAGE_GST_PLUGINS_GOOD]
    }
    config BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_RTSP boolean {
     prompt "rtsp" if [BR2_PACKAGE_GST_PLUGINS_GOOD]
     inherited [BR2_PACKAGE_GST_PLUGINS_GOOD]
    }
    config BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_SMPTE boolean {
     prompt "smpte" if [BR2_PACKAGE_GST_PLUGINS_GOOD]
     inherited [BR2_PACKAGE_GST_PLUGINS_GOOD]
    }
    config BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_SPECTRUM boolean {
     prompt "spectrum" if [BR2_PACKAGE_GST_PLUGINS_GOOD]
     inherited [BR2_PACKAGE_GST_PLUGINS_GOOD]
    }
    config BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_UDP boolean {
     depends on [BR2_INET_IPV6]
     prompt "udp" if [BR2_PACKAGE_GST_PLUGINS_GOOD && BR2_INET_IPV6]
     inherited [BR2_PACKAGE_GST_PLUGINS_GOOD && BR2_INET_IPV6]
    }
    config BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_VIDEOBOX boolean {
     prompt "videobox" if [BR2_PACKAGE_GST_PLUGINS_GOOD]
     inherited [BR2_PACKAGE_GST_PLUGINS_GOOD]
    }
    config BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_VIDEOCROP boolean {
     prompt "videocrop" if [BR2_PACKAGE_GST_PLUGINS_GOOD]
     inherited [BR2_PACKAGE_GST_PLUGINS_GOOD]
    }
    config BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_VIDEOMIXER boolean {
     prompt "videomixer" if [BR2_PACKAGE_GST_PLUGINS_GOOD]
     inherited [BR2_PACKAGE_GST_PLUGINS_GOOD]
    }
    config BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_WAVENC boolean {
     prompt "wavenc" if [BR2_PACKAGE_GST_PLUGINS_GOOD]
     inherited [BR2_PACKAGE_GST_PLUGINS_GOOD]
    }
    config BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_WAVPARSE boolean {
     prompt "wavparse (*.wav audio)" if [BR2_PACKAGE_GST_PLUGINS_GOOD]
     default [y] if [BR2_PACKAGE_GST_PLUGINS_GOOD]
     inherited [BR2_PACKAGE_GST_PLUGINS_GOOD]
    }
    config BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_Y4M boolean {
     prompt "y4m" if [BR2_PACKAGE_GST_PLUGINS_GOOD]
     inherited [BR2_PACKAGE_GST_PLUGINS_GOOD]
    }
    config BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_ANNODEX boolean {
     prompt "annodex (XML Library)" if [BR2_PACKAGE_GST_PLUGINS_GOOD]
     select BR2_PACKAGE_LIBXML2 if [BR2_PACKAGE_GST_PLUGINS_GOOD]
     inherited [BR2_PACKAGE_GST_PLUGINS_GOOD]
    }
    config BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_FLAC boolean {
     prompt "flac (libFLAC)" if [BR2_PACKAGE_GST_PLUGINS_GOOD]
     select BR2_PACKAGE_FLAC if [BR2_PACKAGE_GST_PLUGINS_GOOD]
     inherited [BR2_PACKAGE_GST_PLUGINS_GOOD]
    }
    config BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_OSS boolean {
     prompt "ossaudio (OSS audio)" if [BR2_PACKAGE_GST_PLUGINS_GOOD]
     inherited [BR2_PACKAGE_GST_PLUGINS_GOOD]
    }
    config BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_SOUPHTTPSRC boolean {
     prompt "souphttpsrc (http client)" if [BR2_PACKAGE_GST_PLUGINS_GOOD]
     select BR2_PACKAGE_LIBSOUP if [BR2_PACKAGE_GST_PLUGINS_GOOD]
     inherited [BR2_PACKAGE_GST_PLUGINS_GOOD]
    }
    config BR2_PACKAGE_GST_PLUGINS_GOOD_PLUGIN_SPEEX boolean {
     prompt "speex" if [BR2_PACKAGE_GST_PLUGINS_GOOD]
     select BR2_PACKAGE_SPEEX if [BR2_PACKAGE_GST_PLUGINS_GOOD]
     inherited [BR2_PACKAGE_GST_PLUGINS_GOOD]
    }
   }
  }
  menuconfig BR2_PACKAGE_GST_PLUGINS_BAD boolean {
   prompt "gst-plugins-bad" if [BR2_PACKAGE_GSTREAMER]
   depends on [BR2_PACKAGE_GSTREAMER]
   select BR2_PACKAGE_GST_PLUGINS_BASE if [BR2_PACKAGE_GSTREAMER]
   inherited [BR2_PACKAGE_GSTREAMER]
   if [BR2_PACKAGE_GST_PLUGINS_BAD] {
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_AACPARSE boolean {
     prompt "aacparse" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_AIFFPARSE boolean {
     prompt "aiffparse" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_AMRPARSE boolean {
     prompt "amrparse" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_ASFMUX boolean {
     prompt "asfmux" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_APEXSINK boolean {
     prompt "apexsink" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     select BR2_PACKAGE_OPENSSL if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_AUTOCONVERT boolean {
     prompt "autoconvert" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_CAMERABIN boolean {
     prompt "camerabin" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_LEGACYRESAMPLE boolean {
     prompt "legacyresample" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_BAYER boolean {
     prompt "bayer" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_CDAUDIO boolean {
     prompt "cdaudio" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     select BR2_PACKAGE_LIBCDAUDIO if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_CDXAPARSE boolean {
     prompt "cdxaparse" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_DCCP boolean {
     prompt "dccp" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_DEBUGUTILS boolean {
     prompt "debugutils" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_DTMF boolean {
     prompt "dtmf" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_DVDNAV boolean {
     prompt "dvdnav" if [BR2_PACKAGE_GST_PLUGINS_BAD && BR2_LARGEFILE]
     depends on [BR2_LARGEFILE]
     select BR2_PACKAGE_LIBDVDNAV if [BR2_PACKAGE_GST_PLUGINS_BAD && BR2_LARGEFILE]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD && BR2_LARGEFILE]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_DVDSPU boolean {
     prompt "dvdspu" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_FESTIVAL boolean {
     prompt "festival" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_FREEZE boolean {
     prompt "freeze" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_FREI0R boolean {
     prompt "frei0r" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_H264PARSE boolean {
     prompt "h264parse" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_HDVPARSE boolean {
     prompt "hdvparse" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_LIBRFB boolean {
     prompt "librfb" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_LIVEADDER boolean {
     prompt "liveadder" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_MPEGDEMUX boolean {
     prompt "mpegdemux" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_MPEGTSMUX boolean {
     prompt "mpegtsmux" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_MPEG4VIDEOPARSE boolean {
     prompt "mpeg4videoparse" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_MPEGVIDEOPARSE boolean {
     prompt "mpegvideoparse" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_MVE boolean {
     prompt "mve" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_MXF boolean {
     prompt "mxf" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_NSF boolean {
     prompt "nsf" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_NUVDEMUX boolean {
     prompt "nuvdemux" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_PCAPPARSE boolean {
     prompt "pcapparse" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_QTMUX boolean {
     prompt "qtmux" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_RAWPARSE boolean {
     prompt "rawparse" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_REAL boolean {
     prompt "real" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_RTPMANAGER boolean {
     prompt "rtpmanager" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_RTPMUX boolean {
     prompt "rtpmux" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_SCALETEMPO boolean {
     prompt "scaletempo" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_SDP boolean {
     prompt "sdp" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_SELECTOR boolean {
     prompt "selector" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_SHAPEWIPE boolean {
     prompt "shapewipe" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_SIREN boolean {
     prompt "siren" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_SPEED boolean {
     prompt "speed" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_SUBENC boolean {
     prompt "subenc" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_STEREO boolean {
     prompt "stereo" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_TTA boolean {
     prompt "tta" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_VALVE boolean {
     prompt "valve" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_VIDEOSIGNAL boolean {
     prompt "videosignal" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_VMNC boolean {
     prompt "vmnc" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_XDGMIME boolean {
     prompt "xdgmime" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_DIRECTFB boolean {
     prompt "directfb" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     select BR2_PACKAGE_DIRECTFB if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_DVB boolean {
     prompt "dvb" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_FBDEV boolean {
     prompt "fbdev" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_NEON boolean {
     prompt "neon" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     select BR2_PACKAGE_NEON if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_OSS4 boolean {
     prompt "oss4" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_SDL boolean {
     prompt "sdl" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     select BR2_PACKAGE_SDL if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_TREMOR boolean {
     prompt "tremor" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     select BR2_PACKAGE_TREMOR if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
    config BR2_PACKAGE_GST_PLUGINS_BAD_PLUGIN_VCD boolean {
     prompt "vcd" if [BR2_PACKAGE_GST_PLUGINS_BAD]
     inherited [BR2_PACKAGE_GST_PLUGINS_BAD]
    }
   }
  }
  menuconfig BR2_PACKAGE_GST_PLUGINS_UGLY boolean {
   prompt "gst-plugins-ugly" if [BR2_PACKAGE_GSTREAMER]
   depends on [BR2_PACKAGE_GSTREAMER]
   select BR2_PACKAGE_GST_PLUGINS_BASE if [BR2_PACKAGE_GSTREAMER]
   inherited [BR2_PACKAGE_GSTREAMER]
   if [BR2_PACKAGE_GST_PLUGINS_UGLY] {
    config BR2_PACKAGE_GST_PLUGINS_UGLY_PLUGIN_ASFDEMUX boolean {
     prompt "asfdemux" if [BR2_PACKAGE_GST_PLUGINS_UGLY]
     inherited [BR2_PACKAGE_GST_PLUGINS_UGLY]
    }
    config BR2_PACKAGE_GST_PLUGINS_UGLY_PLUGIN_DVDLPCMDEC boolean {
     prompt "dvdlpcmdec" if [BR2_PACKAGE_GST_PLUGINS_UGLY]
     inherited [BR2_PACKAGE_GST_PLUGINS_UGLY]
    }
    config BR2_PACKAGE_GST_PLUGINS_UGLY_PLUGIN_DVDSUB boolean {
     prompt "dvdsub" if [BR2_PACKAGE_GST_PLUGINS_UGLY]
     inherited [BR2_PACKAGE_GST_PLUGINS_UGLY]
    }
    config BR2_PACKAGE_GST_PLUGINS_UGLY_PLUGIN_IEC958 boolean {
     prompt "iec958" if [BR2_PACKAGE_GST_PLUGINS_UGLY]
     inherited [BR2_PACKAGE_GST_PLUGINS_UGLY]
    }
    config BR2_PACKAGE_GST_PLUGINS_UGLY_PLUGIN_MPEGAUDIOPARSE boolean {
     prompt "mpegaudioparse" if [BR2_PACKAGE_GST_PLUGINS_UGLY]
     inherited [BR2_PACKAGE_GST_PLUGINS_UGLY]
    }
    config BR2_PACKAGE_GST_PLUGINS_UGLY_PLUGIN_MPEGSTREAM boolean {
     prompt "mpegstream" if [BR2_PACKAGE_GST_PLUGINS_UGLY]
     inherited [BR2_PACKAGE_GST_PLUGINS_UGLY]
    }
    config BR2_PACKAGE_GST_PLUGINS_UGLY_PLUGIN_REALMEDIA boolean {
     prompt "realmedia" if [BR2_PACKAGE_GST_PLUGINS_UGLY]
     inherited [BR2_PACKAGE_GST_PLUGINS_UGLY]
    }
    config BR2_PACKAGE_GST_PLUGINS_UGLY_PLUGIN_SYNAESTHESIA boolean {
     prompt "synaesthesia" if [BR2_PACKAGE_GST_PLUGINS_UGLY]
     inherited [BR2_PACKAGE_GST_PLUGINS_UGLY]
    }
    config BR2_PACKAGE_GST_PLUGINS_UGLY_PLUGIN_ID3TAG boolean {
     prompt "id3tag" if [BR2_PACKAGE_GST_PLUGINS_UGLY]
     select BR2_PACKAGE_LIBID3TAG if [BR2_PACKAGE_GST_PLUGINS_UGLY]
     inherited [BR2_PACKAGE_GST_PLUGINS_UGLY]
    }
    config BR2_PACKAGE_GST_PLUGINS_UGLY_PLUGIN_MAD boolean {
     prompt "mad (*.mp3 audio)" if [BR2_PACKAGE_GST_PLUGINS_UGLY]
     select BR2_PACKAGE_GST_PLUGINS_UGLY_PLUGIN_ID3TAG if [BR2_PACKAGE_GST_PLUGINS_UGLY]
     select BR2_PACKAGE_LIBMAD if [BR2_PACKAGE_GST_PLUGINS_UGLY]
     inherited [BR2_PACKAGE_GST_PLUGINS_UGLY]
    }
   }
  }
  config BR2_PACKAGE_LIBCDAUDIO boolean {
   prompt "libcdaudio" if []
  }
  config BR2_PACKAGE_LIBDVDREAD boolean {
   prompt "libdvdread" if [BR2_LARGEFILE]
   depends on [BR2_LARGEFILE]
   inherited [BR2_LARGEFILE]
  }
  config BR2_PACKAGE_LIBDVDNAV boolean {
   prompt "libdvdnav" if [BR2_LARGEFILE]
   depends on [BR2_LARGEFILE]
   select BR2_PACKAGE_LIBDVDREAD if [BR2_LARGEFILE]
   inherited [BR2_LARGEFILE]
  }
  config BR2_PACKAGE_LIBID3TAG boolean {
   prompt "libid3tag" if []
   select BR2_PACKAGE_ZLIB if []
  }
  config BR2_PACKAGE_LIBMAD boolean {
   prompt "libmad" if []
  }
  config BR2_PACKAGE_LIBMMS boolean {
   prompt "libmms" if [BR2_USE_WCHAR]
   depends on [BR2_USE_WCHAR]
   select BR2_PACKAGE_LIBGLIB2 if [BR2_USE_WCHAR]
   inherited [BR2_USE_WCHAR]
  }
  config BR2_PACKAGE_LIBMPD boolean {
   prompt "libmpd" if [BR2_USE_WCHAR]
   depends on [BR2_USE_WCHAR]
   select BR2_PACKAGE_LIBGLIB2 if [BR2_USE_WCHAR]
   select BR2_PACKAGE_LIBICONV if [BR2_USE_WCHAR && !BR2_ENABLE_LOCALE]
   inherited [BR2_USE_WCHAR]
  }
  config BR2_PACKAGE_LIBOGG boolean {
   prompt "libogg" if []
  }
  config BR2_PACKAGE_LIBSNDFILE boolean {
   prompt "libsndfile" if []
  }
  config BR2_PACKAGE_LIBTHEORA boolean {
   prompt "libtheora" if []
   select BR2_PACKAGE_LIBOGG if []
   select BR2_PACKAGE_LIBVORBIS if []
  }
  config BR2_PACKAGE_LIBVORBIS boolean {
   prompt "libvorbis" if []
   select BR2_PACKAGE_LIBOGG if []
  }
  config BR2_PACKAGE_MADPLAY boolean {
   prompt "madplay" if []
   select BR2_PACKAGE_LIBMAD if []
   select BR2_PACKAGE_LIBID3TAG if []
   config BR2_PACKAGE_MADPLAY_ALSA boolean {
    default [y] if [BR2_PACKAGE_MADPLAY && BR2_PACKAGE_ALSA_LIB]
    depends on [BR2_PACKAGE_MADPLAY && BR2_PACKAGE_ALSA_LIB]
    inherited [BR2_PACKAGE_MADPLAY && BR2_PACKAGE_ALSA_LIB]
   }
  }
  config BR2_PACKAGE_MPG123 boolean {
   prompt "mpg123" if []
  }
  config BR2_PACKAGE_MPLAYER boolean {
   prompt "mplayer" if []
   select BR2_PACKAGE_LIBMAD if []
  }
  config BR2_PACKAGE_SPEEX boolean {
   prompt "speex" if []
   select BR2_PACKAGE_LIBOGG if []
   config BR2_PACKAGE_SPEEX_ARM_GENERIC boolean {
    default [y] if [BR2_PACKAGE_SPEEX && (BR2_generic_arm || BR2_arm610 || BR2_arm710)]
    depends on [BR2_PACKAGE_SPEEX && (BR2_generic_arm || BR2_arm610 || BR2_arm710)]
    inherited [BR2_PACKAGE_SPEEX && (BR2_generic_arm || BR2_arm610 || BR2_arm710)]
   }
   config BR2_PACKAGE_SPEEX_ARM4 boolean {
    default [y] if [BR2_PACKAGE_SPEEX && (BR2_arm7tdmi || BR2_arm720t || BR2_arm920t || BR2_arm922t || BR2_sa110 || BR2_sa1100)]
    depends on [BR2_PACKAGE_SPEEX && (BR2_arm7tdmi || BR2_arm720t || BR2_arm920t || BR2_arm922t || BR2_sa110 || BR2_sa1100)]
    inherited [BR2_PACKAGE_SPEEX && (BR2_arm7tdmi || BR2_arm720t || BR2_arm920t || BR2_arm922t || BR2_sa110 || BR2_sa1100)]
   }
   config BR2_PACKAGE_SPEEX_ARM5E boolean {
    default [y] if [BR2_PACKAGE_SPEEX && BR2_arm && !BR2_PACKAGE_SPEEX_ARM_GENERIC && !BR2_PACKAGE_SPEEX_ARM4]
    depends on [BR2_PACKAGE_SPEEX && BR2_arm && !(BR2_PACKAGE_SPEEX_ARM_GENERIC || BR2_PACKAGE_SPEEX_ARM4)]
    inherited [BR2_PACKAGE_SPEEX && BR2_arm && !BR2_PACKAGE_SPEEX_ARM_GENERIC && !BR2_PACKAGE_SPEEX_ARM4]
   }
  }
  config BR2_PACKAGE_SWFDEC boolean {
   prompt "swfdec" if [BR2_USE_WCHAR && BR2_INSTALL_LIBSTDCPP]
   depends on [BR2_USE_WCHAR]
   depends on [BR2_INSTALL_LIBSTDCPP]
   select BR2_PACKAGE_LIBOIL if [BR2_USE_WCHAR && BR2_INSTALL_LIBSTDCPP]
   select BR2_PACKAGE_ALSA_LIB if [BR2_USE_WCHAR && BR2_INSTALL_LIBSTDCPP]
   select BR2_PACKAGE_PANGO if [BR2_USE_WCHAR && BR2_INSTALL_LIBSTDCPP]
   select BR2_PACKAGE_CAIRO if [BR2_USE_WCHAR && BR2_INSTALL_LIBSTDCPP]
   select BR2_PACKAGE_CAIRO_PNG if [BR2_USE_WCHAR && BR2_INSTALL_LIBSTDCPP]
   inherited [BR2_USE_WCHAR && BR2_INSTALL_LIBSTDCPP]
   config BR2_PACKAGE_SWFDEC_GTK_SUPPORT boolean {
    prompt "gtk support" if [BR2_PACKAGE_SWFDEC && BR2_PACKAGE_LIBGTK2]
    depends on [BR2_PACKAGE_SWFDEC]
    depends on [BR2_PACKAGE_LIBGTK2]
    select BR2_PACKAGE_LIBSOUP if [BR2_PACKAGE_SWFDEC && BR2_PACKAGE_LIBGTK2]
    default [y] if [BR2_PACKAGE_SWFDEC && BR2_PACKAGE_LIBGTK2]
    inherited [BR2_PACKAGE_SWFDEC && BR2_PACKAGE_LIBGTK2]
   }
   config BR2_PACKAGE_SWFDEC_GSTREAMER boolean {
    prompt "gstreamer support" if [BR2_PACKAGE_SWFDEC && BR2_PACKAGE_GSTREAMER]
    depends on [BR2_PACKAGE_SWFDEC]
    depends on [BR2_PACKAGE_GSTREAMER]
    select BR2_PACKAGE_GST_PLUGINS_BASE if [BR2_PACKAGE_SWFDEC && BR2_PACKAGE_GSTREAMER]
    default [y] if [BR2_PACKAGE_SWFDEC && BR2_PACKAGE_GSTREAMER]
    inherited [BR2_PACKAGE_SWFDEC && BR2_PACKAGE_GSTREAMER]
   }
  }
  menuconfig BR2_PACKAGE_FESTIVAL boolean {
   prompt "festival text-to-speech system" if [BR2_INSTALL_LIBSTDCPP]
   depends on [BR2_INSTALL_LIBSTDCPP]
   select BR2_PACKAGE_ALSA_LIB if [BR2_INSTALL_LIBSTDCPP]
   select BR2_PACKAGE_SPEECH_TOOLS if [BR2_INSTALL_LIBSTDCPP]
   inherited [BR2_INSTALL_LIBSTDCPP]
   if [BR2_PACKAGE_FESTIVAL] {
    menu "speech tools" {
     depends on [BR2_PACKAGE_FESTIVAL]
     config BR2_PACKAGE_SPEECH_TOOLS boolean {
      prompt "speech tools for festival" if [BR2_PACKAGE_FESTIVAL && BR2_INSTALL_LIBSTDCPP]
      depends on [BR2_INSTALL_LIBSTDCPP]
      inherited [BR2_PACKAGE_FESTIVAL && BR2_INSTALL_LIBSTDCPP]
     }
    }
    menu "festival lexicons" {
     depends on [BR2_PACKAGE_FESTIVAL]
     config BR2_PACKAGE_FESTLEX_CMU boolean {
      prompt "Carnegie Mellon University" if [BR2_PACKAGE_FESTIVAL]
      inherited [BR2_PACKAGE_FESTIVAL]
     }
     config BR2_PACKAGE_FESTLEX_OALD boolean {
      prompt "Oxford Advanced Learners dictionary" if [BR2_PACKAGE_FESTIVAL]
      inherited [BR2_PACKAGE_FESTIVAL]
     }
     config BR2_PACKAGE_FESTLEX_POS boolean {
      prompt "POSLEX" if [BR2_PACKAGE_FESTIVAL]
      inherited [BR2_PACKAGE_FESTIVAL]
     }
    }
    menu "festival voices" {
     depends on [BR2_PACKAGE_FESTIVAL]
     config BR2_PACKAGE_FESTVOX_AWB boolean {
      prompt "Alan Scottish English" if [BR2_PACKAGE_FESTIVAL]
      inherited [BR2_PACKAGE_FESTIVAL]
     }
     config BR2_PACKAGE_FESTVOX_BDL boolean {
      prompt "Brian US English" if [BR2_PACKAGE_FESTIVAL]
      inherited [BR2_PACKAGE_FESTIVAL]
     }
     config BR2_PACKAGE_FESTVOX_JMK boolean {
      prompt "John Canadian English" if [BR2_PACKAGE_FESTIVAL]
      inherited [BR2_PACKAGE_FESTIVAL]
     }
     config BR2_PACKAGE_FESTVOX_SLT boolean {
      prompt "Stephanie US English" if [BR2_PACKAGE_FESTIVAL]
      inherited [BR2_PACKAGE_FESTIVAL]
     }
     config BR2_PACKAGE_FESTVOX_AWB_MULTISYN boolean {
      prompt "Alan multisyn (big file)" if [BR2_PACKAGE_FESTIVAL]
      inherited [BR2_PACKAGE_FESTIVAL]
     }
     config BR2_PACKAGE_FESTVOX_JMK_MULTISYN boolean {
      prompt "John multisyn (big file)" if [BR2_PACKAGE_FESTIVAL]
      inherited [BR2_PACKAGE_FESTIVAL]
     }
     config BR2_PACKAGE_FESTVOX_KAL_SIXTEENK boolean {
      prompt "Kevin diphone US English 16k" if [BR2_PACKAGE_FESTIVAL]
      inherited [BR2_PACKAGE_FESTIVAL]
     }
     config BR2_PACKAGE_FESTVOX_KED_EIGHTK boolean {
      prompt "Kurt diphone American English 8k" if [BR2_PACKAGE_FESTIVAL]
      inherited [BR2_PACKAGE_FESTIVAL]
     }
     config BR2_PACKAGE_FESTVOX_KED_SIXTEENK boolean {
      prompt "Kurt diphone American English 16k" if [BR2_PACKAGE_FESTIVAL]
      inherited [BR2_PACKAGE_FESTIVAL]
     }
    }
   }
  }
  config BR2_PACKAGE_TAGLIB boolean {
   prompt "taglib" if [BR2_INSTALL_LIBSTDCPP]
   depends on [BR2_INSTALL_LIBSTDCPP]
   inherited [BR2_INSTALL_LIBSTDCPP]
  }
  config BR2_PACKAGE_TREMOR boolean {
   prompt "tremor (fixed point vorbis decoder)" if []
  }
  config BR2_PACKAGE_VLC boolean {
   prompt "vlc" if [BROKEN]
   depends on [BROKEN]
   inherited [BROKEN]
  }
 }
 menu "Compressors and decompressors" {
  if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS] {
   config BR2_PACKAGE_BZIP2 boolean {
    prompt "bzip2" if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS]
    inherited [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS]
   }
   config BR2_PACKAGE_GZIP boolean {
    prompt "gzip" if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS]
    inherited [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS]
   }
  }
  config BR2_PACKAGE_LZOP boolean {
   prompt "lzop" if []
   select BR2_PACKAGE_LZO if []
  }
  config BR2_PACKAGE_LZMA boolean {
   prompt "lzma" if [BR2_GCC_CROSS_CXX && BR2_DEPRECATED]
   depends on [BR2_GCC_CROSS_CXX]
   depends on [BR2_DEPRECATED]
   inherited [BR2_GCC_CROSS_CXX && BR2_DEPRECATED]
  }
  config BR2_PACKAGE_XZ boolean {
   prompt "xz-utils" if []
  }
 }
 menu "Debugging, profiling and benchmark" {
  config BR2_PACKAGE_DMALLOC boolean {
   prompt "dmalloc" if []
  }
  config BR2_PACKAGE_KEXEC boolean {
   prompt "kexec" if []
   config BR2_PACKAGE_KEXEC_ZLIB boolean {
    prompt "Kexec with zlib support" if [BR2_PACKAGE_KEXEC]
    depends on [BR2_PACKAGE_KEXEC]
    select BR2_PACKAGE_ZLIB if [BR2_PACKAGE_KEXEC]
    inherited [BR2_PACKAGE_KEXEC]
   }
  }
  config BR2_PACKAGE_LMBENCH boolean {
   prompt "lmbench" if [BR2_INET_RPC]
   depends on [BR2_INET_RPC]
   inherited [BR2_INET_RPC]
  }
  config BR2_PACKAGE_LSOF boolean {
   prompt "lsof" if [BR2_INET_RPC]
   depends on [BR2_INET_RPC]
   inherited [BR2_INET_RPC]
  }
  config BR2_PACKAGE_LTP-TESTSUITE boolean {
   prompt "ltp-testsuite" if [BROKEN]
   depends on [BROKEN]
   inherited [BROKEN]
  }
  config BR2_PACKAGE_LTRACE boolean {
   prompt "ltrace" if [!BR2_avr32 && !BR2_cris && !BR2_mips && !BR2_mipsel && !BR2_sh && !BR2_sh64 && !BR2_xtensa]
   depends on [!(BR2_avr32 || BR2_cris || BR2_mips || BR2_mipsel || BR2_sh || BR2_sh64 || BR2_xtensa)]
   select BR2_PACKAGE_LIBELF if [!BR2_avr32 && !BR2_cris && !BR2_mips && !BR2_mipsel && !BR2_sh && !BR2_sh64 && !BR2_xtensa]
   inherited [!BR2_avr32 && !BR2_cris && !BR2_mips && !BR2_mipsel && !BR2_sh && !BR2_sh64 && !BR2_xtensa]
  }
  config BR2_PACKAGE_MEMSTAT boolean {
   prompt "memstat" if []
  }
  config BR2_PACKAGE_NETPERF boolean {
   prompt "netperf" if []
  }
  config BR2_PACKAGE_OPROFILE boolean {
   prompt "oprofile" if [!BR2_TOOLCHAIN_EXTERNAL && BR2_INSTALL_LIBSTDCPP]
   depends on [!BR2_TOOLCHAIN_EXTERNAL]
   select BR2_PACKAGE_POPT if [!BR2_TOOLCHAIN_EXTERNAL && BR2_INSTALL_LIBSTDCPP]
   depends on [BR2_INSTALL_LIBSTDCPP]
   inherited [!BR2_TOOLCHAIN_EXTERNAL && BR2_INSTALL_LIBSTDCPP]
  }
  config BR2_PACKAGE_STRACE boolean {
   prompt "strace" if []
  }
  config BR2_PACKAGE_VALGRIND boolean {
   prompt "valgrind" if [BR2_i386 || BR2_x86_64]
   depends on [BR2_i386 || BR2_x86_64]
   inherited [BR2_i386 || BR2_x86_64]
  }
 }
 menu "Development tools" {
  config BR2_PACKAGE_AUTOCONF boolean {
   prompt "autoconf" if []
   select BR2_PACKAGE_MICROPERL if []
  }
  config BR2_PACKAGE_AUTOMAKE boolean {
   prompt "automake" if []
   select BR2_PACKAGE_AUTOCONF if []
   select BR2_PACKAGE_MICROPERL if []
  }
  config BR2_PACKAGE_BISON boolean {
   prompt "bison" if []
  }
  config BR2_PACKAGE_BSDIFF boolean {
   prompt "bsdiff" if []
   select BR2_PACKAGE_BZIP2 if []
  }
  config BR2_PACKAGE_CCACHE_TARGET boolean {
   prompt "ccache" if [BR2_PACKAGE_GCC_TARGET]
   depends on [BR2_PACKAGE_GCC_TARGET]
   inherited [BR2_PACKAGE_GCC_TARGET]
  }
  if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS] {
   config BR2_PACKAGE_COREUTILS boolean {
    prompt "coreutils" if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_USE_WCHAR && BR2_PROGRAM_INVOCATION]
    depends on [BR2_USE_WCHAR && BR2_PROGRAM_INVOCATION]
    inherited [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_USE_WCHAR && BR2_PROGRAM_INVOCATION]
   }
  }
  config BR2_PACKAGE_CVS boolean {
   prompt "cvs" if [BR2_USE_WCHAR]
   depends on [BR2_USE_WCHAR]
   select BR2_PACKAGE_NCURSES if [BR2_USE_WCHAR]
   inherited [BR2_USE_WCHAR]
   config BR2_PACKAGE_CVS_SERVER boolean {
    prompt "server support" if [BR2_PACKAGE_CVS]
    depends on [BR2_PACKAGE_CVS]
    inherited [BR2_PACKAGE_CVS]
   }
  }
  if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS] {
   config BR2_PACKAGE_DIFFUTILS boolean {
    prompt "diffutils" if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS]
    inherited [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS]
   }
  }
  config BR2_PACKAGE_DISTCC boolean {
   prompt "distcc" if []
  }
  config BR2_PACKAGE_FAKEROOT boolean {
   prompt "fakeroot" if []
  }
  if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS] {
   config BR2_PACKAGE_FINDUTILS boolean {
    prompt "findutils" if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_USE_WCHAR]
    depends on [BR2_USE_WCHAR]
    inherited [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_USE_WCHAR]
   }
  }
  config BR2_PACKAGE_FLEX boolean {
   prompt "flex" if []
   config BR2_PACKAGE_FLEX_LIBFL boolean {
    prompt "Install libfl.a under staging_dir/usr/lib" if [BR2_PACKAGE_FLEX]
    default [y] if [BR2_PACKAGE_FLEX]
    depends on [BR2_PACKAGE_FLEX]
    inherited [BR2_PACKAGE_FLEX]
   }
  }
  if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS] {
   config BR2_PACKAGE_GAWK boolean {
    prompt "gawk" if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_USE_WCHAR]
    depends on [BR2_USE_WCHAR]
    inherited [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_USE_WCHAR]
   }
  }
  config BR2_PACKAGE_GCC_TARGET boolean {
   prompt "native toolchain in the target filesystem" if [BR2_HAVE_DEVFILES]
   depends on [BR2_HAVE_DEVFILES]
   inherited [BR2_HAVE_DEVFILES]
   config BR2_EXTRA_TARGET_GCC_CONFIG_OPTIONS string {
    prompt "Additional target gcc options" if [BR2_PACKAGE_GCC_TARGET]
    default [""] if [BR2_PACKAGE_GCC_TARGET]
    depends on [BR2_PACKAGE_GCC_TARGET]
    inherited [BR2_PACKAGE_GCC_TARGET]
   }
  }
  config BR2_PACKAGE_GETTEXT boolean {
   prompt "gettext" if [BR2_NEEDS_GETTEXT && BR2_USE_WCHAR]
   depends on [BR2_NEEDS_GETTEXT]
   depends on [BR2_USE_WCHAR]
   inherited [BR2_NEEDS_GETTEXT && BR2_USE_WCHAR]
  }
  config BR2_PACKAGE_GETTEXT_STATIC boolean {
   prompt "Use libgettext.a instead of libgettext.so.*" if [BR2_PACKAGE_GETTEXT && BR2_arm]
   depends on [BR2_PACKAGE_GETTEXT]
   depends on [BR2_arm]
   inherited [BR2_PACKAGE_GETTEXT && BR2_arm]
  }
  config BR2_PACKAGE_LIBINTL boolean {
   prompt "libintl" if [BR2_NEEDS_GETTEXT]
   depends on [BR2_NEEDS_GETTEXT]
   inherited [BR2_NEEDS_GETTEXT]
  }
  config BR2_PACKAGE_LIBGMP boolean {
   prompt "gmp" if []
   config BR2_PACKAGE_LIBGMP_HEADERS boolean {
    prompt "gmp headers for target" if [BR2_PACKAGE_LIBGMP]
    depends on [BR2_PACKAGE_LIBGMP]
    inherited [BR2_PACKAGE_LIBGMP]
   }
  }
  config BR2_PACKAGE_GPERF boolean {
   prompt "gperf" if [BR2_INSTALL_LIBSTDCPP]
   depends on [BR2_INSTALL_LIBSTDCPP]
   inherited [BR2_INSTALL_LIBSTDCPP]
  }
  if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS] {
   config BR2_PACKAGE_GREP boolean {
    prompt "grep" if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS]
    select BR2_PACKAGE_GETTEXT if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_NEEDS_GETTEXT_IF_LOCALE]
    select BR2_PACKAGE_LIBINTL if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_NEEDS_GETTEXT_IF_LOCALE]
    inherited [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS]
   }
  }
  config BR2_PACKAGE_INTLTOOL boolean {
   prompt "intltool" if [BR2_HOST_ONLY]
   depends on [BR2_HOST_ONLY]
   inherited [BR2_HOST_ONLY]
  }
  config BR2_PACKAGE_MAKE boolean {
   prompt "make" if []
   select BR2_PACKAGE_GETTEXT if [BR2_NEEDS_GETTEXT_IF_LOCALE]
   select BR2_PACKAGE_LIBINTL if [BR2_NEEDS_GETTEXT_IF_LOCALE]
  }
  config BR2_PACKAGE_LIBMPFR boolean {
   prompt "mpfr" if []
   default [y] if [BR2_INSTALL_FORTRAN]
   select BR2_PACKAGE_LIBGMP if []
   config BR2_PACKAGE_LIBMPFR_HEADERS boolean {
    prompt "mpfr headers for target" if [BR2_PACKAGE_LIBMPFR]
    depends on [BR2_PACKAGE_LIBMPFR]
    select BR2_PACKAGE_LIBGMP_HEADERS if [BR2_PACKAGE_LIBMPFR]
    inherited [BR2_PACKAGE_LIBMPFR]
   }
  }
  config BR2_PACKAGE_LIBTOOL boolean {
   prompt "libtool" if []
  }
  config BR2_PACKAGE_M4 boolean {
   prompt "m4" if [BR2_USE_WCHAR]
   depends on [BR2_USE_WCHAR]
   inherited [BR2_USE_WCHAR]
  }
  if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS] {
   config BR2_PACKAGE_PATCH boolean {
    prompt "patch" if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS]
    inherited [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS]
   }
  }
  config BR2_PACKAGE_PKG_CONFIG boolean {
   prompt "pkg-config" if [BR2_USE_WCHAR]
   depends on [BR2_USE_WCHAR]
   select BR2_PACKAGE_LIBGLIB2 if [BR2_USE_WCHAR]
   inherited [BR2_USE_WCHAR]
  }
  if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS] {
   config BR2_PACKAGE_SED boolean {
    prompt "sed" if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_USE_WCHAR]
    depends on [BR2_USE_WCHAR]
    inherited [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_USE_WCHAR]
   }
   config BR2_PACKAGE_TAR boolean {
    prompt "tar" if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_USE_WCHAR && BR2_PROGRAM_INVOCATION]
    depends on [BR2_USE_WCHAR && BR2_PROGRAM_INVOCATION]
    inherited [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_USE_WCHAR && BR2_PROGRAM_INVOCATION]
   }
  }
 }
 menu "Games" {
  config BR2_PACKAGE_ACE_OF_PENGUINS boolean {
   prompt "ace_of_penguins" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XLIB_LIBXPM && BROKEN]
   select BR2_PACKAGE_LIBPNG if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XLIB_LIBXPM && BROKEN]
   depends on [BR2_PACKAGE_XORG7]
   depends on [BR2_PACKAGE_XLIB_LIBXPM]
   depends on [BROKEN]
   inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XLIB_LIBXPM && BROKEN]
  }
  config BR2_PACKAGE_GNUCHESS boolean {
   prompt "gnuchess" if []
  }
  config BR2_PACKAGE_MAGICCUBE4D boolean {
   prompt "magiccube4d" if [BR2_INSTALL_LIBSTDCPP && BR2_PACKAGE_XORG7]
   depends on [BR2_INSTALL_LIBSTDCPP]
   depends on [BR2_PACKAGE_XORG7]
   inherited [BR2_INSTALL_LIBSTDCPP && BR2_PACKAGE_XORG7]
  }
  config BR2_PACKAGE_PRBOOM boolean {
   prompt "PrBoom" if []
   select BR2_PACKAGE_SDL if []
   select BR2_PACKAGE_SDL_MIXER if []
   select BR2_PACKAGE_SDL_NET if []
   config BR2_PACKAGE_DOOM_WAD boolean {
    prompt "shareware Doom WAD file" if [BR2_PACKAGE_PRBOOM]
    depends on [BR2_PACKAGE_PRBOOM]
    inherited [BR2_PACKAGE_PRBOOM]
   }
  }
  config BR2_PACKAGE_RUBIX boolean {
   prompt "rubix" if [BR2_PACKAGE_XORG7]
   depends on [BR2_PACKAGE_XORG7]
   inherited [BR2_PACKAGE_XORG7]
  }
 }
 menu "Graphic libraries and applications (graphic/text)" {
  config BR2_PACKAGE_DIRECTFB boolean {
   prompt "directfb" if []
   select BR2_PACKAGE_FREETYPE if []
   select BR2_PACKAGE_ZLIB if []
   if [BR2_PACKAGE_DIRECTFB] {
    config BR2_PACKAGE_DIRECTFB_MULTI boolean {
     prompt "directfb multi application" if [BR2_PACKAGE_DIRECTFB && BR2_LINUX_KERNEL]
     select BR2_PACKAGE_LINUX_FUSION if [BR2_PACKAGE_DIRECTFB && BR2_LINUX_KERNEL]
     depends on [BR2_LINUX_KERNEL]
     inherited [BR2_PACKAGE_DIRECTFB && BR2_LINUX_KERNEL]
    }
    config BR2_PACKAGE_DIRECTFB_DEBUG boolean {
     prompt "directfb debugging" if [BR2_PACKAGE_DIRECTFB]
     inherited [BR2_PACKAGE_DIRECTFB]
    }
    config BR2_PACKAGE_DIRECTFB_TRACE boolean {
     prompt "directfb call trace support" if [BR2_PACKAGE_DIRECTFB]
     inherited [BR2_PACKAGE_DIRECTFB]
    }
    config BR2_PACKAGE_DIRECTFB_XSERVER boolean {
     prompt "build with X server backend" if [BR2_PACKAGE_DIRECTFB && BR2_PACKAGE_XORG7]
     depends on [BR2_PACKAGE_XORG7]
     inherited [BR2_PACKAGE_DIRECTFB && BR2_PACKAGE_XORG7]
    }
    config BR2_PACKAGE_DIRECTFB_UNIQUE boolean {
     prompt "enable unique window manager" if [BR2_PACKAGE_DIRECTFB && BR2_UNIMPLEMENTED]
     depends on [BR2_UNIMPLEMENTED]
     inherited [BR2_PACKAGE_DIRECTFB && BR2_UNIMPLEMENTED]
    }
    config BR2_PACKAGE_DIRECTFB_ATI128 boolean {
     prompt "compile ati128 graphics driver" if [BR2_PACKAGE_DIRECTFB && (BR2_i386 || BR2_x86_64)]
     depends on [BR2_i386 || BR2_x86_64]
     inherited [BR2_PACKAGE_DIRECTFB && (BR2_i386 || BR2_x86_64)]
    }
    config BR2_PACKAGE_DIRECTFB_CLE266 boolean {
     prompt "compile cle266 graphics driver" if [BR2_PACKAGE_DIRECTFB && (BR2_i386 || BR2_x86_64)]
     default [y] if [BR2_PACKAGE_DIRECTFB && (BR2_i386 || BR2_x86_64)]
     depends on [BR2_i386 || BR2_x86_64]
     inherited [BR2_PACKAGE_DIRECTFB && (BR2_i386 || BR2_x86_64)]
    }
    config BR2_PACKAGE_DIRECTFB_MATROX boolean {
     prompt "compile matrox graphics driver" if [BR2_PACKAGE_DIRECTFB && (BR2_i386 || BR2_x86_64)]
     depends on [BR2_i386 || BR2_x86_64]
     inherited [BR2_PACKAGE_DIRECTFB && (BR2_i386 || BR2_x86_64)]
    }
    config BR2_PACKAGE_DIRECTFB_PXA3XX boolean {
     prompt "compile pxa3xx graphics driver" if [BR2_PACKAGE_DIRECTFB && BR2_arm]
     depends on [BR2_arm]
     inherited [BR2_PACKAGE_DIRECTFB && BR2_arm]
    }
    config BR2_PACKAGE_DIRECTFB_UNICHROME boolean {
     prompt "compile unichrome graphics driver" if [BR2_PACKAGE_DIRECTFB && (BR2_i386 || BR2_x86_64)]
     default [y] if [BR2_PACKAGE_DIRECTFB && (BR2_i386 || BR2_x86_64)]
     depends on [BR2_i386 || BR2_x86_64]
     inherited [BR2_PACKAGE_DIRECTFB && (BR2_i386 || BR2_x86_64)]
    }
    config BR2_PACKAGE_DIRECTFB_I830 boolean {
     prompt "compile i830 graphics driver" if [BR2_PACKAGE_DIRECTFB && (BR2_i386 || BR2_x86_64)]
     depends on [BR2_i386 || BR2_x86_64]
     inherited [BR2_PACKAGE_DIRECTFB && (BR2_i386 || BR2_x86_64)]
    }
    config BR2_PACKAGE_DIRECTFB_LINUXINPUT boolean {
     prompt "compile /dev/input/eventX input driver" if [BR2_PACKAGE_DIRECTFB]
     default [y] if [BR2_PACKAGE_DIRECTFB]
     inherited [BR2_PACKAGE_DIRECTFB]
    }
    config BR2_PACKAGE_DIRECTFB_KEYBOARD boolean {
     prompt "compile keyboard input driver" if [BR2_PACKAGE_DIRECTFB]
     default [y] if [BR2_PACKAGE_DIRECTFB]
     inherited [BR2_PACKAGE_DIRECTFB]
    }
    config BR2_PACKAGE_DIRECTFB_PS2MOUSE boolean {
     prompt "compile PS2 mouse input driver" if [BR2_PACKAGE_DIRECTFB]
     default [y] if [BR2_PACKAGE_DIRECTFB]
     inherited [BR2_PACKAGE_DIRECTFB]
    }
    config BR2_PACKAGE_DIRECTFB_SERIALMOUSE boolean {
     prompt "compile serial mouse input driver" if [BR2_PACKAGE_DIRECTFB]
     default [y] if [BR2_PACKAGE_DIRECTFB]
     inherited [BR2_PACKAGE_DIRECTFB]
    }
    config BR2_PACKAGE_DIRECTFB_TSLIB boolean {
     prompt "enable touchscreen support" if [BR2_PACKAGE_DIRECTFB]
     default [y] if [BR2_PACKAGE_DIRECTFB]
     select BR2_PACKAGE_TSLIB if [BR2_PACKAGE_DIRECTFB]
     inherited [BR2_PACKAGE_DIRECTFB]
    }
    config BR2_PACKAGE_DIRECTFB_GIF boolean {
     prompt "enable GIF support" if [BR2_PACKAGE_DIRECTFB]
     default [y] if [BR2_PACKAGE_DIRECTFB]
     inherited [BR2_PACKAGE_DIRECTFB]
    }
    config BR2_PACKAGE_DIRECTFB_JPEG boolean {
     prompt "enable JPEG support" if [BR2_PACKAGE_DIRECTFB]
     default [y] if [BR2_PACKAGE_DIRECTFB]
     select BR2_PACKAGE_JPEG if [BR2_PACKAGE_DIRECTFB]
     inherited [BR2_PACKAGE_DIRECTFB]
    }
    config BR2_PACKAGE_DIRECTFB_PNG boolean {
     prompt "enable PNG support" if [BR2_PACKAGE_DIRECTFB]
     default [y] if [BR2_PACKAGE_DIRECTFB]
     select BR2_PACKAGE_LIBPNG if [BR2_PACKAGE_DIRECTFB]
     inherited [BR2_PACKAGE_DIRECTFB]
    }
    config BR2_PACKAGE_DIRECTB_DITHER_RGB16 boolean {
     prompt "enable advanced dithering of RGB16 surfaces" if [BR2_PACKAGE_DIRECTFB]
     inherited [BR2_PACKAGE_DIRECTFB]
    }
    config BR2_PACKAGE_DIRECTB_TESTS boolean {
     prompt "build directfb tests" if [BR2_PACKAGE_DIRECTFB]
     inherited [BR2_PACKAGE_DIRECTFB]
    }
   }
   config BR2_PACKAGE_DIRECTFB_EXAMPLES boolean {
    prompt "directfb examples" if [BR2_PACKAGE_DIRECTFB]
    depends on [BR2_PACKAGE_DIRECTFB]
    inherited [BR2_PACKAGE_DIRECTFB]
    config BR2_PACKAGE_DIRECTFB_EXAMPLES_ANDI boolean {
     prompt "usr/bin/df_andi" if [BR2_PACKAGE_DIRECTFB_EXAMPLES]
     depends on [BR2_PACKAGE_DIRECTFB_EXAMPLES]
     inherited [BR2_PACKAGE_DIRECTFB_EXAMPLES]
    }
    config BR2_PACKAGE_DIRECTFB_EXAMPLES_BLTLOAD boolean {
     prompt "usr/bin/df_bltload" if [BR2_PACKAGE_DIRECTFB_EXAMPLES]
     depends on [BR2_PACKAGE_DIRECTFB_EXAMPLES]
     inherited [BR2_PACKAGE_DIRECTFB_EXAMPLES]
    }
    config BR2_PACKAGE_DIRECTFB_EXAMPLES_CPULOAD boolean {
     prompt "usr/bin/df_cpuload" if [BR2_PACKAGE_DIRECTFB_EXAMPLES]
     depends on [BR2_PACKAGE_DIRECTFB_EXAMPLES]
     inherited [BR2_PACKAGE_DIRECTFB_EXAMPLES]
    }
    config BR2_PACKAGE_DIRECTFB_EXAMPLES_DATABUFFER boolean {
     prompt "usr/bin/df_databuffer" if [BR2_PACKAGE_DIRECTFB_EXAMPLES]
     depends on [BR2_PACKAGE_DIRECTFB_EXAMPLES]
     inherited [BR2_PACKAGE_DIRECTFB_EXAMPLES]
    }
    config BR2_PACKAGE_DIRECTFB_EXAMPLES_DIOLOAD boolean {
     prompt "usr/bin/df_dioload" if [BR2_PACKAGE_DIRECTFB_EXAMPLES]
     depends on [BR2_PACKAGE_DIRECTFB_EXAMPLES]
     inherited [BR2_PACKAGE_DIRECTFB_EXAMPLES]
    }
    config BR2_PACKAGE_DIRECTFB_EXAMPLES_DOK boolean {
     prompt "usr/bin/df_dok" if [BR2_PACKAGE_DIRECTFB_EXAMPLES]
     depends on [BR2_PACKAGE_DIRECTFB_EXAMPLES]
     inherited [BR2_PACKAGE_DIRECTFB_EXAMPLES]
    }
    config BR2_PACKAGE_DIRECTFB_EXAMPLES_DRIVERTEST boolean {
     prompt "usr/bin/df_drivertest" if [BR2_PACKAGE_DIRECTFB_EXAMPLES]
     depends on [BR2_PACKAGE_DIRECTFB_EXAMPLES]
     inherited [BR2_PACKAGE_DIRECTFB_EXAMPLES]
    }
    config BR2_PACKAGE_DIRECTFB_EXAMPLES_FIRE boolean {
     prompt "usr/bin/df_fire" if [BR2_PACKAGE_DIRECTFB_EXAMPLES]
     depends on [BR2_PACKAGE_DIRECTFB_EXAMPLES]
     inherited [BR2_PACKAGE_DIRECTFB_EXAMPLES]
    }
    config BR2_PACKAGE_DIRECTFB_EXAMPLES_FLIP boolean {
     prompt "usr/bin/df_flip" if [BR2_PACKAGE_DIRECTFB_EXAMPLES]
     depends on [BR2_PACKAGE_DIRECTFB_EXAMPLES]
     inherited [BR2_PACKAGE_DIRECTFB_EXAMPLES]
    }
    config BR2_PACKAGE_DIRECTFB_EXAMPLES_FONTS boolean {
     prompt "usr/bin/df_fonts" if [BR2_PACKAGE_DIRECTFB_EXAMPLES]
     depends on [BR2_PACKAGE_DIRECTFB_EXAMPLES]
     inherited [BR2_PACKAGE_DIRECTFB_EXAMPLES]
    }
    config BR2_PACKAGE_DIRECTFB_EXAMPLES_INPUT boolean {
     prompt "usr/bin/df_input" if [BR2_PACKAGE_DIRECTFB_EXAMPLES]
     depends on [BR2_PACKAGE_DIRECTFB_EXAMPLES]
     inherited [BR2_PACKAGE_DIRECTFB_EXAMPLES]
    }
    config BR2_PACKAGE_DIRECTFB_EXAMPLES_JOYSTICK boolean {
     prompt "usr/bin/df_joystick" if [BR2_PACKAGE_DIRECTFB_EXAMPLES]
     depends on [BR2_PACKAGE_DIRECTFB_EXAMPLES]
     inherited [BR2_PACKAGE_DIRECTFB_EXAMPLES]
    }
    config BR2_PACKAGE_DIRECTFB_EXAMPLES_KNUCKLES boolean {
     prompt "usr/bin/df_knuckles" if [BR2_PACKAGE_DIRECTFB_EXAMPLES]
     depends on [BR2_PACKAGE_DIRECTFB_EXAMPLES]
     inherited [BR2_PACKAGE_DIRECTFB_EXAMPLES]
    }
    config BR2_PACKAGE_DIRECTFB_EXAMPLES_LAYER boolean {
     prompt "usr/bin/df_layer" if [BR2_PACKAGE_DIRECTFB_EXAMPLES]
     depends on [BR2_PACKAGE_DIRECTFB_EXAMPLES]
     inherited [BR2_PACKAGE_DIRECTFB_EXAMPLES]
    }
    config BR2_PACKAGE_DIRECTFB_EXAMPLES_NEO boolean {
     prompt "usr/bin/df_neo" if [BR2_PACKAGE_DIRECTFB_EXAMPLES]
     depends on [BR2_PACKAGE_DIRECTFB_EXAMPLES]
     inherited [BR2_PACKAGE_DIRECTFB_EXAMPLES]
    }
    config BR2_PACKAGE_DIRECTFB_EXAMPLES_NETLOAD boolean {
     prompt "usr/bin/df_netload" if [BR2_PACKAGE_DIRECTFB_EXAMPLES]
     depends on [BR2_PACKAGE_DIRECTFB_EXAMPLES]
     inherited [BR2_PACKAGE_DIRECTFB_EXAMPLES]
    }
    config BR2_PACKAGE_DIRECTFB_EXAMPLES_PALETTE boolean {
     prompt "usr/bin/df_palette" if [BR2_PACKAGE_DIRECTFB_EXAMPLES]
     depends on [BR2_PACKAGE_DIRECTFB_EXAMPLES]
     inherited [BR2_PACKAGE_DIRECTFB_EXAMPLES]
    }
    config BR2_PACKAGE_DIRECTFB_EXAMPLES_PARTICLE boolean {
     prompt "usr/bin/df_particle" if [BR2_PACKAGE_DIRECTFB_EXAMPLES]
     depends on [BR2_PACKAGE_DIRECTFB_EXAMPLES]
     inherited [BR2_PACKAGE_DIRECTFB_EXAMPLES]
    }
    config BR2_PACKAGE_DIRECTFB_EXAMPLES_PORTER boolean {
     prompt "usr/bin/df_porter" if [BR2_PACKAGE_DIRECTFB_EXAMPLES]
     depends on [BR2_PACKAGE_DIRECTFB_EXAMPLES]
     inherited [BR2_PACKAGE_DIRECTFB_EXAMPLES]
    }
    config BR2_PACKAGE_DIRECTFB_EXAMPLES_STRESS boolean {
     prompt "usr/bin/df_stress" if [BR2_PACKAGE_DIRECTFB_EXAMPLES]
     depends on [BR2_PACKAGE_DIRECTFB_EXAMPLES]
     inherited [BR2_PACKAGE_DIRECTFB_EXAMPLES]
    }
    config BR2_PACKAGE_DIRECTFB_EXAMPLES_TEXTURE boolean {
     prompt "usr/bin/df_texture" if [BR2_PACKAGE_DIRECTFB_EXAMPLES]
     depends on [BR2_PACKAGE_DIRECTFB_EXAMPLES]
     inherited [BR2_PACKAGE_DIRECTFB_EXAMPLES]
    }
    config BR2_PACKAGE_DIRECTFB_EXAMPLES_VIDEO boolean {
     prompt "usr/bin/df_video" if [BR2_PACKAGE_DIRECTFB_EXAMPLES]
     depends on [BR2_PACKAGE_DIRECTFB_EXAMPLES]
     inherited [BR2_PACKAGE_DIRECTFB_EXAMPLES]
    }
    config BR2_PACKAGE_DIRECTFB_EXAMPLES_VIDEO_PARTICLE boolean {
     prompt "usr/bin/df_video_particle" if [BR2_PACKAGE_DIRECTFB_EXAMPLES]
     depends on [BR2_PACKAGE_DIRECTFB_EXAMPLES]
     inherited [BR2_PACKAGE_DIRECTFB_EXAMPLES]
    }
    config BR2_PACKAGE_DIRECTFB_EXAMPLES_WINDOW boolean {
     prompt "usr/bin/df_window" if [BR2_PACKAGE_DIRECTFB_EXAMPLES]
     depends on [BR2_PACKAGE_DIRECTFB_EXAMPLES]
     inherited [BR2_PACKAGE_DIRECTFB_EXAMPLES]
    }
   }
   config BR2_PACKAGE_DIVINE boolean {
    prompt "directfb virtual input extension" if [BR2_PACKAGE_DIRECTFB]
    depends on [BR2_PACKAGE_DIRECTFB]
    inherited [BR2_PACKAGE_DIRECTFB]
   }
  }
  config BR2_PACKAGE_FBDUMP boolean {
   prompt "fbdump (Framebuffer Capture Tool)" if []
  }
  if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS] {
   config BR2_PACKAGE_FBSET boolean {
    prompt "fbset" if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS]
    inherited [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS]
   }
  }
  config BR2_PACKAGE_FBV boolean {
   prompt "fbv" if []
   select BR2_PACKAGE_LIBPNG if []
   select BR2_PACKAGE_JPEG if []
   select BR2_PACKAGE_LIBUNGIF if []
  }
  config BR2_PACKAGE_IMAGEMAGICK boolean {
   prompt "imagemagick" if []
   select BR2_PACKAGE_JPEG if []
   select BR2_PACKAGE_TIFF if []
  }
  config BR2_PACKAGE_LINUX_FUSION boolean {
   depends on [BR2_LINUX_KERNEL]
   prompt "linux-fusion communication layer for DirectFB multi" if [BR2_LINUX_KERNEL]
   inherited [BR2_LINUX_KERNEL]
  }
  config BR2_PACKAGE_LITE boolean {
   prompt "LiTE (toolbox engine)" if [BR2_PACKAGE_DIRECTFB]
   depends on [BR2_PACKAGE_DIRECTFB]
   inherited [BR2_PACKAGE_DIRECTFB]
  }
  config BR2_PACKAGE_SAWMAN boolean {
   prompt "SawMan (Window Manager)" if [BR2_PACKAGE_DIRECTFB]
   depends on [BR2_PACKAGE_DIRECTFB]
   inherited [BR2_PACKAGE_DIRECTFB]
  }
  config BR2_PACKAGE_SDL boolean {
   prompt "SDL" if []
   if [BR2_PACKAGE_SDL] {
    config BR2_PACKAGE_SDL_FBCON boolean {
     prompt "SDL framebuffer console video driver" if [BR2_PACKAGE_SDL]
     default [y] if [BR2_PACKAGE_SDL]
     inherited [BR2_PACKAGE_SDL]
    }
    config BR2_PACKAGE_SDL_DIRECTFB boolean {
     prompt "SDL DirectFB video driver" if [BR2_PACKAGE_SDL && BR2_PACKAGE_DIRECTFB]
     depends on [BR2_PACKAGE_DIRECTFB]
     inherited [BR2_PACKAGE_SDL && BR2_PACKAGE_DIRECTFB]
    }
    config BR2_PACKAGE_SDL_QTOPIA boolean {
     prompt "SDL Qtopia video driver" if [BR2_PACKAGE_SDL && BR2_PACKAGE_QT]
     depends on [BR2_PACKAGE_QT]
     inherited [BR2_PACKAGE_SDL && BR2_PACKAGE_QT]
    }
    config BR2_PACKAGE_SDL_X11 boolean {
     prompt "SDL X11 video driver" if [BR2_PACKAGE_SDL && BR2_PACKAGE_XORG7]
     depends on [BR2_PACKAGE_XORG7]
     inherited [BR2_PACKAGE_SDL && BR2_PACKAGE_XORG7]
    }
   }
   config BR2_PACKAGE_SDL_IMAGE boolean {
    prompt "SDL_image" if [BR2_PACKAGE_SDL]
    depends on [BR2_PACKAGE_SDL]
    inherited [BR2_PACKAGE_SDL]
    menu "SDL_image file format support" {
     depends on [BR2_PACKAGE_SDL_IMAGE]
     config BR2_PACKAGE_SDL_IMAGE_BMP boolean {
      prompt "enable BMP file format support" if [BR2_PACKAGE_SDL_IMAGE]
      default [y] if [BR2_PACKAGE_SDL_IMAGE]
      inherited [BR2_PACKAGE_SDL_IMAGE]
     }
     config BR2_PACKAGE_SDL_IMAGE_GIF boolean {
      prompt "enable GIF file format support" if [BR2_PACKAGE_SDL_IMAGE]
      inherited [BR2_PACKAGE_SDL_IMAGE]
     }
     config BR2_PACKAGE_SDL_IMAGE_JPEG boolean {
      prompt "enable JPEG file format support" if [BR2_PACKAGE_SDL_IMAGE]
      select BR2_PACKAGE_JPEG if [BR2_PACKAGE_SDL_IMAGE]
      inherited [BR2_PACKAGE_SDL_IMAGE]
     }
     config BR2_PACKAGE_SDL_IMAGE_LBM boolean {
      prompt "enable LBM file format support" if [BR2_PACKAGE_SDL_IMAGE]
      inherited [BR2_PACKAGE_SDL_IMAGE]
     }
     config BR2_PACKAGE_SDL_IMAGE_PCX boolean {
      prompt "enable PCX file format support" if [BR2_PACKAGE_SDL_IMAGE]
      inherited [BR2_PACKAGE_SDL_IMAGE]
     }
     config BR2_PACKAGE_SDL_IMAGE_PNG boolean {
      prompt "enable PNG file format support" if [BR2_PACKAGE_SDL_IMAGE]
      select BR2_PACKAGE_LIBPNG if [BR2_PACKAGE_SDL_IMAGE]
      inherited [BR2_PACKAGE_SDL_IMAGE]
     }
     config BR2_PACKAGE_SDL_IMAGE_PNM boolean {
      prompt "enable PNM file format support" if [BR2_PACKAGE_SDL_IMAGE]
      inherited [BR2_PACKAGE_SDL_IMAGE]
     }
     config BR2_PACKAGE_SDL_IMAGE_TARGA boolean {
      prompt "enable TARGA format support" if [BR2_PACKAGE_SDL_IMAGE]
      inherited [BR2_PACKAGE_SDL_IMAGE]
     }
     config BR2_PACKAGE_SDL_IMAGE_TIFF boolean {
      prompt "enable TIFF file format support" if [BR2_PACKAGE_SDL_IMAGE]
      select BR2_PACKAGE_TIFF if [BR2_PACKAGE_SDL_IMAGE]
      inherited [BR2_PACKAGE_SDL_IMAGE]
     }
     config BR2_PACKAGE_SDL_IMAGE_XCF boolean {
      prompt "enable XCF file format support" if [BR2_PACKAGE_SDL_IMAGE]
      inherited [BR2_PACKAGE_SDL_IMAGE]
     }
     config BR2_PACKAGE_SDL_IMAGE_XPM boolean {
      prompt "enable XPM format support" if [BR2_PACKAGE_SDL_IMAGE]
      inherited [BR2_PACKAGE_SDL_IMAGE]
     }
     config BR2_PACKAGE_SDL_IMAGE_XV boolean {
      prompt "enable XV file format support" if [BR2_PACKAGE_SDL_IMAGE]
      inherited [BR2_PACKAGE_SDL_IMAGE]
     }
    }
   }
   config BR2_PACKAGE_SDL_MIXER boolean {
    prompt "SDL_mixer" if [BR2_PACKAGE_SDL]
    depends on [BR2_PACKAGE_SDL]
    inherited [BR2_PACKAGE_SDL]
   }
   config BR2_PACKAGE_SDL_SOUND boolean {
    prompt "SDL_sound" if [BR2_PACKAGE_SDL]
    depends on [BR2_PACKAGE_SDL]
    select BR2_PACKAGE_LIBICONV if [BR2_PACKAGE_SDL && !BR2_ENABLE_LOCALE]
    inherited [BR2_PACKAGE_SDL]
    config BR2_PACKAGE_SDL_SOUND_PLAYSOUND boolean {
     prompt "install playsound tool" if [BR2_PACKAGE_SDL_SOUND]
     depends on [BR2_PACKAGE_SDL_SOUND]
     inherited [BR2_PACKAGE_SDL_SOUND]
    }
   }
   config BR2_PACKAGE_SDL_NET boolean {
    prompt "SDL_net" if [BR2_PACKAGE_SDL]
    depends on [BR2_PACKAGE_SDL]
    inherited [BR2_PACKAGE_SDL]
   }
   config BR2_PACKAGE_SDL_TTF boolean {
    prompt "SDL_TTF" if [BR2_PACKAGE_SDL]
    depends on [BR2_PACKAGE_SDL]
    select BR2_PACKAGE_FREETYPE if [BR2_PACKAGE_SDL]
    inherited [BR2_PACKAGE_SDL]
   }
   config BR2_PACKAGE_SDL_GFX boolean {
    prompt "SDL_gfx" if [BR2_PACKAGE_SDL]
    depends on [BR2_PACKAGE_SDL]
    inherited [BR2_PACKAGE_SDL]
   }
  }
  menuconfig BR2_PACKAGE_QT boolean {
   prompt "Qt" if [BR2_INSTALL_LIBSTDCPP]
   depends on [BR2_INSTALL_LIBSTDCPP]
   inherited [BR2_INSTALL_LIBSTDCPP]
   if [BR2_PACKAGE_QT] {
    config BR2_PACKAGE_QT_DEBUG boolean {
     prompt "Compile with debug support" if [BR2_PACKAGE_QT]
     inherited [BR2_PACKAGE_QT]
    }
    config BR2_PACKAGE_QT_DEMOS boolean {
     prompt "Compile and install demos and examples (with code)" if [BR2_PACKAGE_QT]
     inherited [BR2_PACKAGE_QT]
    }
    choice boolean {
     prompt "Library type" if [BR2_PACKAGE_QT]
     default [BR2_PACKAGE_QT_SHARED] if [BR2_PACKAGE_QT]
     config BR2_PACKAGE_QT_SHARED boolean {
      prompt "Shared library" if [<choice>]
      inherited [<choice>]
     }
     config BR2_PACKAGE_QT_STATIC boolean {
      prompt "Static Library" if [<choice>]
      inherited [<choice>]
     }
    }
    config BR2_PACKAGE_QT_LICENSE_APPROVED boolean {
     prompt "Approve free license" if [BR2_PACKAGE_QT]
     inherited [BR2_PACKAGE_QT]
    }
    config BR2_PACKAGE_QT_QT3SUPPORT boolean {
     prompt "Compatibility with Qt3" if [BR2_PACKAGE_QT]
     inherited [BR2_PACKAGE_QT]
    }
    config BR2_PACKAGE_QT_GUI_MODULE boolean {
     prompt "Gui Module" if [BR2_PACKAGE_QT]
     select BR2_PACKAGE_QT_NETWORK if [BR2_PACKAGE_QT]
     default [y] if [BR2_PACKAGE_QT]
     inherited [BR2_PACKAGE_QT]
     if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE] {
      menu "Pixel depths" {
       depends on [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
       config BR2_PACKAGE_QT_PIXEL_DEPTH_1 boolean {
        prompt "1 bpp, black/white" if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
        inherited [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
       }
       config BR2_PACKAGE_QT_PIXEL_DEPTH_4 boolean {
        prompt "4 bpp, grayscale" if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
        inherited [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
       }
       config BR2_PACKAGE_QT_PIXEL_DEPTH_8 boolean {
        prompt "8 bpp, paletted" if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
        default [y] if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
        inherited [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
       }
       config BR2_PACKAGE_QT_PIXEL_DEPTH_12 boolean {
        prompt "12 bpp, rgb 4-4-4" if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
        inherited [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
       }
       config BR2_PACKAGE_QT_PIXEL_DEPTH_15 boolean {
        prompt "15 bpp, rgb 5-5-5" if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
        inherited [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
       }
       config BR2_PACKAGE_QT_PIXEL_DEPTH_16 boolean {
        prompt "16 bpp, rgb 5-6-5" if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
        default [y] if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
        inherited [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
       }
       config BR2_PACKAGE_QT_PIXEL_DEPTH_18 boolean {
        prompt "18 bpp, rgb 6-6-6" if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
        inherited [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
       }
       config BR2_PACKAGE_QT_PIXEL_DEPTH_24 boolean {
        prompt "24 bpp, rgb 8-8-8" if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
        inherited [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
       }
       config BR2_PACKAGE_QT_PIXEL_DEPTH_32 boolean {
        prompt "32 bpp, argb 8-8-8-8 and rgb 8-8-8" if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
        default [y] if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
        inherited [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
       }
      }
      menu "Fonts" {
       depends on [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
       config BR2_PACKAGE_QT_FONT_MICRO boolean {
        prompt "micro" if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
        default [y] if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
        inherited [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
       }
       config BR2_PACKAGE_QT_FONT_FIXED boolean {
        prompt "fixed" if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
        default [y] if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
        inherited [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
       }
       config BR2_PACKAGE_QT_FONT_HELVETICA boolean {
        prompt "helvetica" if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
        default [y] if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
        inherited [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
       }
       config BR2_PACKAGE_QT_FONT_JAPANESE boolean {
        prompt "japanese" if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
        inherited [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
       }
       config BR2_PACKAGE_QT_FONT_UNIFONT boolean {
        prompt "unicode" if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
        inherited [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
       }
      }
      choice boolean {
       prompt "freetype2 support" if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
       default [BR2_PACKAGE_QT_NOFREETYPE] if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
       config BR2_PACKAGE_QT_NOFREETYPE boolean {
        prompt "no freetype2 support" if [<choice>]
        inherited [<choice>]
       }
       config BR2_PACKAGE_QT_QTFREETYPE boolean {
        prompt "Qt freetype2" if [<choice>]
        inherited [<choice>]
       }
       config BR2_PACKAGE_QT_SYSTEMFREETYPE boolean {
        prompt "System freetype2" if [<choice>]
        select BR2_PACKAGE_FREETYPE if [<choice>]
        inherited [<choice>]
       }
      }
      config BR2_PACKAGE_QT_GIF boolean {
       prompt "Enable GIF support" if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
       inherited [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
      }
      config BR2_PACKAGE_QT_LIBMNG boolean {
       prompt "Enable libmng support" if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
       inherited [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
      }
      choice boolean {
       prompt "JPEG support" if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
       default [BR2_PACKAGE_QT_NOJPEG] if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
       config BR2_PACKAGE_QT_NOJPEG boolean {
        prompt "No jpeg support" if [<choice>]
        inherited [<choice>]
       }
       config BR2_PACKAGE_QT_SYSTEMJPEG boolean {
        select BR2_PACKAGE_JPEG if [<choice>]
        prompt "System libjpeg" if [<choice>]
        inherited [<choice>]
       }
       config BR2_PACKAGE_QT_QTJPEG boolean {
        prompt "Use Qt bundled libjpeg" if [<choice>]
        inherited [<choice>]
       }
      }
      choice boolean {
       prompt "PNG support" if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
       default [BR2_PACKAGE_QT_NOPNG] if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
       config BR2_PACKAGE_QT_NOPNG boolean {
        prompt "No PNG support" if [<choice>]
        inherited [<choice>]
       }
       config BR2_PACKAGE_QT_SYSTEMPNG boolean {
        prompt "System libpng" if [<choice>]
        select BR2_PACKAGE_LIBPNG if [<choice>]
        inherited [<choice>]
       }
       config BR2_PACKAGE_QT_QTPNG boolean {
        prompt "Use Qt bundled libpng" if [<choice>]
        inherited [<choice>]
       }
      }
      choice boolean {
       prompt "TIFF support" if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
       default [BR2_PACKAGE_QT_NOTIFF] if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
       config BR2_PACKAGE_QT_NOTIFF boolean {
        prompt "No TIFF support" if [<choice>]
        inherited [<choice>]
       }
       config BR2_PACKAGE_QT_SYSTEMTIFF boolean {
        prompt "System libtiff" if [<choice>]
        select BR2_PACKAGE_TIFF if [<choice>]
        inherited [<choice>]
       }
       config BR2_PACKAGE_QT_QTTIFF boolean {
        prompt "Use Qt bundled libtiff" if [<choice>]
        inherited [<choice>]
       }
      }
     }
    }
    choice boolean {
     prompt "zlib support" if [BR2_PACKAGE_QT]
     default [BR2_PACKAGE_QT_QTZLIB] if [BR2_PACKAGE_QT]
     config BR2_PACKAGE_QT_QTZLIB boolean {
      prompt "Qt zlib" if [<choice>]
      inherited [<choice>]
     }
     config BR2_PACKAGE_QT_SYSTEMZLIB boolean {
      prompt "System zlib" if [<choice>]
      select BR2_PACKAGE_ZLIB if [<choice>]
      inherited [<choice>]
     }
    }
    config BR2_PACKAGE_QT_EMB_PLATFORM string {
     prompt "The embedded platform we are making Qt for" if [BR2_PACKAGE_QT]
     default ["arm"] if [BR2_PACKAGE_QT && BR2_arm]
     default ["arm"] if [BR2_PACKAGE_QT && BR2_armeb]
     default ["avr32"] if [BR2_PACKAGE_QT && BR2_avr32]
     default ["x86"] if [BR2_PACKAGE_QT && BR2_i386]
     default ["x86_64"] if [BR2_PACKAGE_QT && BR2_x86_64]
     default ["mips"] if [BR2_PACKAGE_QT && BR2_mips]
     default ["mips"] if [BR2_PACKAGE_QT && BR2_mipsel]
     default ["powerpc"] if [BR2_PACKAGE_QT && BR2_powerpc]
     default ["generic"] if [BR2_PACKAGE_QT && BR2_alpha]
     default ["generic"] if [BR2_PACKAGE_QT && BR2_chris]
     default ["generic"] if [BR2_PACKAGE_QT && BR2_m68k]
     default ["generic"] if [BR2_PACKAGE_QT && BR2_sh]
     default ["generic"] if [BR2_PACKAGE_QT && BR2_sh64]
     default ["generic"] if [BR2_PACKAGE_QT && BR2_sparc]
     inherited [BR2_PACKAGE_QT]
    }
    menuconfig BR2_PACKAGE_QT_SQL_MODULE boolean {
     prompt "SQL Module" if [BR2_PACKAGE_QT]
     inherited [BR2_PACKAGE_QT]
     if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_SQL_MODULE] {
      config BR2_PACKAGE_QT_MYSQL boolean {
       prompt "MySQL Driver" if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_SQL_MODULE]
       select BR2_PACKAGE_MYSQL_CLIENT if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_SQL_MODULE]
       select BR2_PACKAGE_NCURSES if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_SQL_MODULE]
       select BR2_PACKAGE_READLINE if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_SQL_MODULE]
       inherited [BR2_PACKAGE_QT && BR2_PACKAGE_QT_SQL_MODULE]
      }
      config BR2_PACKAGE_QT_IBASE boolean {
       prompt "iBase Driver" if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_SQL_MODULE && BROKEN]
       depends on [BROKEN]
       inherited [BR2_PACKAGE_QT && BR2_PACKAGE_QT_SQL_MODULE && BROKEN]
      }
      config BR2_PACKAGE_QT_ODBC boolean {
       prompt "ODBC Driver" if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_SQL_MODULE && BROKEN]
       depends on [BROKEN]
       inherited [BR2_PACKAGE_QT && BR2_PACKAGE_QT_SQL_MODULE && BROKEN]
      }
      config BR2_PACKAGE_QT_PSQL boolean {
       prompt "PostgreSQL Driver" if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_SQL_MODULE && BROKEN]
       depends on [BROKEN]
       inherited [BR2_PACKAGE_QT && BR2_PACKAGE_QT_SQL_MODULE && BROKEN]
      }
      config BR2_PACKAGE_QT_SQLITE boolean {
       prompt "SQLite 3 Driver" if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_SQL_MODULE]
       inherited [BR2_PACKAGE_QT && BR2_PACKAGE_QT_SQL_MODULE]
      }
      config BR2_PACKAGE_QT_SQLITE2 boolean {
       prompt "SQLite 2 Driver" if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_SQL_MODULE && BROKEN]
       depends on [BROKEN]
       inherited [BR2_PACKAGE_QT && BR2_PACKAGE_QT_SQL_MODULE && BROKEN]
      }
     }
    }
    if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE] {
     menu "Graphics drivers" {
      depends on [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
      config BR2_PACKAGE_QT_GFX_LINUXFB boolean {
       prompt "Linux Framebuffer" if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
       default [y] if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
       inherited [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
      }
      config BR2_PACKAGE_QT_GFX_TRANSFORMED boolean {
       prompt "Transformed" if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
       inherited [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
      }
      config BR2_PACKAGE_QT_GFX_QVFB boolean {
       prompt "Qt Virtual Framebuffer" if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
       inherited [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
      }
      config BR2_PACKAGE_QT_GFX_VNC boolean {
       prompt "VNC" if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
       inherited [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
      }
      config BR2_PACKAGE_QT_GFX_MULTISCREEN boolean {
       prompt "multiscreen" if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
       inherited [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
      }
      config BR2_PACKAGE_QT_GFX_DIRECTFB boolean {
       depends on [BR2_PACKAGE_DIRECTFB]
       prompt "directFB" if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE && BR2_PACKAGE_DIRECTFB]
       inherited [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE && BR2_PACKAGE_DIRECTFB]
      }
     }
     menu "Mouse drivers" {
      depends on [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
      config BR2_PACKAGE_QT_MOUSE_PC boolean {
       prompt "pc" if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
       inherited [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
      }
      config BR2_PACKAGE_QT_MOUSE_LINUXTP boolean {
       prompt "linuxtp" if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
       inherited [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
      }
      config BR2_PACKAGE_QT_MOUSE_LINUXINPUT boolean {
       prompt "linux input" if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
       inherited [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
      }
      config BR2_PACKAGE_QT_MOUSE_TSLIB boolean {
       prompt "tslib" if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
       inherited [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
      }
      config BR2_PACKAGE_QT_MOUSE_QVFB boolean {
       prompt "qvfb" if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
       inherited [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
      }
     }
     menu "Keyboard drivers" {
      depends on [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
      config BR2_PACKAGE_QT_KEYBOARD_TTY boolean {
       prompt "tty" if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
       inherited [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
      }
      config BR2_PACKAGE_QT_KEYBOARD_LINUXINPUT boolean {
       prompt "linux input" if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
       inherited [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
      }
      config BR2_PACKAGE_QT_KEYBOARD_QVFB boolean {
       prompt "qvfb" if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
       inherited [BR2_PACKAGE_QT && BR2_PACKAGE_QT_GUI_MODULE]
      }
     }
    }
    config BR2_PACKAGE_QT_PHONON boolean {
     prompt "Phonon Module" if [BR2_PACKAGE_QT && BR2_PACKAGE_GSTREAMER]
     depends on [BR2_PACKAGE_GSTREAMER]
     select BR2_PACKAGE_GST_PLUGINS_BASE if [BR2_PACKAGE_QT && BR2_PACKAGE_GSTREAMER]
     default [y] if [BR2_PACKAGE_QT && BR2_PACKAGE_GSTREAMER]
     inherited [BR2_PACKAGE_QT && BR2_PACKAGE_GSTREAMER]
    }
    config BR2_PACKAGE_QT_PHONON_BACKEND boolean {
     prompt "Phonon Module Backend" if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_PHONON]
     depends on [BR2_PACKAGE_QT_PHONON]
     inherited [BR2_PACKAGE_QT && BR2_PACKAGE_QT_PHONON]
    }
    config BR2_PACKAGE_QT_DBUS boolean {
     prompt "DBus Module" if [BR2_PACKAGE_QT && BR2_PACKAGE_DBUS]
     depends on [BR2_PACKAGE_DBUS]
     inherited [BR2_PACKAGE_QT && BR2_PACKAGE_DBUS]
    }
    config BR2_PACKAGE_QT_XML boolean {
     prompt "XML Module" if [BR2_PACKAGE_QT]
     default [y] if [BR2_PACKAGE_QT]
     inherited [BR2_PACKAGE_QT]
     config BR2_PACKAGE_QT_XMLPATTERNS boolean {
      prompt "XML Patterns Module" if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_XML]
      depends on [BR2_PACKAGE_QT_XML]
      inherited [BR2_PACKAGE_QT && BR2_PACKAGE_QT_XML]
     }
    }
    config BR2_PACKAGE_QT_MULTIMEDIA boolean {
     prompt "Multimedia Module" if [BR2_PACKAGE_QT]
     inherited [BR2_PACKAGE_QT]
     config BR2_PACKAGE_QT_AUDIO_BACKEND boolean {
      prompt "QtMultimedia Audio backend" if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_MULTIMEDIA]
      depends on [BR2_PACKAGE_QT_MULTIMEDIA]
      select BR2_PACKAGE_ALSA_LIB if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_MULTIMEDIA]
      inherited [BR2_PACKAGE_QT && BR2_PACKAGE_QT_MULTIMEDIA]
     }
    }
    config BR2_PACKAGE_QT_SVG boolean {
     prompt "SVG Module" if [BR2_PACKAGE_QT]
     inherited [BR2_PACKAGE_QT]
    }
    config BR2_PACKAGE_QT_NETWORK boolean {
     prompt "Network Module" if [BR2_PACKAGE_QT]
     default [y] if [BR2_PACKAGE_QT]
     inherited [BR2_PACKAGE_QT]
     config BR2_PACKAGE_QT_WEBKIT boolean {
      prompt "WebKit Module" if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_NETWORK]
      depends on [BR2_PACKAGE_QT_NETWORK]
      select BR2_PACKAGE_QT_JAVASCRIPTCORE if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_NETWORK]
      inherited [BR2_PACKAGE_QT && BR2_PACKAGE_QT_NETWORK]
     }
    }
    config BR2_PACKAGE_QT_JAVASCRIPTCORE boolean {
     prompt "JavaScriptCore JIT compiler" if [BR2_PACKAGE_QT]
     inherited [BR2_PACKAGE_QT]
    }
    config BR2_PACKAGE_QT_STL boolean {
     prompt "STL support" if [BR2_PACKAGE_QT]
     inherited [BR2_PACKAGE_QT]
    }
    config BR2_PACKAGE_QT_OPENSSL boolean {
     prompt "Enable OpenSSL support" if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_NETWORK]
     depends on [BR2_PACKAGE_QT_NETWORK]
     select BR2_PACKAGE_OPENSSL if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_NETWORK]
     inherited [BR2_PACKAGE_QT && BR2_PACKAGE_QT_NETWORK]
    }
    config BR2_PACKAGE_QT_SCRIPT boolean {
     prompt "Script Module" if [BR2_PACKAGE_QT]
     default [y] if [BR2_PACKAGE_QT]
     select BR2_PACKAGE_QT_JAVASCRIPTCORE if [BR2_PACKAGE_QT]
     inherited [BR2_PACKAGE_QT]
     config BR2_PACKAGE_QT_SCRIPTTOOLS boolean {
      prompt "Script Tools Module" if [BR2_PACKAGE_QT && BR2_PACKAGE_QT_SCRIPT]
      depends on [BR2_PACKAGE_QT_SCRIPT]
      inherited [BR2_PACKAGE_QT && BR2_PACKAGE_QT_SCRIPT]
     }
    }
   }
  }
  menuconfig BR2_PACKAGE_XORG7 boolean {
   prompt "X.org X Window System, X11R7, release 7.5" if [BR2_USE_WCHAR]
   select BR2_PACKAGE_ZLIB if [BR2_USE_WCHAR]
   select BR2_PACKAGE_LIBPNG if [BR2_USE_WCHAR]
   select BR2_PACKAGE_EXPAT if [BR2_USE_WCHAR]
   select BR2_PACKAGE_FONTCONFIG if [BR2_USE_WCHAR]
   depends on [BR2_USE_WCHAR]
   inherited [BR2_USE_WCHAR]
   if [BR2_PACKAGE_XORG7] {
    choice boolean {
     prompt "X Window System server type" if [BR2_PACKAGE_XORG7]
     default [BR2_PACKAGE_XSERVER_tinyx] if [BR2_PACKAGE_XORG7]
     config BR2_PACKAGE_XSERVER_xorg boolean {
      prompt "Modular X.org" if [<choice> && BR2_LARGEFILE && BR2_INSTALL_LIBSTDCPP]
      depends on [BR2_LARGEFILE && BR2_INSTALL_LIBSTDCPP]
      inherited [<choice> && BR2_LARGEFILE && BR2_INSTALL_LIBSTDCPP]
     }
     config BR2_PACKAGE_XSERVER_tinyx boolean {
      prompt "TinyX" if [<choice>]
      inherited [<choice>]
     }
    }
    menu "X11R7 Servers" {
     depends on [BR2_PACKAGE_XORG7]
     config BR2_PACKAGE_XSERVER_XORG_SERVER boolean {
      prompt "xorg-server" if [BR2_PACKAGE_XORG7 && !BR2_avr32]
      select BR2_PACKAGE_LIBDRM if [BR2_PACKAGE_XORG7 && !BR2_avr32 && BR2_PACKAGE_XSERVER_xorg]
      select BR2_PACKAGE_MCOOKIE if [BR2_PACKAGE_XORG7 && !BR2_avr32]
      select BR2_PACKAGE_OPENSSL if [BR2_PACKAGE_XORG7 && !BR2_avr32]
      select BR2_PACKAGE_PIXMAN if [BR2_PACKAGE_XORG7 && !BR2_avr32]
      select BR2_PACKAGE_XFONT_FONT_ALIAS if [BR2_PACKAGE_XORG7 && !BR2_avr32 && !BR2_PACKAGE_XSERVER_XORG_SERVER_BUILTIN_FONTS]
      select BR2_PACKAGE_XFONT_FONT_MISC_MISC if [BR2_PACKAGE_XORG7 && !BR2_avr32 && !BR2_PACKAGE_XSERVER_XORG_SERVER_BUILTIN_FONTS]
      select BR2_PACKAGE_XFONT_FONT_CURSOR_MISC if [BR2_PACKAGE_XORG7 && !BR2_avr32 && !BR2_PACKAGE_XSERVER_XORG_SERVER_BUILTIN_FONTS]
      select BR2_PACKAGE_XLIB_LIBPCIACCESS if [BR2_PACKAGE_XORG7 && !BR2_avr32 && BR2_PACKAGE_XSERVER_xorg]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7 && !BR2_avr32]
      select BR2_PACKAGE_XLIB_LIBXAU if [BR2_PACKAGE_XORG7 && !BR2_avr32]
      select BR2_PACKAGE_XLIB_LIBXCURSOR if [BR2_PACKAGE_XORG7 && !BR2_avr32]
      select BR2_PACKAGE_XLIB_LIBXDAMAGE if [BR2_PACKAGE_XORG7 && !BR2_avr32]
      select BR2_PACKAGE_XLIB_LIBXDMCP if [BR2_PACKAGE_XORG7 && !BR2_avr32]
      select BR2_PACKAGE_XLIB_LIBXEXT if [BR2_PACKAGE_XORG7 && !BR2_avr32]
      select BR2_PACKAGE_XLIB_LIBXFIXES if [BR2_PACKAGE_XORG7 && !BR2_avr32]
      select BR2_PACKAGE_XLIB_LIBXFONT if [BR2_PACKAGE_XORG7 && !BR2_avr32]
      select BR2_PACKAGE_XLIB_LIBXFT if [BR2_PACKAGE_XORG7 && !BR2_avr32]
      select BR2_PACKAGE_XLIB_LIBXI if [BR2_PACKAGE_XORG7 && !BR2_avr32]
      select BR2_PACKAGE_XLIB_LIBXINERAMA if [BR2_PACKAGE_XORG7 && !BR2_avr32]
      select BR2_PACKAGE_XLIB_LIBXRANDR if [BR2_PACKAGE_XORG7 && !BR2_avr32]
      select BR2_PACKAGE_XLIB_LIBXRENDER if [BR2_PACKAGE_XORG7 && !BR2_avr32]
      select BR2_PACKAGE_XLIB_LIBXRES if [BR2_PACKAGE_XORG7 && !BR2_avr32]
      select BR2_PACKAGE_XLIB_LIBXXF86VM if [BR2_PACKAGE_XORG7 && !BR2_avr32]
      select BR2_PACKAGE_XLIB_LIBXKBFILE if [BR2_PACKAGE_XORG7 && !BR2_avr32]
      select BR2_PACKAGE_XLIB_XTRANS if [BR2_PACKAGE_XORG7 && !BR2_avr32]
      select BR2_PACKAGE_XDATA_XBITMAPS if [BR2_PACKAGE_XORG7 && !BR2_avr32]
      select BR2_PACKAGE_XPROTO_BIGREQSPROTO if [BR2_PACKAGE_XORG7 && !BR2_avr32]
      select BR2_PACKAGE_XPROTO_COMPOSITEPROTO if [BR2_PACKAGE_XORG7 && !BR2_avr32]
      select BR2_PACKAGE_XPROTO_DAMAGEPROTO if [BR2_PACKAGE_XORG7 && !BR2_avr32]
      select BR2_PACKAGE_XPROTO_FIXESPROTO if [BR2_PACKAGE_XORG7 && !BR2_avr32]
      select BR2_PACKAGE_XPROTO_FONTSPROTO if [BR2_PACKAGE_XORG7 && !BR2_avr32]
      select BR2_PACKAGE_XPROTO_GLPROTO if [BR2_PACKAGE_XORG7 && !BR2_avr32]
      select BR2_PACKAGE_XPROTO_INPUTPROTO if [BR2_PACKAGE_XORG7 && !BR2_avr32]
      select BR2_PACKAGE_XPROTO_KBPROTO if [BR2_PACKAGE_XORG7 && !BR2_avr32]
      select BR2_PACKAGE_XPROTO_RANDRPROTO if [BR2_PACKAGE_XORG7 && !BR2_avr32]
      select BR2_PACKAGE_XPROTO_RENDERPROTO if [BR2_PACKAGE_XORG7 && !BR2_avr32]
      select BR2_PACKAGE_XPROTO_RESOURCEPROTO if [BR2_PACKAGE_XORG7 && !BR2_avr32]
      select BR2_PACKAGE_XPROTO_VIDEOPROTO if [BR2_PACKAGE_XORG7 && !BR2_avr32]
      select BR2_PACKAGE_XPROTO_XCMISCPROTO if [BR2_PACKAGE_XORG7 && !BR2_avr32]
      select BR2_PACKAGE_XPROTO_XEXTPROTO if [BR2_PACKAGE_XORG7 && !BR2_avr32]
      select BR2_PACKAGE_XPROTO_XF86BIGFONTPROTO if [BR2_PACKAGE_XORG7 && !BR2_avr32]
      select BR2_PACKAGE_XPROTO_XF86DGAPROTO if [BR2_PACKAGE_XORG7 && !BR2_avr32]
      select BR2_PACKAGE_XPROTO_XF86DRIPROTO if [BR2_PACKAGE_XORG7 && !BR2_avr32 && BR2_PACKAGE_MESA3D]
      select BR2_PACKAGE_XPROTO_XF86RUSHPROTO if [BR2_PACKAGE_XORG7 && !BR2_avr32]
      select BR2_PACKAGE_XPROTO_XF86VIDMODEPROTO if [BR2_PACKAGE_XORG7 && !BR2_avr32]
      select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7 && !BR2_avr32]
      select BR2_PACKAGE_XUTIL_UTIL_MACROS if [BR2_PACKAGE_XORG7 && !BR2_avr32]
      select BR2_PACKAGE_XKEYBOARD_CONFIG if [BR2_PACKAGE_XORG7 && !BR2_avr32]
      depends on [!BR2_avr32]
      inherited [BR2_PACKAGE_XORG7 && !BR2_avr32]
     }
     config BR2_PACKAGE_XSERVER_XORG_SERVER_NULL_CURSOR boolean {
      prompt "Null root cursor" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_XORG_SERVER]
      depends on [BR2_PACKAGE_XSERVER_XORG_SERVER]
      inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_XORG_SERVER]
     }
     config BR2_PACKAGE_XSERVER_XORG_SERVER_AIGLX boolean {
      prompt "Enable AIGLX Extension" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_XORG_SERVER]
      depends on [BR2_PACKAGE_XSERVER_XORG_SERVER]
      inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_XORG_SERVER]
     }
    }
    menu "X11R7 Libraries" {
     depends on [BR2_PACKAGE_XORG7]
     config BR2_PACKAGE_LIBXCB boolean {
      prompt "libxcb" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_PTHREAD_STUBS if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XCB_PROTO if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXDMCP if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXAU if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_MESA3D boolean {
      prompt "Mesa 3D Graphics Library" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_XORG_SERVER && BR2_INSTALL_LIBSTDCPP]
      select BR2_PACKAGE_XPROTO_GLPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_XORG_SERVER && BR2_INSTALL_LIBSTDCPP]
      select BR2_PACKAGE_XLIB_LIBXXF86VM if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_XORG_SERVER && BR2_INSTALL_LIBSTDCPP]
      select BR2_PACKAGE_XLIB_LIBXDAMAGE if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_XORG_SERVER && BR2_INSTALL_LIBSTDCPP]
      select BR2_PACKAGE_XLIB_LIBXFIXES if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_XORG_SERVER && BR2_INSTALL_LIBSTDCPP]
      select BR2_PACKAGE_XPROTO_DRI2PROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_XORG_SERVER && BR2_INSTALL_LIBSTDCPP]
      select BR2_PACKAGE_LIBDRM if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_XORG_SERVER && BR2_INSTALL_LIBSTDCPP]
      select BR2_PACKAGE_EXPAT if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_XORG_SERVER && BR2_INSTALL_LIBSTDCPP]
      depends on [BR2_PACKAGE_XSERVER_XORG_SERVER]
      depends on [BR2_INSTALL_LIBSTDCPP]
      inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_XORG_SERVER && BR2_INSTALL_LIBSTDCPP]
     }
     config BR2_PACKAGE_PTHREAD_STUBS boolean {
      prompt "pthread-stubs" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XCB_UTIL boolean {
      prompt "xcb-util" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XLIB_LIBFS boolean {
      prompt "libFS" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_XTRANS if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_FONTSPROTO if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XLIB_LIBICE boolean {
      prompt "libICE" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_XTRANS if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XLIB_LIBSM boolean {
      prompt "libSM" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBICE if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_XTRANS if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XLIB_LIBX11 boolean {
      prompt "libX11" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_LIBXCB if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XUTIL_UTIL_MACROS if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_XTRANS if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXAU if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXDMCP if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_KBPROTO if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_XEXTPROTO if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_INPUTPROTO if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_XF86BIGFONTPROTO if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_BIGREQSPROTO if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_XCMISCPROTO if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XLIB_LIBXSCRNSAVER boolean {
      prompt "libXScrnSaver" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXEXT if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_SCRNSAVERPROTO if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XLIB_LIBXAU boolean {
      prompt "libXau" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XUTIL_UTIL_MACROS if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XLIB_LIBXAW boolean {
      prompt "libXaw" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXT if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXMU if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXPM if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXP if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XLIB_LIBXCOMPOSITE boolean {
      prompt "libXcomposite" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_COMPOSITEPROTO if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXEXT if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXFIXES if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XLIB_LIBXCURSOR boolean {
      prompt "libXcursor" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXFIXES if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXRENDER if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XLIB_LIBXDAMAGE boolean {
      prompt "libXdamage" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_DAMAGEPROTO if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXFIXES if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XLIB_LIBXDMCP boolean {
      prompt "libXdmcp" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XUTIL_UTIL_MACROS if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XLIB_LIBXEXT boolean {
      prompt "libXext" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_XEXTPROTO if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XLIB_LIBXFIXES boolean {
      prompt "libXfixes" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_FIXESPROTO if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_XEXTPROTO if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XLIB_LIBXFONT boolean {
      prompt "libXfont" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_FREETYPE if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBFONTENC if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_XTRANS if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_FONTCACHEPROTO if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_FONTSPROTO if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XFONT_ENCODINGS if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XLIB_LIBXFONTCACHE boolean {
      prompt "libXfontcache" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXEXT if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_FONTCACHEPROTO if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XLIB_LIBXFT boolean {
      prompt "libXft" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_FONTCONFIG if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_FREETYPE if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXEXT if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXRENDER if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XLIB_LIBXI boolean {
      prompt "libXi" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_INPUTPROTO if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXEXT if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XLIB_LIBXINERAMA boolean {
      prompt "libXinerama" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXEXT if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_XINERAMAPROTO if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XLIB_LIBXMU boolean {
      prompt "libXmu" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXEXT if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXT if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XLIB_LIBXP boolean {
      prompt "libXp" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXAU if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXEXT if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_PRINTPROTO if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XLIB_LIBXPM boolean {
      prompt "libXpm" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXEXT if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXT if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XLIB_LIBXPRINTAPPUTIL boolean {
      prompt "libXprintAppUtil" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXP if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXPRINTUTIL if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XLIB_LIBXPRINTUTIL boolean {
      prompt "libXprintUtil" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXP if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXT if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_PRINTPROTO if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XLIB_LIBXRANDR boolean {
      prompt "libXrandr" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_RANDRPROTO if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXEXT if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXRENDER if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_RENDERPROTO if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XLIB_LIBXRENDER boolean {
      prompt "libXrender" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_RENDERPROTO if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XLIB_LIBXRES boolean {
      prompt "libXres" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXEXT if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_RESOURCEPROTO if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XLIB_LIBXT boolean {
      prompt "libXt" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBSM if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_KBPROTO if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XCB_PROTO if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_LIBXCB if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XLIB_LIBXTST boolean {
      prompt "libXtst" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXI if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXEXT if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_RECORDPROTO if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XLIB_LIBXV boolean {
      prompt "libXv" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXEXT if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_VIDEOPROTO if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XLIB_LIBXVMC boolean {
      prompt "libXvMC" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXEXT if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXV if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_VIDEOPROTO if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XLIB_LIBXXF86DGA boolean {
      prompt "libXxf86dga" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXEXT if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_XF86DGAPROTO if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XLIB_LIBXXF86VM boolean {
      prompt "libXxf86vm" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXEXT if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_XF86VIDMODEPROTO if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XLIB_LIBDMX boolean {
      prompt "libdmx" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXEXT if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_DMXPROTO if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XLIB_LIBFONTENC boolean {
      prompt "libfontenc" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XLIB_LIBOLDX boolean {
      prompt "liboldX" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XLIB_LIBXKBFILE boolean {
      prompt "libxkbfile" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_KBPROTO if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XLIB_LIBXKBUI boolean {
      prompt "libxkbui" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXKBFILE if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXT if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_KBPROTO if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XLIB_XTRANS boolean {
      prompt "xtrans" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XLIB_LIBPCIACCESS boolean {
      prompt "libpciaccess" if [BR2_PACKAGE_XORG7 && BR2_LARGEFILE]
      depends on [BR2_LARGEFILE]
      inherited [BR2_PACKAGE_XORG7 && BR2_LARGEFILE]
     }
    }
    menu "X11R7 Applications" {
     depends on [BR2_PACKAGE_XORG7]
     config BR2_PACKAGE_XAPP_APPRES boolean {
      prompt "appres" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXT if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_BDFTOPCF boolean {
      prompt "bdftopcf" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXFONT if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_BEFORELIGHT boolean {
      prompt "beforelight" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXSCRNSAVER if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXAW if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXT if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_BITMAP boolean {
      prompt "bitmap" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXAW if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXMU if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XDATA_XBITMAPS if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_EDITRES boolean {
      prompt "editres" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXAW if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXMU if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXT if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_FONTTOSFNT boolean {
      prompt "fonttosfnt" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_FREETYPE if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBFONTENC if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_FSLSFONTS boolean {
      prompt "fslsfonts" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBFS if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_FSTOBDF boolean {
      prompt "fstobdf" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBFS if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_ICEAUTH boolean {
      prompt "iceauth" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBICE if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_ICO boolean {
      prompt "ico" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_LISTRES boolean {
      prompt "listres" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXAW if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXMU if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXT if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_LUIT boolean {
      prompt "luit" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBFONTENC if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_MKFONTDIR boolean {
      prompt "mkfontdir" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XAPP_MKFONTSCALE if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_MKFONTSCALE boolean {
      prompt "mkfontscale" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_FREETYPE if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBFONTENC if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_OCLOCK boolean {
      prompt "oclock" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXEXT if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXMU if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_RGB boolean {
      prompt "rgb" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_RSTART boolean {
      prompt "rstart" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_SCRIPTS boolean {
      prompt "scripts" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_SESSREG boolean {
      prompt "sessreg" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_SETXKBMAP boolean {
      prompt "setxkbmap" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXKBFILE if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_SHOWFONT boolean {
      prompt "showfont" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBFS if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_SMPROXY boolean {
      prompt "smproxy" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXMU if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXT if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_TWM boolean {
      prompt "twm" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_VIEWRES boolean {
      prompt "viewres" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXAW if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_X11PERF boolean {
      prompt "x11perf" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXMU if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXFT if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XAUTH boolean {
      prompt "xauth" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXAU if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXEXT if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXMU if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XBACKLIGHT boolean {
      prompt "xbacklight" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XBIFF boolean {
      prompt "xbiff" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXAW if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XDATA_XBITMAPS if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XCALC boolean {
      prompt "xcalc" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXAW if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XCLIPBOARD boolean {
      prompt "xclipboard" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXAW if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XCLOCK boolean {
      prompt "xclock" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXAW if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXFT if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXRENDER if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXKBFILE if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XCMSDB boolean {
      prompt "xcmsdb" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XCURSORGEN boolean {
      prompt "xcursorgen" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_LIBPNG if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXCURSOR if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XDBEDIZZY boolean {
      prompt "xdbedizzy" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXEXT if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXP if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXPRINTUTIL if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XDITVIEW boolean {
      prompt "xditview" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXAW if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XDM boolean {
      prompt "xdm" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XAPP_XINIT if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XAPP_SESSREG if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XAPP_XRDB if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXAW if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXDMCP if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXINERAMA if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXT if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_XINERAMAPROTO if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XDPYINFO boolean {
      prompt "xdpyinfo" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXEXT if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXI if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXP if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXRENDER if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXTST if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXXF86DGA if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXXF86VM if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_INPUTPROTO if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_KBPROTO if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_PRINTPROTO if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_RENDERPROTO if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_XF86DGAPROTO if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_XF86VIDMODEPROTO if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XDRIINFO boolean {
      prompt "xdriinfo" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_MESA3D]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_MESA3D]
      select BR2_PACKAGE_XPROTO_GLPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_MESA3D]
      depends on [BR2_PACKAGE_MESA3D]
      inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_MESA3D]
     }
     config BR2_PACKAGE_XAPP_XEDIT boolean {
      prompt "xedit" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXAW if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXPRINTUTIL if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XEV boolean {
      prompt "xev" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XEYES boolean {
      prompt "xeyes" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXEXT if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXMU if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXT if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XF86DGA boolean {
      prompt "xf86dga" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXXF86DGA if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XFD boolean {
      prompt "xfd" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_FREETYPE if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_FONTCONFIG if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXAW if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXFT if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XFONTSEL boolean {
      prompt "xfontsel" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXAW if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XFS boolean {
      prompt "xfs" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBFS if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXFONT if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_FONTSPROTO if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XFSINFO boolean {
      prompt "xfsinfo" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBFS if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XGAMMA boolean {
      prompt "xgamma" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXXF86VM if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XGC boolean {
      prompt "xgc" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXAW if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XHOST boolean {
      prompt "xhost" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXMU if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XINIT boolean {
      prompt "xinit" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XAPP_XAUTH if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XINPUT boolean {
      prompt "xinput" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XKBCOMP boolean {
      prompt "xkbcomp" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXKBFILE if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XKBEVD boolean {
      prompt "xkbevd" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXKBFILE if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XKBPRINT boolean {
      prompt "xkbprint" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXKBFILE if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XKBUTILS boolean {
      prompt "xkbutils" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXAW if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXKBFILE if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XKILL boolean {
      prompt "xkill" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXMU if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XLOAD boolean {
      prompt "xload" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXAW if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XLOGO boolean {
      prompt "xlogo" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXAW if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXPRINTUTIL if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXRENDER if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XLSATOMS boolean {
      prompt "xlsatoms" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXMU if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XLSCLIENTS boolean {
      prompt "xlsclients" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXMU if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XLSFONTS boolean {
      prompt "xlsfonts" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XMAG boolean {
      prompt "xmag" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXAW if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XMAN boolean {
      prompt "xman" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XMESSAGE boolean {
      prompt "xmessage" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXAW if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XMH boolean {
      prompt "xmh" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXAW if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XMODMAP boolean {
      prompt "xmodmap" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XMORE boolean {
      prompt "xmore" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXPRINTUTIL if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXPRINTUTIL if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XPLSPRINTERS boolean {
      prompt "xplsprinters" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXP if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXPRINTUTIL if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XPR boolean {
      prompt "xpr" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXMU if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XPREHASHPRINTERLIST boolean {
      prompt "xprehashprinterlist" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXP if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XPROP boolean {
      prompt "xprop" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXMU if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XRANDR boolean {
      prompt "xrandr" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXRANDR if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XRDB boolean {
      prompt "xrdb" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXMU if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XREFRESH boolean {
      prompt "xrefresh" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XSET boolean {
      prompt "xset" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXFONTCACHE if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXMU if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XSETMODE boolean {
      prompt "xsetmode" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXI if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XSETPOINTER boolean {
      prompt "xsetpointer" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XPROTO_INPUTPROTO if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXI if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XSETROOT boolean {
      prompt "xsetroot" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXMU if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XDATA_XBITMAPS if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XSM boolean {
      prompt "xsm" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXAW if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XSTDCMAP boolean {
      prompt "xstdcmap" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXMU if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XVIDTUNE boolean {
      prompt "xvidtune" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXAW if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXXF86VM if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XVINFO boolean {
      prompt "xvinfo" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXV if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XWD boolean {
      prompt "xwd" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXMU if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XWININFO boolean {
      prompt "xwininfo" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXMU if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XAPP_XWUD boolean {
      prompt "xwud" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
    }
    if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg] {
     menu "X11R7 Drivers" {
      depends on [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
      config BR2_PACKAGE_XDRIVER_XF86_INPUT_ACECAD boolean {
       prompt "xf86-input-acecad" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XSERVER_XORG_SERVER if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_INPUTPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RANDRPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
      }
      config BR2_PACKAGE_XDRIVER_XF86_INPUT_AIPTEK boolean {
       prompt "xf86-input-aiptek" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XSERVER_XORG_SERVER if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_INPUTPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RANDRPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
      }
      config BR2_PACKAGE_XDRIVER_XF86_INPUT_EVDEV boolean {
       prompt "xf86-input-evdev" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_INPUTPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XSERVER_XORG_SERVER if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RANDRPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
      }
      config BR2_PACKAGE_XDRIVER_XF86_INPUT_JOYSTICK boolean {
       prompt "xf86-input-joystick" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XSERVER_XORG_SERVER if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_INPUTPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RANDRPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
      }
      config BR2_PACKAGE_XDRIVER_XF86_INPUT_KEYBOARD boolean {
       prompt "xf86-input-keyboard" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XSERVER_XORG_SERVER if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_INPUTPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_KBPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RANDRPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
      }
      config BR2_PACKAGE_XDRIVER_XF86_INPUT_MOUSE boolean {
       prompt "xf86-input-mouse" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XSERVER_XORG_SERVER if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_INPUTPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RANDRPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
      }
      config BR2_PACKAGE_XDRIVER_XF86_INPUT_SYNAPTICS boolean {
       prompt "xf86-input-synaptics" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XSERVER_XORG_SERVER if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_INPUTPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RANDRPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
      }
      config BR2_PACKAGE_XDRIVER_XF86_INPUT_VMMOUSE boolean {
       prompt "xf86-input-vmmouse" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XSERVER_XORG_SERVER if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_INPUTPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RANDRPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
      }
      config BR2_PACKAGE_XDRIVER_XF86_INPUT_VOID boolean {
       prompt "xf86-input-void" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XSERVER_XORG_SERVER if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_INPUTPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RANDRPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
      }
      config BR2_PACKAGE_XDRIVER_XF86_VIDEO_APM boolean {
       prompt "xf86-video-apm" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XSERVER_XORG_SERVER if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_FONTSPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RANDRPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RENDERPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_VIDEOPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XEXTPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XF86RUSHPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
      }
      config BR2_PACKAGE_XDRIVER_XF86_VIDEO_ARK boolean {
       prompt "xf86-video-ark" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XSERVER_XORG_SERVER if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_FONTSPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RANDRPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RENDERPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XEXTPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
      }
      config BR2_PACKAGE_XDRIVER_XF86_VIDEO_AST boolean {
       prompt "xf86-video-ast" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
      }
      config BR2_PACKAGE_XDRIVER_XF86_VIDEO_ATI boolean {
       prompt "xf86-video-ati" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XSERVER_XORG_SERVER if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_LIBDRM if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_MESA3D if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_FONTSPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_GLPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RANDRPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_VIDEOPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XEXTPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XF86DRIPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XINERAMAPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
      }
      config BR2_PACKAGE_XDRIVER_XF86_VIDEO_CHIPS boolean {
       prompt "xf86-video-chips" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XSERVER_XORG_SERVER if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_FONTSPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RANDRPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RENDERPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_VIDEOPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
      }
      config BR2_PACKAGE_XDRIVER_XF86_VIDEO_CIRRUS boolean {
       prompt "xf86-video-cirrus" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XSERVER_XORG_SERVER if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_FONTSPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RANDRPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RENDERPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_VIDEOPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XEXTPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
      }
      config BR2_PACKAGE_XDRIVER_XF86_VIDEO_DUMMY boolean {
       prompt "xf86-video-dummy" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XSERVER_XORG_SERVER if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_FONTSPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RANDRPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RENDERPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_VIDEOPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XF86DGAPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
      }
      config BR2_PACKAGE_XDRIVER_XF86_VIDEO_FBDEV boolean {
       prompt "xf86-video-fbdev" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XSERVER_XORG_SERVER if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_FONTSPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RANDRPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RENDERPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_VIDEOPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
      }
      config BR2_PACKAGE_XDRIVER_XF86_VIDEO_GEODE boolean {
       prompt "xf86-video-geode" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XSERVER_XORG_SERVER if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_FONTSPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RANDRPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RENDERPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_VIDEOPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
      }
      config BR2_PACKAGE_XDRIVER_XF86_VIDEO_GLIDE boolean {
       prompt "xf86-video-glide" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg && BROKEN]
       select BR2_PACKAGE_XSERVER_XORG_SERVER if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg && BROKEN]
       select BR2_PACKAGE_XPROTO_FONTSPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg && BROKEN]
       select BR2_PACKAGE_XPROTO_RANDRPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg && BROKEN]
       select BR2_PACKAGE_XPROTO_RENDERPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg && BROKEN]
       select BR2_PACKAGE_XPROTO_VIDEOPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg && BROKEN]
       select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg && BROKEN]
       depends on [BROKEN]
       inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg && BROKEN]
      }
      config BR2_PACKAGE_XDRIVER_XF86_VIDEO_GLINT boolean {
       prompt "xf86-video-glint" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XSERVER_XORG_SERVER if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_LIBDRM if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_MESA3D if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_FONTSPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_GLPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RANDRPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RENDERPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_VIDEOPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XEXTPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XF86DGAPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XF86DRIPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
      }
      config BR2_PACKAGE_XDRIVER_XF86_VIDEO_I128 boolean {
       prompt "xf86-video-i128" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XSERVER_XORG_SERVER if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_FONTSPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RANDRPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RENDERPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_VIDEOPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XEXTPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
      }
      config BR2_PACKAGE_XDRIVER_XF86_VIDEO_I740 boolean {
       prompt "xf86-video-i740" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XSERVER_XORG_SERVER if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_FONTSPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RANDRPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RENDERPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_VIDEOPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XEXTPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
      }
      config BR2_PACKAGE_XDRIVER_XF86_VIDEO_INTEL boolean {
       prompt "xf86-video-intel" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XSERVER_XORG_SERVER if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_FONTSPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RANDRPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RENDERPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XLIB_LIBPCIACCESS if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_LIBDRM if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_MESA3D if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
      }
      config BR2_PACKAGE_XDRIVER_XF86_VIDEO_MACH64 boolean {
       prompt "xf86-video-mach64" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_MESA3D if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XSERVER_XORG_SERVER if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_FONTSPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RANDRPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RENDERPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XEXTPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
      }
      config BR2_PACKAGE_XDRIVER_XF86_VIDEO_MGA boolean {
       prompt "xf86-video-mga" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XSERVER_XORG_SERVER if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_LIBDRM if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_MESA3D if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_FONTSPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_GLPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RANDRPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RENDERPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_VIDEOPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XEXTPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XF86DRIPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
      }
      config BR2_PACKAGE_XDRIVER_XF86_VIDEO_NEOMAGIC boolean {
       prompt "xf86-video-neomagic" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XSERVER_XORG_SERVER if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_FONTSPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RANDRPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RENDERPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_VIDEOPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XEXTPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XF86DGAPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
      }
      config BR2_PACKAGE_XDRIVER_XF86_VIDEO_NEWPORT boolean {
       prompt "xf86-video-newport" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XSERVER_XORG_SERVER if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_FONTSPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RANDRPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RENDERPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_VIDEOPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
      }
      config BR2_PACKAGE_XDRIVER_XF86_VIDEO_NV boolean {
       prompt "xf86-video-nv" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XSERVER_XORG_SERVER if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_FONTSPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RANDRPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RENDERPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_VIDEOPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XEXTPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
      }
      config BR2_PACKAGE_XDRIVER_XF86_VIDEO_OPENCHROME boolean {
       prompt "xf86-video-openchrome" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XSERVER_XORG_SERVER if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_LIBDRM if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_MESA3D if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XLIB_LIBXCOMPOSITE if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XLIB_LIBXVMC if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_GLPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RANDRPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RENDERPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XEXTPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XF86DRIPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
      }
      config BR2_PACKAGE_XDRIVER_XF86_VIDEO_R128 boolean {
       prompt "xf86-video-r128" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_MESA3D if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XSERVER_XORG_SERVER if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_FONTSPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RANDRPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RENDERPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XEXTPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
      }
      config BR2_PACKAGE_XDRIVER_XF86_VIDEO_RENDITION boolean {
       prompt "xf86-video-rendition" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XSERVER_XORG_SERVER if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_FONTSPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RANDRPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RENDERPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XEXTPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
      }
      config BR2_PACKAGE_XDRIVER_XF86_VIDEO_S3 boolean {
       prompt "xf86-video-s3" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XSERVER_XORG_SERVER if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_FONTSPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RANDRPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RENDERPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_VIDEOPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XEXTPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
      }
      config BR2_PACKAGE_XDRIVER_XF86_VIDEO_S3VIRGE boolean {
       prompt "xf86-video-s3virge" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XSERVER_XORG_SERVER if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_FONTSPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RANDRPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RENDERPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_VIDEOPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XEXTPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
      }
      config BR2_PACKAGE_XDRIVER_XF86_VIDEO_SAVAGE boolean {
       prompt "xf86-video-savage" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XSERVER_XORG_SERVER if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_LIBDRM if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_MESA3D if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_FONTSPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RANDRPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RENDERPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_VIDEOPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XEXTPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XF86DRIPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
      }
      config BR2_PACKAGE_XDRIVER_XF86_VIDEO_SILICONMOTION boolean {
       prompt "xf86-video-siliconmotion" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XSERVER_XORG_SERVER if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_FONTSPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RANDRPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RENDERPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_VIDEOPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XEXTPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
      }
      config BR2_PACKAGE_XDRIVER_XF86_VIDEO_SIS boolean {
       prompt "xf86-video-sis" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XSERVER_XORG_SERVER if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_LIBDRM if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_MESA3D if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_FONTSPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RANDRPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RENDERPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_VIDEOPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XEXTPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XF86DGAPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XF86DRIPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XINERAMAPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
      }
      config BR2_PACKAGE_XDRIVER_XF86_VIDEO_SISUSB boolean {
       prompt "xf86-video-sisusb" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XSERVER_XORG_SERVER if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_FONTSPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RANDRPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RENDERPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_VIDEOPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XEXTPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XINERAMAPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
      }
      config BR2_PACKAGE_XDRIVER_XF86_VIDEO_SUNCG14 boolean {
       prompt "xf86-video-suncg14" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XSERVER_XORG_SERVER if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_FONTSPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RANDRPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RENDERPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
      }
      config BR2_PACKAGE_XDRIVER_XF86_VIDEO_SUNCG3 boolean {
       prompt "xf86-video-suncg3" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XSERVER_XORG_SERVER if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_FONTSPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RANDRPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RENDERPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
      }
      config BR2_PACKAGE_XDRIVER_XF86_VIDEO_SUNCG6 boolean {
       prompt "xf86-video-suncg6" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XSERVER_XORG_SERVER if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_FONTSPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RANDRPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RENDERPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
      }
      config BR2_PACKAGE_XDRIVER_XF86_VIDEO_SUNFFB boolean {
       prompt "xf86-video-sunffb" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XSERVER_XORG_SERVER if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_LIBDRM if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_FONTSPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RANDRPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RENDERPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XEXTPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XF86DRIPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
      }
      config BR2_PACKAGE_XDRIVER_XF86_VIDEO_SUNLEO boolean {
       prompt "xf86-video-sunleo" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XSERVER_XORG_SERVER if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_FONTSPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RANDRPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RENDERPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
      }
      config BR2_PACKAGE_XDRIVER_XF86_VIDEO_SUNTCX boolean {
       prompt "xf86-video-suntcx" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XSERVER_XORG_SERVER if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_FONTSPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RANDRPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RENDERPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
      }
      config BR2_PACKAGE_XDRIVER_XF86_VIDEO_TDFX boolean {
       prompt "xf86-video-tdfx" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XSERVER_XORG_SERVER if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_LIBDRM if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_MESA3D if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_FONTSPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RANDRPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RENDERPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_VIDEOPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XEXTPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XF86DRIPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
      }
      config BR2_PACKAGE_XDRIVER_XF86_VIDEO_TGA boolean {
       prompt "xf86-video-tga" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XSERVER_XORG_SERVER if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_FONTSPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RANDRPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RENDERPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_VIDEOPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XEXTPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XF86DGAPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
      }
      config BR2_PACKAGE_XDRIVER_XF86_VIDEO_TRIDENT boolean {
       prompt "xf86-video-trident" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XSERVER_XORG_SERVER if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_FONTSPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RANDRPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RENDERPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_VIDEOPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XEXTPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XF86DGAPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
      }
      config BR2_PACKAGE_XDRIVER_XF86_VIDEO_TSENG boolean {
       prompt "xf86-video-tseng" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XSERVER_XORG_SERVER if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_FONTSPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RANDRPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RENDERPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_VIDEOPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XEXTPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
      }
      config BR2_PACKAGE_XDRIVER_XF86_VIDEO_V4L boolean {
       prompt "xf86-video-v4l" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XSERVER_XORG_SERVER if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RANDRPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_VIDEOPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
      }
      config BR2_PACKAGE_XDRIVER_XF86_VIDEO_VESA boolean {
       prompt "xf86-video-vesa" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XSERVER_XORG_SERVER if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_FONTSPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RANDRPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RENDERPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XEXTPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
      }
      config BR2_PACKAGE_XDRIVER_XF86_VIDEO_VMWARE boolean {
       prompt "xf86-video-vmware" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XSERVER_XORG_SERVER if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_FONTSPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RANDRPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RENDERPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XEXTPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XINERAMAPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
      }
      config BR2_PACKAGE_XDRIVER_XF86_VIDEO_VOODOO boolean {
       prompt "xf86-video-voodoo" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XSERVER_XORG_SERVER if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_FONTSPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RANDRPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RENDERPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XEXTPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XF86DGAPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
      }
      config BR2_PACKAGE_XDRIVER_XF86_VIDEO_WSFB boolean {
       prompt "xf86-video-wsfb" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg && BROKEN]
       select BR2_PACKAGE_XSERVER_XORG_SERVER if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg && BROKEN]
       select BR2_PACKAGE_XPROTO_FONTSPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg && BROKEN]
       select BR2_PACKAGE_XPROTO_RANDRPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg && BROKEN]
       select BR2_PACKAGE_XPROTO_RENDERPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg && BROKEN]
       select BR2_PACKAGE_XPROTO_XEXTPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg && BROKEN]
       select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg && BROKEN]
       depends on [BROKEN]
       inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg && BROKEN]
      }
      config BR2_PACKAGE_XDRIVER_XF86_VIDEO_XGI boolean {
       prompt "xf86-video-xgi" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_MESA3D if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XSERVER_XORG_SERVER if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_FONTSPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RANDRPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RENDERPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XEXTPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
      }
      config BR2_PACKAGE_XDRIVER_XF86_VIDEO_XGIXP boolean {
       prompt "xf86-video-xgixp" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_MESA3D if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XSERVER_XORG_SERVER if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_FONTSPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RANDRPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_RENDERPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XEXTPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       select BR2_PACKAGE_XPROTO_XPROTO if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
       inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_XSERVER_xorg]
      }
     }
    }
    menu "X11R7 Fonts" {
     depends on [BR2_PACKAGE_XORG7]
     config BR2_PACKAGE_XFONT_FONT_UTIL boolean {
      prompt "font-util" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XFONT_ENCODINGS boolean {
      prompt "encodings" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XFONT_FONT_ADOBE_100DPI boolean {
      prompt "font-adobe-100dpi" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XFONT_FONT_ADOBE_75DPI boolean {
      prompt "font-adobe-75dpi" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XFONT_FONT_ADOBE_UTOPIA_100DPI boolean {
      prompt "font-adobe-utopia-100dpi" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XFONT_FONT_ADOBE_UTOPIA_75DPI boolean {
      prompt "font-adobe-utopia-75dpi" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XFONT_FONT_ADOBE_UTOPIA_TYPE1 boolean {
      prompt "font-adobe-utopia-type1" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XFONT_FONT_ALIAS boolean {
      prompt "font-alias" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XFONT_FONT_ARABIC_MISC boolean {
      prompt "font-arabic-misc" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XFONT_FONT_BH_100DPI boolean {
      prompt "font-bh-100dpi" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XFONT_FONT_BH_75DPI boolean {
      prompt "font-bh-75dpi" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XFONT_FONT_BH_LUCIDATYPEWRITER_100DPI boolean {
      prompt "font-bh-lucidatypewriter-100dpi" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XFONT_FONT_BH_LUCIDATYPEWRITER_75DPI boolean {
      prompt "font-bh-lucidatypewriter-75dpi" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XFONT_FONT_BH_TTF boolean {
      prompt "font-bh-ttf" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XFONT_FONT_BH_TYPE1 boolean {
      prompt "font-bh-type1" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XFONT_FONT_BITSTREAM_100DPI boolean {
      prompt "font-bitstream-100dpi" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XFONT_FONT_BITSTREAM_75DPI boolean {
      prompt "font-bitstream-75dpi" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XFONT_FONT_BITSTREAM_SPEEDO boolean {
      prompt "font-bitstream-speedo" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XFONT_FONT_BITSTREAM_TYPE1 boolean {
      prompt "font-bitstream-type1" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XFONT_FONT_CRONYX_CYRILLIC boolean {
      prompt "font-cronyx-cyrillic" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XFONT_FONT_CURSOR_MISC boolean {
      prompt "font-cursor-misc" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XFONT_FONT_DAEWOO_MISC boolean {
      prompt "font-daewoo-misc" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XFONT_FONT_DEC_MISC boolean {
      prompt "font-dec-misc" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XFONT_FONT_IBM_TYPE1 boolean {
      prompt "font-ibm-type1" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XFONT_FONT_ISAS_MISC boolean {
      prompt "font-isas-misc" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XFONT_FONT_JIS_MISC boolean {
      prompt "font-jis-misc" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XFONT_FONT_MICRO_MISC boolean {
      prompt "font-micro-misc" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XFONT_FONT_MISC_CYRILLIC boolean {
      prompt "font-misc-cyrillic" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XFONT_FONT_MISC_ETHIOPIC boolean {
      prompt "font-misc-ethiopic" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XFONT_FONT_MISC_MELTHO boolean {
      prompt "font-misc-meltho" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XFONT_FONT_MISC_MISC boolean {
      prompt "font-misc-misc" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XFONT_FONT_MUTT_MISC boolean {
      prompt "font-mutt-misc" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XFONT_FONT_SCHUMACHER_MISC boolean {
      prompt "font-schumacher-misc" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XFONT_FONT_SCREEN_CYRILLIC boolean {
      prompt "font-screen-cyrillic" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XFONT_FONT_SONY_MISC boolean {
      prompt "font-sony-misc" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XFONT_FONT_SUN_MISC boolean {
      prompt "font-sun-misc" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XFONT_FONT_WINITZKI_CYRILLIC boolean {
      prompt "font-winitzki-cyrillic" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XFONT_FONT_XFREE86_TYPE1 boolean {
      prompt "font-xfree86-type1" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
    }
    menu "X11R7 X protocols" {
     depends on [BR2_PACKAGE_XORG7]
     config BR2_PACKAGE_XCB_PROTO boolean {
      prompt "xcb-proto" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XPROTO_APPLEWMPROTO boolean {
      prompt "applewmproto" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XPROTO_BIGREQSPROTO boolean {
      prompt "bigreqsproto" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XPROTO_COMPOSITEPROTO boolean {
      prompt "compositeproto" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XPROTO_DAMAGEPROTO boolean {
      prompt "damageproto" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XPROTO_DMXPROTO boolean {
      prompt "dmxproto" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XPROTO_DRI2PROTO boolean {
      prompt "dri2proto" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XPROTO_FIXESPROTO boolean {
      prompt "fixesproto" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XPROTO_FONTCACHEPROTO boolean {
      prompt "fontcacheproto" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XPROTO_FONTSPROTO boolean {
      prompt "fontsproto" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XPROTO_GLPROTO boolean {
      prompt "glproto" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XPROTO_INPUTPROTO boolean {
      prompt "inputproto" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XPROTO_KBPROTO boolean {
      prompt "kbproto" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XPROTO_PRINTPROTO boolean {
      prompt "printproto" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XPROTO_RANDRPROTO boolean {
      prompt "randrproto" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XPROTO_RECORDPROTO boolean {
      prompt "recordproto" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XPROTO_RENDERPROTO boolean {
      prompt "renderproto" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XPROTO_RESOURCEPROTO boolean {
      prompt "resourceproto" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XPROTO_SCRNSAVERPROTO boolean {
      prompt "scrnsaverproto" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XPROTO_VIDEOPROTO boolean {
      prompt "videoproto" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XPROTO_WINDOWSWMPROTO boolean {
      prompt "windowswmproto" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XPROTO_XCMISCPROTO boolean {
      prompt "xcmiscproto" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XPROTO_XEXTPROTO boolean {
      prompt "xextproto" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XPROTO_XF86BIGFONTPROTO boolean {
      prompt "xf86bigfontproto" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XPROTO_XF86DGAPROTO boolean {
      prompt "xf86dgaproto" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XPROTO_XF86DRIPROTO boolean {
      prompt "xf86driproto" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XPROTO_XF86RUSHPROTO boolean {
      prompt "xf86rushproto" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XPROTO_XF86VIDMODEPROTO boolean {
      prompt "xf86vidmodeproto" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XPROTO_XINERAMAPROTO boolean {
      prompt "xineramaproto" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XPROTO_XPROTO boolean {
      prompt "xproto" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
    }
    menu "X11R7 Utilities" {
     depends on [BR2_PACKAGE_XORG7]
     config BR2_PACKAGE_XUTIL_MAKEDEPEND boolean {
      prompt "makedepend" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XUTIL_UTIL_MACROS boolean {
      prompt "util-macros" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_MCOOKIE boolean {
      prompt "mcookie" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
    }
    menu "X11R7 Other data" {
     depends on [BR2_PACKAGE_XORG7]
     config BR2_PACKAGE_XDATA_XBITMAPS boolean {
      prompt "xbitmaps" if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XDATA_XCURSOR_THEMES boolean {
      prompt "xdata_xcursor-themes" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XLIB_LIBXCURSOR if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
     config BR2_PACKAGE_XKEYBOARD_CONFIG boolean {
      prompt "xkeyboard-config" if [BR2_PACKAGE_XORG7]
      select BR2_PACKAGE_XAPP_XKBCOMP if [BR2_PACKAGE_XORG7]
      inherited [BR2_PACKAGE_XORG7]
     }
    }
   }
  }
  config BR2_PACKAGE_LIBERATION boolean {
   prompt "Liberation (Free fonts)" if []
  }
  config BR2_PACKAGE_LIBSEXY boolean {
   prompt "libsexy" if [BR2_PACKAGE_LIBGTK2]
   depends on [BR2_PACKAGE_LIBGTK2]
   select BR2_PACKAGE_LIBXML2 if [BR2_PACKAGE_LIBGTK2]
   inherited [BR2_PACKAGE_LIBGTK2]
  }
  config BR2_PACKAGE_MATCHBOX boolean {
   prompt "MatchBox Window Manager" if [BR2_PACKAGE_XORG7]
   depends on [BR2_PACKAGE_XORG7]
   select BR2_PACKAGE_FONTCONFIG if [BR2_PACKAGE_XORG7]
   select BR2_PACKAGE_EXPAT if [BR2_PACKAGE_XORG7]
   select BR2_PACKAGE_XLIB_LIBXEXT if [BR2_PACKAGE_XORG7]
   select BR2_PACKAGE_XLIB_LIBXDAMAGE if [BR2_PACKAGE_XORG7]
   select BR2_PACKAGE_XLIB_LIBXCURSOR if [BR2_PACKAGE_XORG7]
   inherited [BR2_PACKAGE_XORG7]
   config BR2_PACKAGE_MATCHBOX_PANEL boolean {
    prompt "Matchbox Panel" if [BR2_PACKAGE_MATCHBOX]
    depends on [BR2_PACKAGE_MATCHBOX]
    inherited [BR2_PACKAGE_MATCHBOX]
   }
   config BR2_PACKAGE_MATCHBOX_DESKTOP boolean {
    prompt "Matchbox Desktop" if [BR2_PACKAGE_MATCHBOX]
    depends on [BR2_PACKAGE_MATCHBOX]
    inherited [BR2_PACKAGE_MATCHBOX]
   }
   config BR2_PACKAGE_MATCHBOX_KEYBOARD boolean {
    prompt "Matchbox Virtual Keyboard" if [BR2_PACKAGE_MATCHBOX]
    depends on [BR2_PACKAGE_MATCHBOX]
    select BR2_PACKAGE_XLIB_LIBXTST if [BR2_PACKAGE_MATCHBOX]
    inherited [BR2_PACKAGE_MATCHBOX]
   }
  }
  config BR2_PACKAGE_METACITY boolean {
   prompt "metacity" if [BR2_PACKAGE_LIBGTK2 && BR2_PACKAGE_XORG7]
   depends on [BR2_PACKAGE_LIBGTK2]
   depends on [BR2_PACKAGE_XORG7]
   inherited [BR2_PACKAGE_LIBGTK2 && BR2_PACKAGE_XORG7]
  }
  config BR2_PACKAGE_BLACKBOX boolean {
   prompt "blackbox" if [BR2_PACKAGE_XORG7 && BR2_INSTALL_LIBSTDCPP]
   depends on [BR2_PACKAGE_XORG7]
   depends on [BR2_INSTALL_LIBSTDCPP]
   select BR2_PACKAGE_LIBICONV if [BR2_PACKAGE_XORG7 && BR2_INSTALL_LIBSTDCPP && !BR2_ENABLE_LOCALE]
   select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7 && BR2_INSTALL_LIBSTDCPP]
   inherited [BR2_PACKAGE_XORG7 && BR2_INSTALL_LIBSTDCPP]
  }
  config BR2_PACKAGE_ALSAMIXERGUI boolean {
   depends on [BR2_PACKAGE_XORG7]
   depends on [BR2_PACKAGE_ALSA_LIB]
   depends on [BR2_INSTALL_LIBSTDCPP]
   select BR2_PACKAGE_FLTK if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_ALSA_LIB && BR2_INSTALL_LIBSTDCPP]
   prompt "alsamixergui" if [BR2_PACKAGE_XORG7 && BR2_PACKAGE_ALSA_LIB && BR2_INSTALL_LIBSTDCPP]
   inherited [BR2_PACKAGE_XORG7 && BR2_PACKAGE_ALSA_LIB && BR2_INSTALL_LIBSTDCPP]
  }
  config BR2_PACKAGE_DOCKER boolean {
   prompt "docker" if [BR2_PACKAGE_XORG7 && BR2_USE_WCHAR]
   depends on [BR2_PACKAGE_XORG7]
   depends on [BR2_USE_WCHAR]
   select BR2_PACKAGE_LIBGLIB2 if [BR2_PACKAGE_XORG7 && BR2_USE_WCHAR]
   inherited [BR2_PACKAGE_XORG7 && BR2_USE_WCHAR]
  }
  config BR2_PACKAGE_GQVIEW boolean {
   prompt "gqview" if [BR2_PACKAGE_LIBGTK2]
   depends on [BR2_PACKAGE_LIBGTK2]
   inherited [BR2_PACKAGE_LIBGTK2]
  }
  config BR2_PACKAGE_GMPC boolean {
   prompt "gmpc" if [BR2_PACKAGE_LIBGTK2 && BR2_USE_WCHAR]
   depends on [BR2_PACKAGE_LIBGTK2]
   depends on [BR2_USE_WCHAR]
   select BR2_PACKAGE_LIBGLIB2 if [BR2_PACKAGE_LIBGTK2 && BR2_USE_WCHAR]
   select BR2_PACKAGE_GETTEXT if [BR2_PACKAGE_LIBGTK2 && BR2_USE_WCHAR && BR2_NEEDS_GETTEXT_IF_LOCALE]
   select BR2_PACKAGE_LIBINTL if [BR2_PACKAGE_LIBGTK2 && BR2_USE_WCHAR && BR2_NEEDS_GETTEXT_IF_LOCALE]
   select BR2_PACKAGE_LIBICONV if [BR2_PACKAGE_LIBGTK2 && BR2_USE_WCHAR && !BR2_ENABLE_LOCALE]
   select BR2_PACKAGE_LIBMPD if [BR2_PACKAGE_LIBGTK2 && BR2_USE_WCHAR]
   select BR2_PACKAGE_LIBCURL if [BR2_PACKAGE_LIBGTK2 && BR2_USE_WCHAR]
   select BR2_PACKAGE_LIBGLADE if [BR2_PACKAGE_LIBGTK2 && BR2_USE_WCHAR]
   select BR2_PACKAGE_LIBXML2 if [BR2_PACKAGE_LIBGTK2 && BR2_USE_WCHAR]
   inherited [BR2_PACKAGE_LIBGTK2 && BR2_USE_WCHAR]
  }
  config BR2_PACKAGE_GOB2 boolean {
   prompt "gob2" if [BR2_USE_WCHAR]
   depends on [BR2_USE_WCHAR]
   select BR2_PACKAGE_LIBGLIB2 if [BR2_USE_WCHAR]
   select BR2_PACKAGE_FLEX if [BR2_USE_WCHAR]
   select BR2_PACKAGE_FLEX_LIBFL if [BR2_USE_WCHAR]
   select BR2_PACKAGE_BISON if [BR2_USE_WCHAR]
   inherited [BR2_USE_WCHAR]
  }
  config BR2_PACKAGE_GTKPERF boolean {
   prompt "gtkperf (performance test for GTK2)" if [BR2_PACKAGE_LIBGTK2]
   depends on [BR2_PACKAGE_LIBGTK2]
   inherited [BR2_PACKAGE_LIBGTK2]
  }
  config BR2_PACKAGE_LEAFPAD boolean {
   prompt "leafpad" if [BR2_PACKAGE_LIBGTK2]
   depends on [BR2_PACKAGE_LIBGTK2]
   inherited [BR2_PACKAGE_LIBGTK2]
  }
  config BR2_PACKAGE_MIDORI boolean {
   prompt "midori" if [BR2_PACKAGE_LIBGTK2 && BR2_INSTALL_LIBSTDCPP && BR2_USE_WCHAR]
   select BR2_PACKAGE_WEBKIT if [BR2_PACKAGE_LIBGTK2 && BR2_INSTALL_LIBSTDCPP && BR2_USE_WCHAR]
   select BR2_PACKAGE_LIBSEXY if [BR2_PACKAGE_LIBGTK2 && BR2_INSTALL_LIBSTDCPP && BR2_USE_WCHAR]
   depends on [BR2_PACKAGE_LIBGTK2]
   depends on [BR2_INSTALL_LIBSTDCPP]
   depends on [BR2_USE_WCHAR]
   inherited [BR2_PACKAGE_LIBGTK2 && BR2_INSTALL_LIBSTDCPP && BR2_USE_WCHAR]
  }
  config BR2_PACKAGE_PCMANFM boolean {
   prompt "pcmanfm" if [BR2_PACKAGE_XORG7 && BR2_USE_WCHAR && BR2_PACKAGE_LIBGTK2]
   depends on [BR2_PACKAGE_XORG7]
   depends on [BR2_USE_WCHAR]
   select BR2_PACKAGE_GAMIN if [BR2_PACKAGE_XORG7 && BR2_USE_WCHAR && BR2_PACKAGE_LIBGTK2]
   select BR2_PACKAGE_STARTUP_NOTIFICATION if [BR2_PACKAGE_XORG7 && BR2_USE_WCHAR && BR2_PACKAGE_LIBGTK2]
   depends on [BR2_PACKAGE_LIBGTK2]
   inherited [BR2_PACKAGE_XORG7 && BR2_USE_WCHAR && BR2_PACKAGE_LIBGTK2]
  }
  config BR2_PACKAGE_RDESKTOP boolean {
   prompt "rdesktop" if [BR2_PACKAGE_XORG7]
   select BR2_PACKAGE_OPENSSL if [BR2_PACKAGE_XORG7]
   select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
   select BR2_PACKAGE_XLIB_LIBXT if [BR2_PACKAGE_XORG7]
   depends on [BR2_PACKAGE_XORG7]
   inherited [BR2_PACKAGE_XORG7]
  }
  config BR2_PACKAGE_SYLPHEED boolean {
   prompt "sylpheed" if [BR2_PACKAGE_LIBGTK2]
   depends on [BR2_PACKAGE_LIBGTK2]
   inherited [BR2_PACKAGE_LIBGTK2]
  }
  config BR2_PACKAGE_SYNERGY boolean {
   prompt "synergy" if [BR2_PACKAGE_XORG7 && BR2_INSTALL_LIBSTDCPP]
   depends on [BR2_PACKAGE_XORG7]
   depends on [BR2_INSTALL_LIBSTDCPP]
   inherited [BR2_PACKAGE_XORG7 && BR2_INSTALL_LIBSTDCPP]
  }
  config BR2_PACKAGE_TORSMO boolean {
   prompt "torsmo" if [BR2_PACKAGE_XORG7]
   depends on [BR2_PACKAGE_XORG7]
   inherited [BR2_PACKAGE_XORG7]
  }
  config BR2_PACKAGE_X11VNC boolean {
   prompt "x11vnc" if [BR2_PACKAGE_XORG7]
   depends on [BR2_PACKAGE_XORG7]
   inherited [BR2_PACKAGE_XORG7]
  }
  config BR2_PACKAGE_XSTROKE boolean {
   prompt "xstroke" if [BR2_PACKAGE_XORG7]
   depends on [BR2_PACKAGE_XORG7]
   select BR2_PACKAGE_XLIB_LIBXFT if [BR2_PACKAGE_XORG7]
   select BR2_PACKAGE_XLIB_LIBXTST if [BR2_PACKAGE_XORG7]
   select BR2_PACKAGE_XLIB_LIBXPM if [BR2_PACKAGE_XORG7]
   inherited [BR2_PACKAGE_XORG7]
  }
  config BR2_PACKAGE_XTERM boolean {
   prompt "xterm" if [BR2_PACKAGE_XORG7]
   depends on [BR2_PACKAGE_XORG7]
   inherited [BR2_PACKAGE_XORG7]
  }
  config BR2_PACKAGE_XVKBD boolean {
   prompt "xvkbd" if [BR2_PACKAGE_XORG7]
   depends on [BR2_PACKAGE_XORG7]
   select BR2_PACKAGE_XLIB_LIBXAW if [BR2_PACKAGE_XORG7]
   select BR2_PACKAGE_XLIB_LIBXTST if [BR2_PACKAGE_XORG7]
   inherited [BR2_PACKAGE_XORG7]
  }
 }
 menu "Hardware handling" {
  config BR2_PACKAGE_ACPID boolean {
   prompt "acpid" if [BR2_x86_64 || BR2_i386]
   depends on [BR2_x86_64 || BR2_i386]
   inherited [BR2_x86_64 || BR2_i386]
  }
  config BR2_PACKAGE_CDRKIT boolean {
   select BR2_PACKAGE_BZIP2 if [BR2_LARGEFILE]
   select BR2_PACKAGE_LIBCAP if [BR2_LARGEFILE]
   depends on [BR2_LARGEFILE]
   prompt "cdrkit" if [BR2_LARGEFILE]
   inherited [BR2_LARGEFILE]
  }
  config BR2_PACKAGE_CRAMFS boolean {
   prompt "cramfs" if []
  }
  config BR2_PACKAGE_DBUS boolean {
   prompt "dbus" if [BR2_PACKAGE_EXPAT || BR2_PACKAGE_LIBXML2]
   depends on [BR2_PACKAGE_EXPAT || BR2_PACKAGE_LIBXML2]
   inherited [BR2_PACKAGE_EXPAT || BR2_PACKAGE_LIBXML2]
  }
  choice boolean {
   prompt "XML library to use" if [BR2_PACKAGE_DBUS]
   depends on [BR2_PACKAGE_DBUS]
   default [BR2_DBUS_LIBXML2] if [BR2_PACKAGE_DBUS && BR2_PACKAGE_LIBXML2 && !BR2_PACKAGE_EXPAT]
   default [BR2_DBUS_EXPAT] if [BR2_PACKAGE_DBUS]
   config BR2_DBUS_EXPAT boolean {
    prompt "Expat" if [<choice> && BR2_PACKAGE_EXPAT]
    depends on [BR2_PACKAGE_EXPAT]
    inherited [<choice> && BR2_PACKAGE_EXPAT]
   }
   config BR2_DBUS_LIBXML2 boolean {
    prompt "libxml2" if [<choice> && BR2_PACKAGE_LIBXML2]
    depends on [BR2_PACKAGE_LIBXML2]
    inherited [<choice> && BR2_PACKAGE_LIBXML2]
   }
  }
  config BR2_PACKAGE_DBUS_GLIB boolean {
   prompt "dbus-glib" if [BR2_PACKAGE_DBUS && BR2_DBUS_EXPAT && BR2_USE_WCHAR]
   depends on [BR2_PACKAGE_DBUS]
   depends on [BR2_DBUS_EXPAT]
   depends on [BR2_USE_WCHAR]
   select BR2_PACKAGE_LIBGLIB2 if [BR2_PACKAGE_DBUS && BR2_DBUS_EXPAT && BR2_USE_WCHAR]
   inherited [BR2_PACKAGE_DBUS && BR2_DBUS_EXPAT && BR2_USE_WCHAR]
  }
  config BR2_PACKAGE_DBUS_PYTHON boolean {
   prompt "dbus-python" if [BR2_USE_WCHAR && BR2_PACKAGE_DBUS && BR2_PACKAGE_PYTHON]
   depends on [BR2_USE_WCHAR]
   depends on [BR2_PACKAGE_DBUS]
   depends on [BR2_PACKAGE_PYTHON]
   select BR2_PACKAGE_DBUS_GLIB if [BR2_USE_WCHAR && BR2_PACKAGE_DBUS && BR2_PACKAGE_PYTHON]
   inherited [BR2_USE_WCHAR && BR2_PACKAGE_DBUS && BR2_PACKAGE_PYTHON]
  }
  if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS] {
   config BR2_PACKAGE_DEVMEM2 boolean {
    prompt "devmem2" if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS]
    inherited [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS]
   }
  }
  config BR2_PACKAGE_DMRAID boolean {
   prompt "dmraid" if [BR2_LARGEFILE]
   depends on [BR2_LARGEFILE]
   select BR2_PACKAGE_LVM2 if [BR2_LARGEFILE]
   inherited [BR2_LARGEFILE]
  }
  config BR2_PACKAGE_DOSFSTOOLS boolean {
   prompt "dosfstools" if []
   config BR2_PACKAGE_DOSFSTOOLS_MKDOSFS boolean {
    prompt "mkdosfs" if [BR2_PACKAGE_DOSFSTOOLS]
    depends on [BR2_PACKAGE_DOSFSTOOLS]
    inherited [BR2_PACKAGE_DOSFSTOOLS]
   }
   config BR2_PACKAGE_DOSFSTOOLS_DOSFSCK boolean {
    prompt "dosfsck" if [BR2_PACKAGE_DOSFSTOOLS]
    depends on [BR2_PACKAGE_DOSFSTOOLS]
    inherited [BR2_PACKAGE_DOSFSTOOLS]
   }
   config BR2_PACKAGE_DOSFSTOOLS_DOSFSLABEL boolean {
    prompt "dosfslabel" if [BR2_PACKAGE_DOSFSTOOLS]
    depends on [BR2_PACKAGE_DOSFSTOOLS]
    inherited [BR2_PACKAGE_DOSFSTOOLS]
   }
  }
  config BR2_PACKAGE_E2FSPROGS boolean {
   prompt "e2fsprogs" if [BR2_LARGEFILE]
   depends on [BR2_LARGEFILE]
   inherited [BR2_LARGEFILE]
   menuconfig BR2_PACKAGE_E2FSPROGS_UTILS boolean {
    prompt "e2fsprogs utilities" if [BR2_PACKAGE_E2FSPROGS]
    depends on [BR2_PACKAGE_E2FSPROGS]
    inherited [BR2_PACKAGE_E2FSPROGS]
    if [BR2_PACKAGE_E2FSPROGS_UTILS] {
     config BR2_PACKAGE_E2FSPROGS_BADBLOCKS boolean {
      prompt "badblocks" if [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
      default [y] if [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
      depends on [BR2_PACKAGE_E2FSPROGS]
      inherited [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
     }
     config BR2_PACKAGE_E2FSPROGS_BLKID boolean {
      prompt "blkid" if [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
      default [y] if [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
      depends on [BR2_PACKAGE_E2FSPROGS]
      select BR2_PACKAGE_E2FSPROGS_LIBBLKID if [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
      inherited [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
     }
     config BR2_PACKAGE_E2FSPROGS_CHATTR boolean {
      prompt "chattr" if [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
      default [y] if [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
      depends on [BR2_PACKAGE_E2FSPROGS]
      inherited [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
     }
     config BR2_PACKAGE_E2FSPROGS_DUMPE2FS boolean {
      prompt "dumpe2fs" if [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
      default [y] if [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
      depends on [BR2_PACKAGE_E2FSPROGS]
      select BR2_PACKAGE_E2FSPROGS_LIBUUID if [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
      inherited [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
     }
     config BR2_PACKAGE_E2FSPROGS_E2FREEFRAG boolean {
      prompt "e2freefrag" if [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
      default [y] if [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
      depends on [BR2_PACKAGE_E2FSPROGS]
      inherited [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
     }
     config BR2_PACKAGE_E2FSPROGS_E2FSCK boolean {
      prompt "e2fsck" if [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
      default [y] if [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
      depends on [BR2_PACKAGE_E2FSPROGS]
      select BR2_PACKAGE_E2FSPROGS_LIBBLKID if [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
      inherited [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
     }
     config BR2_PACKAGE_E2FSPROGS_E2LABEL boolean {
      prompt "e2label" if [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
      default [y] if [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
      depends on [BR2_PACKAGE_E2FSPROGS]
      select BR2_PACKAGE_E2FSPROGS_LIBBLKID if [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
      inherited [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
     }
     config BR2_PACKAGE_E2FSPROGS_E2UNDO boolean {
      prompt "e2undo" if [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
      default [y] if [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
      depends on [BR2_PACKAGE_E2FSPROGS]
      inherited [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
     }
     config BR2_PACKAGE_E2FSPROGS_FILEFRAG boolean {
      prompt "filefrag" if [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
      default [y] if [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
      depends on [BR2_PACKAGE_E2FSPROGS]
      inherited [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
     }
     config BR2_PACKAGE_E2FSPROGS_FINDFS boolean {
      prompt "findfs" if [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
      default [y] if [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
      depends on [BR2_PACKAGE_E2FSPROGS]
      select BR2_PACKAGE_E2FSPROGS_E2LABEL if [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
      inherited [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
     }
     config BR2_PACKAGE_E2FSPROGS_FSCK boolean {
      prompt "fsck" if [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
      default [y] if [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
      depends on [BR2_PACKAGE_E2FSPROGS]
      select BR2_PACKAGE_E2FSPROGS_LIBBLKID if [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
      inherited [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
     }
     config BR2_PACKAGE_E2FSPROGS_LOGSAVE boolean {
      prompt "logsave" if [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
      default [y] if [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
      depends on [BR2_PACKAGE_E2FSPROGS]
      inherited [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
     }
     config BR2_PACKAGE_E2FSPROGS_LSATTR boolean {
      prompt "lsattr" if [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
      default [y] if [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
      depends on [BR2_PACKAGE_E2FSPROGS]
      inherited [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
     }
     config BR2_PACKAGE_E2FSPROGS_MKE2FS boolean {
      prompt "mke2fs" if [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
      default [y] if [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
      depends on [BR2_PACKAGE_E2FSPROGS]
      select BR2_PACKAGE_E2FSPROGS_LIBBLKID if [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
      inherited [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
     }
     config BR2_PACKAGE_E2FSPROGS_MKLOSTFOUND boolean {
      prompt "mklost+found" if [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
      default [y] if [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
      depends on [BR2_PACKAGE_E2FSPROGS]
      inherited [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
     }
     config BR2_PACKAGE_E2FSPROGS_TUNE2FS boolean {
      prompt "tune2fs" if [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
      default [y] if [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
      depends on [BR2_PACKAGE_E2FSPROGS]
      select BR2_PACKAGE_E2FSPROGS_E2LABEL if [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
      inherited [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
     }
     config BR2_PACKAGE_E2FSPROGS_UUIDGEN boolean {
      prompt "uuidgen" if [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
      default [y] if [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
      depends on [BR2_PACKAGE_E2FSPROGS]
      select BR2_PACKAGE_E2FSPROGS_LIBUUID if [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
      inherited [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
     }
     config BR2_PACKAGE_E2FSPROGS_UUIDD boolean {
      prompt "uuidd" if [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
      default [y] if [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
      depends on [BR2_PACKAGE_E2FSPROGS]
      select BR2_PACKAGE_E2FSPROGS_LIBUUID if [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
      inherited [BR2_PACKAGE_E2FSPROGS_UTILS && BR2_PACKAGE_E2FSPROGS]
     }
    }
   }
   menu "e2fsprogs libraries" {
    depends on [BR2_PACKAGE_E2FSPROGS]
    config BR2_PACKAGE_E2FSPROGS_LIBUUID boolean {
     prompt "libuuid" if [BR2_PACKAGE_E2FSPROGS]
     inherited [BR2_PACKAGE_E2FSPROGS]
    }
    config BR2_PACKAGE_E2FSPROGS_LIBBLKID boolean {
     prompt "libblkid" if [BR2_PACKAGE_E2FSPROGS]
     select BR2_PACKAGE_E2FSPROGS_LIBUUID if [BR2_PACKAGE_E2FSPROGS]
     inherited [BR2_PACKAGE_E2FSPROGS]
    }
   }
  }
  config BR2_PACKAGE_EEPROG boolean {
   prompt "eeprog" if []
  }
  config BR2_PACKAGE_FCONFIG boolean {
   prompt "fconfig" if []
  }
  config BR2_PACKAGE_FIS boolean {
   prompt "fis" if []
  }
  config BR2_PACKAGE_GADGETFS_TEST boolean {
   prompt "gadgetfs-test" if []
   config BR2_PACKAGE_GADGETFS_TEST_USE_AIO boolean {
    prompt "use asynchronous i/o" if [BR2_PACKAGE_GADGETFS_TEST]
    depends on [BR2_PACKAGE_GADGETFS_TEST]
    select BR2_PACKAGE_LIBAIO if [BR2_PACKAGE_GADGETFS_TEST]
    inherited [BR2_PACKAGE_GADGETFS_TEST]
   }
  }
  config BR2_PACKAGE_GENEXT2FS boolean {
   prompt "genext2fs" if []
  }
  config BR2_PACKAGE_GENROMFS boolean {
   prompt "genromfs" if []
  }
  config BR2_PACKAGE_GVFS boolean {
   prompt "gvfs" if [BR2_LARGEFILE && BR2_USE_WCHAR]
   depends on [BR2_LARGEFILE]
   depends on [BR2_USE_WCHAR]
   select BR2_PACKAGE_LIBGLIB2 if [BR2_LARGEFILE && BR2_USE_WCHAR]
   select BR2_PACKAGE_EXPAT if [BR2_LARGEFILE && BR2_USE_WCHAR]
   select BR2_PACKAGE_DBUS if [BR2_LARGEFILE && BR2_USE_WCHAR]
   select BR2_PACKAGE_DBUS_GLIB if [BR2_LARGEFILE && BR2_USE_WCHAR]
   select BR2_PACKAGE_SHARED_MIME_INFO if [BR2_LARGEFILE && BR2_USE_WCHAR]
   inherited [BR2_LARGEFILE && BR2_USE_WCHAR]
  }
  config BR2_PACKAGE_HAL boolean {
   prompt "hal" if [BR2_USE_WCHAR]
   depends on [BR2_USE_WCHAR]
   select BR2_PACKAGE_EXPAT if [BR2_USE_WCHAR]
   select BR2_PACKAGE_LIBGLIB2 if [BR2_USE_WCHAR]
   select BR2_PACKAGE_GETTEXT if [BR2_USE_WCHAR && BR2_NEEDS_GETTEXT_IF_LOCALE]
   select BR2_PACKAGE_LIBINTL if [BR2_USE_WCHAR && BR2_NEEDS_GETTEXT_IF_LOCALE]
   select BR2_PACKAGE_LIBICONV if [BR2_USE_WCHAR && !BR2_ENABLE_LOCALE]
   select BR2_PACKAGE_DBUS if [BR2_USE_WCHAR]
   select BR2_DBUS_EXPAT if [BR2_USE_WCHAR]
   select BR2_PACKAGE_DBUS_GLIB if [BR2_USE_WCHAR]
   select BR2_PACKAGE_HWDATA if [BR2_USE_WCHAR]
   select BR2_PACKAGE_UDEV if [BR2_USE_WCHAR]
   select BR2_PACKAGE_UDEV_VOLUME_ID if [BR2_USE_WCHAR]
   inherited [BR2_USE_WCHAR]
  }
  if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS] {
   config BR2_PACKAGE_HDPARM boolean {
    prompt "hdparm" if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS]
    inherited [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS]
   }
   config BR2_PACKAGE_HOTPLUG boolean {
    prompt "hotplug" if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_DEPRECATED]
    depends on [BR2_DEPRECATED]
    inherited [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_DEPRECATED]
   }
  }
  config BR2_PACKAGE_HWDATA boolean {
   prompt "hwdata" if []
  }
  config BR2_PACKAGE_I2C_TOOLS boolean {
   prompt "i2c-tools" if []
  }
  config BR2_PACKAGE_INPUT_TOOLS boolean {
   prompt "input-tools" if []
   config BR2_PACKAGE_INPUT_TOOLS_EVTEST boolean {
    prompt "evtest" if [BR2_PACKAGE_INPUT_TOOLS]
    depends on [BR2_PACKAGE_INPUT_TOOLS]
    default [y] if [BR2_PACKAGE_INPUT_TOOLS]
    inherited [BR2_PACKAGE_INPUT_TOOLS]
   }
   config BR2_PACKAGE_INPUT_TOOLS_INPUTATTACH boolean {
    prompt "inputattach" if [BR2_PACKAGE_INPUT_TOOLS]
    depends on [BR2_PACKAGE_INPUT_TOOLS]
    default [y] if [BR2_PACKAGE_INPUT_TOOLS]
    inherited [BR2_PACKAGE_INPUT_TOOLS]
   }
   config BR2_PACKAGE_INPUT_TOOLS_JSCAL boolean {
    prompt "jscal" if [BR2_PACKAGE_INPUT_TOOLS]
    depends on [BR2_PACKAGE_INPUT_TOOLS]
    default [y] if [BR2_PACKAGE_INPUT_TOOLS]
    inherited [BR2_PACKAGE_INPUT_TOOLS]
   }
   config BR2_PACKAGE_INPUT_TOOLS_JSTEST boolean {
    prompt "jstest" if [BR2_PACKAGE_INPUT_TOOLS]
    depends on [BR2_PACKAGE_INPUT_TOOLS]
    default [y] if [BR2_PACKAGE_INPUT_TOOLS]
    inherited [BR2_PACKAGE_INPUT_TOOLS]
   }
  }
  config BR2_PACKAGE_IOSTAT boolean {
   prompt "iostat" if []
  }
  config BR2_PACKAGE_LM_SENSORS boolean {
   prompt "lm-sensors" if []
   if [BR2_PACKAGE_LM_SENSORS] {
    config BR2_PACKAGE_LM_SENSORS_SENSORS boolean {
     prompt "sensors" if [BR2_PACKAGE_LM_SENSORS]
     default [y] if [BR2_PACKAGE_LM_SENSORS]
     inherited [BR2_PACKAGE_LM_SENSORS]
    }
    config BR2_PACKAGE_LM_SENSORS_FANCONTROL boolean {
     prompt "fancontrol" if [BR2_PACKAGE_LM_SENSORS]
     inherited [BR2_PACKAGE_LM_SENSORS]
    }
    config BR2_PACKAGE_LM_SENSORS_ISADUMP boolean {
     prompt "isadump" if [BR2_PACKAGE_LM_SENSORS]
     inherited [BR2_PACKAGE_LM_SENSORS]
    }
    config BR2_PACKAGE_LM_SENSORS_ISASET boolean {
     prompt "isaset" if [BR2_PACKAGE_LM_SENSORS]
     inherited [BR2_PACKAGE_LM_SENSORS]
    }
    config BR2_PACKAGE_LM_SENSORS_PWMCONFIG boolean {
     prompt "pwmconfig" if [BR2_PACKAGE_LM_SENSORS]
     inherited [BR2_PACKAGE_LM_SENSORS]
    }
    config BR2_PACKAGE_LM_SENSORS_SENSORS_DETECT boolean {
     prompt "sensors-detect" if [BR2_PACKAGE_LM_SENSORS]
     inherited [BR2_PACKAGE_LM_SENSORS]
    }
   }
  }
  config BR2_PACKAGE_LVM2 boolean {
   prompt "lvm2 & device mapper" if [BR2_LARGEFILE]
   depends on [BR2_LARGEFILE]
   inherited [BR2_LARGEFILE]
   config BR2_PACKAGE_LVM2_DMSETUP_ONLY boolean {
    prompt "install dmsetup only" if [BR2_PACKAGE_LVM2]
    depends on [BR2_PACKAGE_LVM2]
    inherited [BR2_PACKAGE_LVM2]
   }
  }
  config BR2_PACKAGE_MAKEDEVS boolean {
   prompt "makedevs" if []
  }
  config BR2_PACKAGE_MDADM boolean {
   prompt "mdadm" if []
  }
  config BR2_PACKAGE_MEMTESTER boolean {
   prompt "memtester" if []
  }
  config BR2_PACKAGE_MTD boolean {
   prompt "mtd/jffs2 utilities" if []
   if [BR2_PACKAGE_MTD] {
    config BR2_PACKAGE_MTD_DOCFDISK boolean {
     prompt "docfdisk" if [BR2_PACKAGE_MTD]
     inherited [BR2_PACKAGE_MTD]
    }
    config BR2_PACKAGE_MTD_DOC_LOADBIOS boolean {
     prompt "doc_loadbios" if [BR2_PACKAGE_MTD]
     inherited [BR2_PACKAGE_MTD]
    }
    config BR2_PACKAGE_MTD_FLASHCP boolean {
     prompt "flashcp" if [BR2_PACKAGE_MTD]
     default [y] if [BR2_PACKAGE_MTD]
     inherited [BR2_PACKAGE_MTD]
    }
    config BR2_PACKAGE_MTD_FLASH_ERASE boolean {
     prompt "flash_erase" if [BR2_PACKAGE_MTD]
     default [y] if [BR2_PACKAGE_MTD]
     inherited [BR2_PACKAGE_MTD]
    }
    config BR2_PACKAGE_MTD_FLASH_ERASEALL boolean {
     prompt "flash_eraseall" if [BR2_PACKAGE_MTD]
     default [y] if [BR2_PACKAGE_MTD]
     inherited [BR2_PACKAGE_MTD]
    }
    config BR2_PACKAGE_MTD_FLASH_INFO boolean {
     prompt "flash_info" if [BR2_PACKAGE_MTD]
     default [y] if [BR2_PACKAGE_MTD]
     inherited [BR2_PACKAGE_MTD]
    }
    config BR2_PACKAGE_MTD_FLASH_LOCK boolean {
     prompt "flash_lock" if [BR2_PACKAGE_MTD]
     default [y] if [BR2_PACKAGE_MTD]
     inherited [BR2_PACKAGE_MTD]
    }
    config BR2_PACKAGE_MTD_FLASH_OTP_DUMP boolean {
     prompt "flash_otp_dump" if [BR2_PACKAGE_MTD]
     inherited [BR2_PACKAGE_MTD]
    }
    config BR2_PACKAGE_MTD_FLASH_OTP_INFO boolean {
     prompt "flash_otp_info" if [BR2_PACKAGE_MTD]
     inherited [BR2_PACKAGE_MTD]
    }
    config BR2_PACKAGE_MTD_FLASH_UNLOCK boolean {
     prompt "flash_unlock" if [BR2_PACKAGE_MTD]
     default [y] if [BR2_PACKAGE_MTD]
     inherited [BR2_PACKAGE_MTD]
    }
    config BR2_PACKAGE_MTD_FTL_CHECK boolean {
     prompt "ftl_check" if [BR2_PACKAGE_MTD]
     inherited [BR2_PACKAGE_MTD]
    }
    config BR2_PACKAGE_MTD_FTL_FORMAT boolean {
     prompt "ftl_format" if [BR2_PACKAGE_MTD]
     inherited [BR2_PACKAGE_MTD]
    }
    config BR2_PACKAGE_MTD_JFFS2DUMP boolean {
     prompt "jffs2dump" if [BR2_PACKAGE_MTD]
     inherited [BR2_PACKAGE_MTD]
    }
    config BR2_PACKAGE_MTD_MKFSJFFS2 boolean {
     prompt "mkfs.jffs2" if [BR2_PACKAGE_MTD]
     select BR2_PACKAGE_ZLIB if [BR2_PACKAGE_MTD]
     select BR2_PACKAGE_LZO if [BR2_PACKAGE_MTD]
     inherited [BR2_PACKAGE_MTD]
    }
    config BR2_PACKAGE_MTD_MTD_DEBUG boolean {
     prompt "mtd_debug" if [BR2_PACKAGE_MTD]
     default [y] if [BR2_PACKAGE_MTD]
     inherited [BR2_PACKAGE_MTD]
    }
    config BR2_PACKAGE_MTD_NANDDUMP boolean {
     prompt "nanddump" if [BR2_PACKAGE_MTD]
     default [y] if [BR2_PACKAGE_MTD]
     inherited [BR2_PACKAGE_MTD]
    }
    config BR2_PACKAGE_MTD_NANDTEST boolean {
     prompt "nandtest" if [BR2_PACKAGE_MTD]
     default [y] if [BR2_PACKAGE_MTD]
     inherited [BR2_PACKAGE_MTD]
    }
    config BR2_PACKAGE_MTD_NANDWRITE boolean {
     prompt "nandwrite" if [BR2_PACKAGE_MTD]
     default [y] if [BR2_PACKAGE_MTD]
     inherited [BR2_PACKAGE_MTD]
    }
    config BR2_PACKAGE_MTD_NFTLDUMP boolean {
     prompt "nftldump" if [BR2_PACKAGE_MTD]
     inherited [BR2_PACKAGE_MTD]
    }
    config BR2_PACKAGE_MTD_NFTL_FORMAT boolean {
     prompt "nftl_format" if [BR2_PACKAGE_MTD]
     inherited [BR2_PACKAGE_MTD]
    }
    config BR2_PACKAGE_MTD_RECV_IMAGE boolean {
     depends on [BR2_INET_IPV6]
     prompt "recv_image" if [BR2_PACKAGE_MTD && BR2_INET_IPV6]
     inherited [BR2_PACKAGE_MTD && BR2_INET_IPV6]
    }
    config BR2_PACKAGE_MTD_RFDDUMP boolean {
     prompt "rfddump" if [BR2_PACKAGE_MTD]
     inherited [BR2_PACKAGE_MTD]
    }
    config BR2_PACKAGE_MTD_RFDFORMAT boolean {
     prompt "rfdformat" if [BR2_PACKAGE_MTD]
     inherited [BR2_PACKAGE_MTD]
    }
    config BR2_PACKAGE_MTD_SERVE_IMAGE boolean {
     prompt "serve_image" if [BR2_PACKAGE_MTD]
     inherited [BR2_PACKAGE_MTD]
    }
    config BR2_PACKAGE_MTD_SUMTOOL boolean {
     prompt "sumtool" if [BR2_PACKAGE_MTD]
     inherited [BR2_PACKAGE_MTD]
    }
    config BR2_PACKAGE_MTD_MTDINFO boolean {
     prompt "mtdinfo" if [BR2_PACKAGE_MTD]
     default [y] if [BR2_PACKAGE_MTD]
     inherited [BR2_PACKAGE_MTD]
    }
    config BR2_PACKAGE_MTD_UBIATTACH boolean {
     prompt "ubiattach" if [BR2_PACKAGE_MTD]
     default [y] if [BR2_PACKAGE_MTD]
     inherited [BR2_PACKAGE_MTD]
    }
    config BR2_PACKAGE_MTD_UBICRC32 boolean {
     prompt "ubicrc32" if [BR2_PACKAGE_MTD]
     default [y] if [BR2_PACKAGE_MTD]
     inherited [BR2_PACKAGE_MTD]
    }
    config BR2_PACKAGE_MTD_UBIDETACH boolean {
     prompt "ubidetach" if [BR2_PACKAGE_MTD]
     default [y] if [BR2_PACKAGE_MTD]
     inherited [BR2_PACKAGE_MTD]
    }
    config BR2_PACKAGE_MTD_UBIFORMAT boolean {
     prompt "ubiformat" if [BR2_PACKAGE_MTD]
     default [y] if [BR2_PACKAGE_MTD]
     inherited [BR2_PACKAGE_MTD]
    }
    config BR2_PACKAGE_MTD_UBIMKVOL boolean {
     prompt "ubimkvol" if [BR2_PACKAGE_MTD]
     default [y] if [BR2_PACKAGE_MTD]
     inherited [BR2_PACKAGE_MTD]
    }
    config BR2_PACKAGE_MTD_UBINFO boolean {
     prompt "ubinfo" if [BR2_PACKAGE_MTD]
     default [y] if [BR2_PACKAGE_MTD]
     inherited [BR2_PACKAGE_MTD]
    }
    config BR2_PACKAGE_MTD_UBINIZE boolean {
     prompt "ubinize" if [BR2_PACKAGE_MTD]
     default [y] if [BR2_PACKAGE_MTD]
     inherited [BR2_PACKAGE_MTD]
    }
    config BR2_PACKAGE_MTD_UBIRENAME boolean {
     prompt "ubirename" if [BR2_PACKAGE_MTD]
     default [y] if [BR2_PACKAGE_MTD]
     inherited [BR2_PACKAGE_MTD]
    }
    config BR2_PACKAGE_MTD_UBIRMVOL boolean {
     prompt "ubirmvol" if [BR2_PACKAGE_MTD]
     default [y] if [BR2_PACKAGE_MTD]
     inherited [BR2_PACKAGE_MTD]
    }
    config BR2_PACKAGE_MTD_UBIRSVOL boolean {
     prompt "ubirsvol" if [BR2_PACKAGE_MTD]
     default [y] if [BR2_PACKAGE_MTD]
     inherited [BR2_PACKAGE_MTD]
    }
    config BR2_PACKAGE_MTD_UBIUPDATEVOL boolean {
     prompt "ubiupdatevol" if [BR2_PACKAGE_MTD]
     default [y] if [BR2_PACKAGE_MTD]
     inherited [BR2_PACKAGE_MTD]
    }
   }
  }
  config BR2_PACKAGE_NTFS_3G boolean {
   prompt "ntfs-3g" if [BR2_LARGEFILE && BR2_USE_WCHAR]
   depends on [BR2_LARGEFILE]
   depends on [BR2_USE_WCHAR]
   inherited [BR2_LARGEFILE && BR2_USE_WCHAR]
  }
  config BR2_PACKAGE_NTFSPROGS boolean {
   prompt "ntfsprogs" if [BR2_USE_WCHAR && BR2_LARGEFILE]
   depends on [BR2_USE_WCHAR]
   depends on [BR2_LARGEFILE]
   inherited [BR2_USE_WCHAR && BR2_LARGEFILE]
  }
  config BR2_PACKAGE_PCIUTILS boolean {
   prompt "pciutils" if []
  }
  config BR2_PACKAGE_SETSERIAL boolean {
   prompt "setserial" if []
  }
  if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS] {
   config BR2_PACKAGE_SFDISK boolean {
    prompt "sfdisk" if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS]
    inherited [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS]
   }
  }
  config BR2_PACKAGE_SMARTMONTOOLS boolean {
   prompt "smartmontools" if []
  }
  config BR2_PACKAGE_SQUASHFS boolean {
   prompt "squashfs" if [BR2_LARGEFILE]
   depends on [BR2_LARGEFILE]
   inherited [BR2_LARGEFILE]
   if [BR2_PACKAGE_SQUASHFS] {
    config BR2_PACKAGE_SQUASHFS_GZIP boolean {
     prompt "gzip support" if [BR2_PACKAGE_SQUASHFS]
     default [y] if [BR2_PACKAGE_SQUASHFS]
     select BR2_PACKAGE_GZIP if [BR2_PACKAGE_SQUASHFS]
     inherited [BR2_PACKAGE_SQUASHFS]
    }
    config BR2_PACKAGE_SQUASHFS_LZMA boolean {
     prompt "lzma support" if [BR2_PACKAGE_SQUASHFS]
     select BR2_PACKAGE_XZ if [BR2_PACKAGE_SQUASHFS]
     inherited [BR2_PACKAGE_SQUASHFS]
    }
    config BR2_PACKAGE_SQUASHFS_LZO boolean {
     prompt "lzo support" if [BR2_PACKAGE_SQUASHFS]
     select BR2_PACKAGE_LZO if [BR2_PACKAGE_SQUASHFS]
     inherited [BR2_PACKAGE_SQUASHFS]
    }
   }
  }
  config BR2_PACKAGE_SQUASHFS3 boolean {
   prompt "squashfs3" if [BR2_DEPRECATED && BR2_LARGEFILE]
   depends on [BR2_DEPRECATED]
   depends on [BR2_LARGEFILE]
   inherited [BR2_DEPRECATED && BR2_LARGEFILE]
  }
  config BR2_PACKAGE_SSHFS boolean {
   prompt "sshfs (FUSE)" if [BR2_PACKAGE_OPENSSH && BR2_LARGEFILE && BR2_USE_WCHAR]
   select BR2_PACKAGE_LIBFUSE if [BR2_PACKAGE_OPENSSH && BR2_LARGEFILE && BR2_USE_WCHAR]
   select BR2_PACKAGE_LIBGLIB2 if [BR2_PACKAGE_OPENSSH && BR2_LARGEFILE && BR2_USE_WCHAR]
   select BR2_PACKAGE_GETTEXT if [BR2_PACKAGE_OPENSSH && BR2_LARGEFILE && BR2_USE_WCHAR && BR2_NEEDS_GETTEXT_IF_LOCALE]
   select BR2_PACKAGE_LIBINTL if [BR2_PACKAGE_OPENSSH && BR2_LARGEFILE && BR2_USE_WCHAR && BR2_NEEDS_GETTEXT_IF_LOCALE]
   select BR2_PACKAGE_LIBICONV if [BR2_PACKAGE_OPENSSH && BR2_LARGEFILE && BR2_USE_WCHAR && !BR2_ENABLE_LOCALE]
   depends on [BR2_PACKAGE_OPENSSH]
   depends on [BR2_LARGEFILE]
   depends on [BR2_USE_WCHAR]
   inherited [BR2_PACKAGE_OPENSSH && BR2_LARGEFILE && BR2_USE_WCHAR]
  }
  config BR2_PACKAGE_SYSSTAT boolean {
   prompt "sysstat" if []
  }
  config BR2_PACKAGE_UDEV boolean {
   prompt "udev" if []
   config BR2_PACKAGE_UDEV_UTILS boolean {
    prompt "udev-utils" if [BR2_PACKAGE_UDEV]
    depends on [BR2_PACKAGE_UDEV]
    inherited [BR2_PACKAGE_UDEV]
   }
   menu "Extra udev tools" {
    depends on [BR2_PACKAGE_UDEV]
    config BR2_PACKAGE_UDEV_VOLUME_ID boolean {
     prompt "udev-libvolume_id" if [BR2_PACKAGE_UDEV]
     depends on [BR2_PACKAGE_UDEV]
     inherited [BR2_PACKAGE_UDEV]
     config BR2_PACKAGE_UDEV_SCSI_ID boolean {
      prompt "udev-scsi_id" if [BR2_PACKAGE_UDEV && BR2_PACKAGE_UDEV_VOLUME_ID]
      depends on [BR2_PACKAGE_UDEV_VOLUME_ID]
      inherited [BR2_PACKAGE_UDEV && BR2_PACKAGE_UDEV_VOLUME_ID]
     }
     config BR2_PACKAGE_UDEV_PATH_ID boolean {
      prompt "udev-path_id" if [BR2_PACKAGE_UDEV && BR2_PACKAGE_UDEV_VOLUME_ID]
      depends on [BR2_PACKAGE_UDEV_VOLUME_ID]
      inherited [BR2_PACKAGE_UDEV && BR2_PACKAGE_UDEV_VOLUME_ID]
     }
     config BR2_PACKAGE_UDEV_FIRMWARE_SH boolean {
      prompt "udev-firmware_sh" if [BR2_PACKAGE_UDEV && BR2_PACKAGE_UDEV_VOLUME_ID]
      depends on [BR2_PACKAGE_UDEV_VOLUME_ID]
      inherited [BR2_PACKAGE_UDEV && BR2_PACKAGE_UDEV_VOLUME_ID]
     }
    }
   }
  }
  config BR2_PACKAGE_USB_MODESWITCH boolean {
   prompt "usb_modeswitch" if []
   select BR2_PACKAGE_LIBUSB if []
   select BR2_PACKAGE_LIBUSB_COMPAT if []
  }
  config BR2_PACKAGE_USBMOUNT boolean {
   prompt "usbmount" if []
   select BR2_PACKAGE_UDEV if []
   select BR2_PACKAGE_UDEV_VOLUME_ID if []
   select BR2_PACKAGE_LOCKFILE_PROGS if []
  }
  config BR2_PACKAGE_USBUTILS boolean {
   prompt "usbutils" if []
   select BR2_PACKAGE_LIBUSB if []
   select BR2_PACKAGE_LIBUSB_COMPAT if []
   config BR2_PACKAGE_USBUTILS_ZLIB boolean {
    prompt "compressed data support" if [BR2_PACKAGE_USBUTILS]
    depends on [BR2_PACKAGE_USBUTILS]
    select BR2_PACKAGE_ZLIB if [BR2_PACKAGE_USBUTILS]
    inherited [BR2_PACKAGE_USBUTILS]
   }
  }
  config BR2_PACKAGE_WIPE boolean {
   prompt "wipe" if []
  }
  config BR2_PACKAGE_XFSPROGS boolean {
   prompt "xfsprogs" if [BR2_LARGEFILE]
   depends on [BR2_LARGEFILE]
   select BR2_PACKAGE_E2FSPROGS if [BR2_LARGEFILE]
   select BR2_PACKAGE_E2FSPROGS_LIBUUID if [BR2_LARGEFILE]
   inherited [BR2_LARGEFILE]
  }
 }
 menu "Interpreter languages and scripting" {
  config BR2_PACKAGE_HASERL boolean {
   prompt "haserl" if []
   config BR2_PACKAGE_HASERL_WITH_LUA boolean {
    prompt "lua support" if [BR2_PACKAGE_HASERL && BR2_PACKAGE_HASERL_VERSION_0_9_X]
    depends on [BR2_PACKAGE_HASERL]
    depends on [BR2_PACKAGE_HASERL_VERSION_0_9_X]
    select BR2_PACKAGE_LUA if [BR2_PACKAGE_HASERL && BR2_PACKAGE_HASERL_VERSION_0_9_X]
    inherited [BR2_PACKAGE_HASERL && BR2_PACKAGE_HASERL_VERSION_0_9_X]
   }
   choice boolean {
    prompt "Haserl version" if [BR2_PACKAGE_HASERL]
    default [BR2_PACKAGE_HASERL_VERSION_0_9_X] if [BR2_PACKAGE_HASERL]
    depends on [BR2_PACKAGE_HASERL]
    config BR2_PACKAGE_HASERL_VERSION_0_8_X boolean {
     prompt "v 0.8.x" if [<choice>]
     inherited [<choice>]
    }
    config BR2_PACKAGE_HASERL_VERSION_0_9_X boolean {
     prompt "v 0.9.x" if [<choice>]
     inherited [<choice>]
    }
   }
  }
  config BR2_PACKAGE_HASERL_VERSION string {
   default ["0.8.0"] if [BR2_PACKAGE_HASERL_VERSION_0_8_X]
   default ["0.9.26"] if [BR2_PACKAGE_HASERL_VERSION_0_9_X]
  }
  config BR2_PACKAGE_JAMVM boolean {
   prompt "jamvm" if [BR2_PACKAGE_CLASSPATH]
   depends on [BR2_PACKAGE_CLASSPATH]
   inherited [BR2_PACKAGE_CLASSPATH]
  }
  config BR2_PACKAGE_LUA boolean {
   prompt "lua" if []
   config BR2_PACKAGE_LUA_COMPILER boolean {
    prompt "lua compiler" if [BR2_PACKAGE_LUA]
    depends on [BR2_PACKAGE_LUA]
    select BR2_PACKAGE_LUA_SHARED_LIBRARY if [BR2_PACKAGE_LUA]
    inherited [BR2_PACKAGE_LUA]
   }
   config BR2_PACKAGE_LUA_INTERPRETER boolean {
    prompt "lua interpreter" if [BR2_PACKAGE_LUA]
    depends on [BR2_PACKAGE_LUA]
    select BR2_PACKAGE_LUA_SHARED_LIBRARY if [BR2_PACKAGE_LUA]
    inherited [BR2_PACKAGE_LUA]
    config BR2_PACKAGE_LUA_INTERPRETER_READLINE boolean {
     prompt "readline support" if [BR2_PACKAGE_LUA_INTERPRETER]
     depends on [BR2_PACKAGE_LUA_INTERPRETER]
     select BR2_PACKAGE_READLINE if [BR2_PACKAGE_LUA_INTERPRETER]
     select BR2_PACKAGE_NCURSES if [BR2_PACKAGE_LUA_INTERPRETER]
     inherited [BR2_PACKAGE_LUA_INTERPRETER]
    }
   }
   config BR2_PACKAGE_LUA_SHARED_LIBRARY boolean {
    prompt "shared library" if [BR2_PACKAGE_LUA]
    depends on [BR2_PACKAGE_LUA]
    inherited [BR2_PACKAGE_LUA]
   }
   if [BR2_PACKAGE_LUA] {
    menu "LUA libraries/modules" {
     depends on [BR2_PACKAGE_LUA]
     config BR2_PACKAGE_CGILUA boolean {
      prompt "cgilua" if [BR2_PACKAGE_LUA]
      select BR2_PACKAGE_LUA_SHARED_LIBRARY if [BR2_PACKAGE_LUA]
      select BR2_PACKAGE_LUAFILESYSTEM if [BR2_PACKAGE_LUA]
      inherited [BR2_PACKAGE_LUA]
     }
     config BR2_PACKAGE_COPAS boolean {
      prompt "copas" if [BR2_PACKAGE_LUA]
      select BR2_PACKAGE_COXPCALL if [BR2_PACKAGE_LUA]
      select BR2_PACKAGE_LUASOCKET if [BR2_PACKAGE_LUA]
      inherited [BR2_PACKAGE_LUA]
     }
     config BR2_PACKAGE_COXPCALL boolean {
      prompt "coxpcall" if [BR2_PACKAGE_LUA]
      inherited [BR2_PACKAGE_LUA]
     }
     config BR2_PACKAGE_LUAFILESYSTEM boolean {
      prompt "luafilesystem" if [BR2_PACKAGE_LUA]
      select BR2_PACKAGE_LUA_SHARED_LIBRARY if [BR2_PACKAGE_LUA]
      inherited [BR2_PACKAGE_LUA]
     }
     config BR2_PACKAGE_LUASOCKET boolean {
      prompt "luasocket" if [BR2_PACKAGE_LUA && BR2_PACKAGE_LUA_SHARED_LIBRARY]
      depends on [BR2_PACKAGE_LUA_SHARED_LIBRARY]
      inherited [BR2_PACKAGE_LUA && BR2_PACKAGE_LUA_SHARED_LIBRARY]
     }
     config BR2_PACKAGE_RINGS boolean {
      prompt "rings" if [BR2_PACKAGE_LUA && BR2_PACKAGE_LUA_SHARED_LIBRARY]
      depends on [BR2_PACKAGE_LUA_SHARED_LIBRARY]
      inherited [BR2_PACKAGE_LUA && BR2_PACKAGE_LUA_SHARED_LIBRARY]
     }
     config BR2_PACKAGE_WSAPI boolean {
      prompt "wsapi" if [BR2_PACKAGE_LUA]
      select BR2_PACKAGE_COXPCALL if [BR2_PACKAGE_LUA]
      select BR2_PACKAGE_LUAFILESYSTEM if [BR2_PACKAGE_LUA]
      select BR2_PACKAGE_RINGS if [BR2_PACKAGE_LUA]
      inherited [BR2_PACKAGE_LUA]
     }
     config BR2_PACKAGE_XAVANTE boolean {
      prompt "xavante" if [BR2_PACKAGE_LUA]
      select BR2_PACKAGE_LUA_SHARED_LIBRARY if [BR2_PACKAGE_LUA]
      select BR2_PACKAGE_CGILUA if [BR2_PACKAGE_LUA]
      select BR2_PACKAGE_COPAS if [BR2_PACKAGE_LUA]
      select BR2_PACKAGE_COXPCALL if [BR2_PACKAGE_LUA]
      select BR2_PACKAGE_LUAFILESYSTEM if [BR2_PACKAGE_LUA]
      select BR2_PACKAGE_LUASOCKET if [BR2_PACKAGE_LUA]
      select BR2_PACKAGE_WSAPI if [BR2_PACKAGE_LUA]
      inherited [BR2_PACKAGE_LUA]
     }
    }
   }
  }
  config BR2_PACKAGE_MICROPERL boolean {
   prompt "microperl" if []
   config BR2_PACKAGE_MICROPERL_MODULES string {
    prompt "microperl modules" if [BR2_PACKAGE_MICROPERL]
    default [""] if [BR2_PACKAGE_MICROPERL]
    depends on [BR2_PACKAGE_MICROPERL]
    inherited [BR2_PACKAGE_MICROPERL]
   }
  }
  config BR2_PACKAGE_PHP boolean {
   prompt "php" if []
   if [BR2_PACKAGE_PHP] {
    config BR2_PACKAGE_PHP_CLI boolean {
     inherited [BR2_PACKAGE_PHP]
    }
    config BR2_PACKAGE_PHP_CGI boolean {
     inherited [BR2_PACKAGE_PHP]
    }
    choice boolean {
     prompt "PHP interface" if [BR2_PACKAGE_PHP]
     default [BR2_PACKAGE_PHP_SAPI_CGI] if [BR2_PACKAGE_PHP]
     config BR2_PACKAGE_PHP_SAPI_CLI boolean {
      prompt "cli interface" if [<choice>]
      select BR2_PACKAGE_PHP_CLI if [<choice>]
      inherited [<choice>]
     }
     config BR2_PACKAGE_PHP_SAPI_CGI boolean {
      prompt "cgi interface" if [<choice>]
      select BR2_PACKAGE_PHP_CGI if [<choice>]
      inherited [<choice>]
     }
     config BR2_PACKAGE_PHP_SAPI_CLI_CGI boolean {
      prompt "cli and cgi interfaces" if [<choice>]
      select BR2_PACKAGE_PHP_CLI if [<choice>]
      select BR2_PACKAGE_PHP_CGI if [<choice>]
      inherited [<choice>]
     }
    }
    config BR2_PACKAGE_PHP_FASTCGI boolean {
     prompt "fastcgi" if [BR2_PACKAGE_PHP && BR2_PACKAGE_PHP_CGI]
     depends on [BR2_PACKAGE_PHP_CGI]
     default [y] if [BR2_PACKAGE_PHP && BR2_PACKAGE_PHP_CGI]
     inherited [BR2_PACKAGE_PHP && BR2_PACKAGE_PHP_CGI]
    }
    menu "PHP Extensions" {
     depends on [BR2_PACKAGE_PHP]
     config BR2_PACKAGE_PHP_CONFIG string {
      prompt "PHP configuration file to use" if [BR2_PACKAGE_PHP]
      default ["$(PHP_DIR)/php.ini-dist"] if [BR2_PACKAGE_PHP]
      inherited [BR2_PACKAGE_PHP]
     }
     config BR2_PACKAGE_PHP_EXT_SOCKETS boolean {
      prompt "socket" if [BR2_PACKAGE_PHP]
      inherited [BR2_PACKAGE_PHP]
     }
     config BR2_PACKAGE_PHP_EXT_POSIX boolean {
      prompt "posix" if [BR2_PACKAGE_PHP]
      default [y] if [BR2_PACKAGE_PHP]
      inherited [BR2_PACKAGE_PHP]
     }
     config BR2_PACKAGE_PHP_EXT_SPL boolean {
      prompt "SPL" if [BR2_PACKAGE_PHP]
      default [y] if [BR2_PACKAGE_PHP]
      inherited [BR2_PACKAGE_PHP]
     }
     config BR2_PACKAGE_PHP_EXT_SESSION boolean {
      prompt "Session" if [BR2_PACKAGE_PHP]
      default [y] if [BR2_PACKAGE_PHP]
      inherited [BR2_PACKAGE_PHP]
     }
     config BR2_PACKAGE_PHP_EXT_OPENSSL boolean {
      prompt "openssl" if [BR2_PACKAGE_PHP]
      select BR2_PACKAGE_OPENSSL if [BR2_PACKAGE_PHP]
      inherited [BR2_PACKAGE_PHP]
     }
     config BR2_PACKAGE_PHP_EXT_LIBXML2 boolean {
      prompt "xml2" if [BR2_PACKAGE_PHP]
      select BR2_PACKAGE_LIBXML2 if [BR2_PACKAGE_PHP]
      inherited [BR2_PACKAGE_PHP]
     }
     config BR2_PACKAGE_PHP_EXT_SIMPLEXML boolean {
      prompt "simplexml" if [BR2_PACKAGE_PHP]
      select BR2_PACKAGE_PHP_EXT_LIBXML2 if [BR2_PACKAGE_PHP]
      inherited [BR2_PACKAGE_PHP]
     }
     config BR2_PACKAGE_PHP_EXT_ZLIB boolean {
      prompt "zlib" if [BR2_PACKAGE_PHP]
      select BR2_PACKAGE_ZLIB if [BR2_PACKAGE_PHP]
      default [y] if [BR2_PACKAGE_PHP]
      inherited [BR2_PACKAGE_PHP]
     }
     config BR2_PACKAGE_PHP_EXT_EXIF boolean {
      prompt "EXIF" if [BR2_PACKAGE_PHP]
      inherited [BR2_PACKAGE_PHP]
     }
     config BR2_PACKAGE_PHP_EXT_FTP boolean {
      prompt "FTP" if [BR2_PACKAGE_PHP]
      inherited [BR2_PACKAGE_PHP]
     }
     config BR2_PACKAGE_PHP_EXT_GETTEXT boolean {
      prompt "gettext" if [BR2_PACKAGE_PHP && BR2_USE_WCHAR]
      select BR2_PACKAGE_GETTEXT if [BR2_PACKAGE_PHP && BR2_USE_WCHAR && BR2_NEEDS_GETTEXT]
      depends on [BR2_USE_WCHAR]
      inherited [BR2_PACKAGE_PHP && BR2_USE_WCHAR]
     }
     config BR2_PACKAGE_PHP_EXT_GMP boolean {
      prompt "gmp" if [BR2_PACKAGE_PHP]
      select BR2_PACKAGE_LIBGMP if [BR2_PACKAGE_PHP]
      inherited [BR2_PACKAGE_PHP]
     }
     config BR2_PACKAGE_PHP_EXT_JSON boolean {
      prompt "JSON" if [BR2_PACKAGE_PHP]
      inherited [BR2_PACKAGE_PHP]
     }
     config BR2_PACKAGE_PHP_EXT_READLINE boolean {
      prompt "readline" if [BR2_PACKAGE_PHP && (BR2_PACKAGE_PHP_CLI || BR2_PACKAGE_PHP_CGI) && BR2_PACKAGE_READLINE]
      depends on [(BR2_PACKAGE_PHP_CLI || BR2_PACKAGE_PHP_CGI) && BR2_PACKAGE_READLINE]
      inherited [BR2_PACKAGE_PHP && (BR2_PACKAGE_PHP_CLI || BR2_PACKAGE_PHP_CGI) && BR2_PACKAGE_READLINE]
     }
     config BR2_PACKAGE_PHP_EXT_NCURSES boolean {
      prompt "ncurses" if [BR2_PACKAGE_PHP && (BR2_PACKAGE_PHP_CLI || BR2_PACKAGE_PHP_CGI) && BR2_PACKAGE_NCURSES]
      depends on [(BR2_PACKAGE_PHP_CLI || BR2_PACKAGE_PHP_CGI) && BR2_PACKAGE_NCURSES]
      inherited [BR2_PACKAGE_PHP && (BR2_PACKAGE_PHP_CLI || BR2_PACKAGE_PHP_CGI) && BR2_PACKAGE_NCURSES]
     }
     config BR2_PACKAGE_PHP_EXT_PCRE boolean {
      prompt "PCRE" if [BR2_PACKAGE_PHP]
      inherited [BR2_PACKAGE_PHP]
     }
     config BR2_PACKAGE_PHP_EXT_SYSVMSG boolean {
      prompt "sysvmsg - System V Message queue" if [BR2_PACKAGE_PHP]
      inherited [BR2_PACKAGE_PHP]
     }
     config BR2_PACKAGE_PHP_EXT_SYSVSEM boolean {
      prompt "sysvsem - System V Semaphores" if [BR2_PACKAGE_PHP]
      inherited [BR2_PACKAGE_PHP]
     }
     config BR2_PACKAGE_PHP_EXT_SYSVSHM boolean {
      prompt "sysvshm - System V Shared memory" if [BR2_PACKAGE_PHP]
      inherited [BR2_PACKAGE_PHP]
     }
     config BR2_PACKAGE_PHP_EXT_ZIP boolean {
      prompt "zip" if [BR2_PACKAGE_PHP]
      inherited [BR2_PACKAGE_PHP]
     }
     config BR2_PACKAGE_PHP_EXT_FILTER boolean {
      prompt "filter" if [BR2_PACKAGE_PHP]
      select BR2_PACKAGE_PHP_EXT_PCRE if [BR2_PACKAGE_PHP]
      inherited [BR2_PACKAGE_PHP]
     }
     config BR2_PACKAGE_PHP_EXT_CALENDAR boolean {
      prompt "calendar" if [BR2_PACKAGE_PHP]
      inherited [BR2_PACKAGE_PHP]
     }
     config BR2_PACKAGE_PHP_EXT_SQLITE boolean {
      prompt "SQLite" if [BR2_PACKAGE_PHP]
      inherited [BR2_PACKAGE_PHP]
      config BR2_PACKAGE_PHP_EXT_SQLITE_UTF8 boolean {
       prompt "sqlite UTF8 support" if [BR2_PACKAGE_PHP && BR2_PACKAGE_PHP_EXT_SQLITE]
       depends on [BR2_PACKAGE_PHP_EXT_SQLITE]
       inherited [BR2_PACKAGE_PHP && BR2_PACKAGE_PHP_EXT_SQLITE]
      }
     }
     config BR2_PACKAGE_PHP_EXT_PDO boolean {
      prompt "PDO" if [BR2_PACKAGE_PHP]
      inherited [BR2_PACKAGE_PHP]
      config BR2_PACKAGE_PHP_EXT_PDO_SQLITE boolean {
       prompt "PDO_SQLite" if [BR2_PACKAGE_PHP && BR2_PACKAGE_PHP_EXT_PDO]
       depends on [BR2_PACKAGE_PHP_EXT_PDO]
       inherited [BR2_PACKAGE_PHP && BR2_PACKAGE_PHP_EXT_PDO]
       config BR2_PACKAGE_PHP_EXT_PDO_SQLITE_EXTERNAL boolean {
        prompt "PDO_SQLite external" if [BR2_PACKAGE_PHP && BR2_PACKAGE_PHP_EXT_PDO_SQLITE]
        depends on [BR2_PACKAGE_PHP_EXT_PDO_SQLITE]
        select BR2_PACKAGE_SQLITE if [BR2_PACKAGE_PHP && BR2_PACKAGE_PHP_EXT_PDO_SQLITE]
        inherited [BR2_PACKAGE_PHP && BR2_PACKAGE_PHP_EXT_PDO_SQLITE]
       }
      }
      config BR2_PACKAGE_PHP_EXT_PDO_MYSQL boolean {
       prompt "PDO_MySQL" if [BR2_PACKAGE_PHP && BR2_PACKAGE_PHP_EXT_PDO && BR2_INSTALL_LIBSTDCPP]
       depends on [BR2_PACKAGE_PHP_EXT_PDO]
       depends on [BR2_INSTALL_LIBSTDCPP]
       select BR2_PACKAGE_MYSQL_CLIENT if [BR2_PACKAGE_PHP && BR2_PACKAGE_PHP_EXT_PDO && BR2_INSTALL_LIBSTDCPP]
       inherited [BR2_PACKAGE_PHP && BR2_PACKAGE_PHP_EXT_PDO && BR2_INSTALL_LIBSTDCPP]
      }
     }
    }
   }
  }
  config BR2_PACKAGE_PYTHON boolean {
   prompt "python" if [BR2_USE_WCHAR]
   depends on [BR2_USE_WCHAR]
   inherited [BR2_USE_WCHAR]
  }
  config BR2_PACKAGE_PYTHON_DEV boolean {
   depends on [BR2_PACKAGE_PYTHON]
   prompt "development files on target" if [BR2_PACKAGE_PYTHON]
   inherited [BR2_PACKAGE_PYTHON]
  }
  choice boolean {
   prompt "Module format to install" if [BR2_PACKAGE_PYTHON]
   depends on [BR2_PACKAGE_PYTHON]
   default [BR2_PACKAGE_PYTHON_PY_ONLY] if [BR2_PACKAGE_PYTHON]
   config BR2_PACKAGE_PYTHON_PY_ONLY boolean {
    prompt ".py sources only" if [<choice>]
    inherited [<choice>]
   }
   config BR2_PACKAGE_PYTHON_PYC_ONLY boolean {
    prompt ".pyc compiled sources only" if [<choice>]
    inherited [<choice>]
   }
   config BR2_PACKAGE_PYTHON_PY_PYC boolean {
    prompt ".py sources and .pyc compiled" if [<choice>]
    inherited [<choice>]
   }
  }
  config BR2_PACKAGE_PYTHON_BSDDB boolean {
   depends on [BR2_PACKAGE_PYTHON]
   select BR2_PACKAGE_BERKELEYDB if [BR2_PACKAGE_PYTHON]
   prompt "bsddb module" if [BR2_PACKAGE_PYTHON]
   inherited [BR2_PACKAGE_PYTHON]
  }
  config BR2_PACKAGE_PYTHON_CODECSCJK boolean {
   depends on [BR2_PACKAGE_PYTHON]
   prompt "codecscjk module" if [BR2_PACKAGE_PYTHON]
   default [y] if [BR2_PACKAGE_PYTHON]
   inherited [BR2_PACKAGE_PYTHON]
  }
  config BR2_PACKAGE_PYTHON_CURSES boolean {
   depends on [BR2_PACKAGE_PYTHON]
   select BR2_PACKAGE_NCURSES if [BR2_PACKAGE_PYTHON]
   prompt "curses module" if [BR2_PACKAGE_PYTHON]
   inherited [BR2_PACKAGE_PYTHON]
  }
  config BR2_PACKAGE_PYTHON_PYEXPAT boolean {
   depends on [BR2_PACKAGE_PYTHON]
   select BR2_PACKAGE_EXPAT if [BR2_PACKAGE_PYTHON]
   prompt "pyexpat" if [BR2_PACKAGE_PYTHON]
   inherited [BR2_PACKAGE_PYTHON]
  }
  config BR2_PACKAGE_PYTHON_READLINE boolean {
   depends on [BR2_PACKAGE_PYTHON]
   select BR2_PACKAGE_READLINE if [BR2_PACKAGE_PYTHON]
   prompt "readline" if [BR2_PACKAGE_PYTHON]
   inherited [BR2_PACKAGE_PYTHON]
  }
  config BR2_PACKAGE_PYTHON_SSL boolean {
   depends on [BR2_PACKAGE_PYTHON]
   select BR2_PACKAGE_OPENSSL if [BR2_PACKAGE_PYTHON]
   prompt "ssl" if [BR2_PACKAGE_PYTHON]
   inherited [BR2_PACKAGE_PYTHON]
  }
  config BR2_PACKAGE_PYTHON_TKINTER boolean {
   depends on [BR2_PACKAGE_PYTHON]
   select BR2_PACKAGE_TCL if [BR2_PACKAGE_PYTHON]
   prompt "tkinter module" if [BR2_PACKAGE_PYTHON]
   inherited [BR2_PACKAGE_PYTHON]
  }
  config BR2_PACKAGE_PYTHON_UNICODEDATA boolean {
   depends on [BR2_PACKAGE_PYTHON]
   prompt "unicodedata module" if [BR2_PACKAGE_PYTHON]
   default [y] if [BR2_PACKAGE_PYTHON]
   inherited [BR2_PACKAGE_PYTHON]
  }
  config BR2_PACKAGE_RUBY boolean {
   prompt "ruby" if [BR2_USE_WCHAR]
   depends on [BR2_USE_WCHAR]
   inherited [BR2_USE_WCHAR]
  }
  config BR2_PACKAGE_TCL boolean {
   prompt "tcl" if []
   config BR2_PACKAGE_TCL_DEL_ENCODINGS boolean {
    prompt "delete encodings (saves 1.4Mb)" if [BR2_PACKAGE_TCL]
    default [y] if [BR2_PACKAGE_TCL]
    depends on [BR2_PACKAGE_TCL]
    inherited [BR2_PACKAGE_TCL]
   }
   config BR2_PACKAGE_TCL_SHLIB_ONLY boolean {
    prompt "install only shared library" if [BR2_PACKAGE_TCL]
    default [y] if [BR2_PACKAGE_TCL]
    depends on [BR2_PACKAGE_TCL]
    inherited [BR2_PACKAGE_TCL]
   }
  }
 }
 menu "Libraries" {
  menu "Compression and decompression" {
   config BR2_PACKAGE_LIBARCHIVE boolean {
    prompt "libarchive" if [BR2_USE_WCHAR]
    depends on [BR2_USE_WCHAR]
    inherited [BR2_USE_WCHAR]
   }
   config BR2_PACKAGE_LIBARCHIVE_BSDTAR boolean {
    prompt "bsdtar" if [BR2_PACKAGE_LIBARCHIVE]
    depends on [BR2_PACKAGE_LIBARCHIVE]
    inherited [BR2_PACKAGE_LIBARCHIVE]
   }
   config BR2_PACKAGE_LIBARCHIVE_BSDCPIO boolean {
    prompt "bsdcpio" if [BR2_PACKAGE_LIBARCHIVE]
    depends on [BR2_PACKAGE_LIBARCHIVE]
    inherited [BR2_PACKAGE_LIBARCHIVE]
   }
   config BR2_PACKAGE_LZO boolean {
    prompt "lzo" if []
   }
   config BR2_PACKAGE_ZLIB boolean {
    prompt "zlib" if []
   }
  }
  menu "Crypto" {
   config BR2_PACKAGE_BEECRYPT boolean {
    prompt "beecrypt" if []
   }
   config BR2_PACKAGE_LIBGCRYPT boolean {
    prompt "libgcrypt" if []
    select BR2_PACKAGE_LIBGPG_ERROR if []
   }
   config BR2_PACKAGE_LIBGPG_ERROR boolean {
    prompt "libgpg-error" if []
   }
   config BR2_PACKAGE_OPENSSL boolean {
    prompt "openssl" if []
    select BR2_PACKAGE_ZLIB if []
    config BR2_PACKAGE_OPENSSL_BIN boolean {
     prompt "openssl binary" if [BR2_PACKAGE_OPENSSL]
     depends on [BR2_PACKAGE_OPENSSL]
     inherited [BR2_PACKAGE_OPENSSL]
    }
    config BR2_PACKAGE_OPENSSL_ENGINES boolean {
     prompt "openssl additional engines" if [BR2_PACKAGE_OPENSSL]
     depends on [BR2_PACKAGE_OPENSSL]
     inherited [BR2_PACKAGE_OPENSSL]
    }
   }
  }
  menu "Database" {
   config BR2_PACKAGE_BERKELEYDB boolean {
    prompt "berkeleydb" if []
   }
   config BR2_PACKAGE_MYSQL_CLIENT boolean {
    prompt "MySQL client" if [BR2_INSTALL_LIBSTDCPP]
    depends on [BR2_INSTALL_LIBSTDCPP]
    select BR2_PACKAGE_NCURSES if [BR2_INSTALL_LIBSTDCPP]
    select BR2_PACKAGE_READLINE if [BR2_INSTALL_LIBSTDCPP]
    inherited [BR2_INSTALL_LIBSTDCPP]
   }
   config BR2_PACKAGE_SQLITE boolean {
    prompt "sqlite" if []
    config BR2_PACKAGE_SQLITE_READLINE boolean {
     prompt "Command-line editing" if [BR2_PACKAGE_SQLITE]
     depends on [BR2_PACKAGE_SQLITE]
     select BR2_PACKAGE_NCURSES if [BR2_PACKAGE_SQLITE]
     select BR2_PACKAGE_READLINE if [BR2_PACKAGE_SQLITE]
     inherited [BR2_PACKAGE_SQLITE]
    }
   }
  }
  menu "Filesystem" {
   config BR2_PACKAGE_GAMIN boolean {
    prompt "gamin" if [BR2_USE_WCHAR]
    depends on [BR2_USE_WCHAR]
    select BR2_PACKAGE_LIBGLIB2 if [BR2_USE_WCHAR]
    inherited [BR2_USE_WCHAR]
   }
   config BR2_PACKAGE_LIBCONFIG boolean {
    prompt "libconfig" if []
   }
   config BR2_PACKAGE_LIBCONFUSE boolean {
    prompt "libconfuse" if []
   }
   config BR2_PACKAGE_LIBFUSE boolean {
    prompt "libfuse" if [BR2_LARGEFILE]
    depends on [BR2_LARGEFILE]
    inherited [BR2_LARGEFILE]
   }
   config BR2_PACKAGE_LIBLOCKFILE boolean {
    prompt "liblockfile" if []
   }
   config BR2_PACKAGE_LIBSYSFS boolean {
    prompt "libsysfs" if []
   }
  }
  menu "Graphics" {
   config BR2_PACKAGE_ATK boolean {
    prompt "atk" if [BR2_USE_WCHAR]
    select BR2_PACKAGE_LIBGLIB2 if [BR2_USE_WCHAR]
    depends on [BR2_USE_WCHAR]
    inherited [BR2_USE_WCHAR]
   }
   config BR2_PACKAGE_CAIRO boolean {
    prompt "cairo" if []
    select BR2_PACKAGE_PIXMAN if []
    select BR2_PACKAGE_FONTCONFIG if []
    if [BR2_PACKAGE_CAIRO] {
     config BR2_PACKAGE_CAIRO_PS boolean {
      prompt "postscript support" if [BR2_PACKAGE_CAIRO]
      select BR2_PACKAGE_ZLIB if [BR2_PACKAGE_CAIRO]
      select BR2_PACKAGE_CAIRO_PDF if [BR2_PACKAGE_CAIRO]
      inherited [BR2_PACKAGE_CAIRO]
     }
     config BR2_PACKAGE_CAIRO_PDF boolean {
      prompt "pdf support" if [BR2_PACKAGE_CAIRO]
      select BR2_PACKAGE_ZLIB if [BR2_PACKAGE_CAIRO]
      inherited [BR2_PACKAGE_CAIRO]
     }
     config BR2_PACKAGE_CAIRO_PNG boolean {
      prompt "png support" if [BR2_PACKAGE_CAIRO]
      select BR2_PACKAGE_LIBPNG if [BR2_PACKAGE_CAIRO]
      select BR2_PACKAGE_ZLIB if [BR2_PACKAGE_CAIRO]
      inherited [BR2_PACKAGE_CAIRO]
     }
     config BR2_PACKAGE_CAIRO_SVG boolean {
      prompt "svg support" if [BR2_PACKAGE_CAIRO]
      select BR2_PACKAGE_CAIRO_PNG if [BR2_PACKAGE_CAIRO]
      select BR2_PACKAGE_CAIRO_PDF if [BR2_PACKAGE_CAIRO]
      inherited [BR2_PACKAGE_CAIRO]
     }
    }
   }
   config BR2_PACKAGE_FLTK boolean {
    prompt "fltk" if [BR2_INSTALL_LIBSTDCPP && BR2_PACKAGE_XORG7]
    depends on [BR2_INSTALL_LIBSTDCPP]
    depends on [BR2_PACKAGE_XORG7]
    select BR2_PACKAGE_XLIB_LIBXT if [BR2_INSTALL_LIBSTDCPP && BR2_PACKAGE_XORG7]
    inherited [BR2_INSTALL_LIBSTDCPP && BR2_PACKAGE_XORG7]
   }
   config BR2_PACKAGE_FONTCONFIG boolean {
    prompt "fontconfig" if []
    select BR2_PACKAGE_FREETYPE if []
    select BR2_PACKAGE_EXPAT if []
   }
   config BR2_PACKAGE_FREETYPE boolean {
    prompt "freetype" if []
   }
   config BR2_PACKAGE_LIBGTK2_ENGINES boolean {
    prompt "gtk engines" if [BR2_PACKAGE_LIBGTK2]
    depends on [BR2_PACKAGE_LIBGTK2]
    inherited [BR2_PACKAGE_LIBGTK2]
   }
   menu "GTK Themes" {
    depends on [BR2_PACKAGE_LIBGTK2]
    config BR2_PACKAGE_GTK2_THEME_HICOLOR boolean {
     prompt "hicolor (default theme)" if [BR2_PACKAGE_LIBGTK2]
     inherited [BR2_PACKAGE_LIBGTK2]
    }
   }
   config BR2_PACKAGE_JPEG boolean {
    prompt "jpeg" if []
   }
   config BR2_PACKAGE_LIBART boolean {
    prompt "libart" if []
   }
   config BR2_PACKAGE_LIBDRM boolean {
    prompt "libdrm" if [BR2_PACKAGE_XORG7 && BR2_LARGEFILE]
    depends on [BR2_PACKAGE_XORG7]
    depends on [BR2_LARGEFILE]
    select BR2_PACKAGE_XPROTO_GLPROTO if [BR2_PACKAGE_XORG7 && BR2_LARGEFILE]
    select BR2_PACKAGE_XPROTO_XF86VIDMODEPROTO if [BR2_PACKAGE_XORG7 && BR2_LARGEFILE]
    select BR2_PACKAGE_XLIB_LIBXXF86VM if [BR2_PACKAGE_XORG7 && BR2_LARGEFILE]
    select BR2_PACKAGE_XLIB_LIBXMU if [BR2_PACKAGE_XORG7 && BR2_LARGEFILE]
    select BR2_PACKAGE_XPROTO_DRI2PROTO if [BR2_PACKAGE_XORG7 && BR2_LARGEFILE]
    select BR2_PACKAGE_PTHREAD_STUBS if [BR2_PACKAGE_XORG7 && BR2_LARGEFILE]
    select BR2_PACKAGE_LIBATOMIC_OPS if [BR2_PACKAGE_XORG7 && BR2_LARGEFILE && BR2_PACKAGE_XDRIVER_XF86_VIDEO_INTEL]
    inherited [BR2_PACKAGE_XORG7 && BR2_LARGEFILE]
   }
   config BR2_PACKAGE_LIBGAIL boolean {
    prompt "libgail" if [BR2_PACKAGE_LIBGTK2]
    depends on [BR2_PACKAGE_LIBGTK2]
    select BR2_PACKAGE_PANGO if [BR2_PACKAGE_LIBGTK2]
    inherited [BR2_PACKAGE_LIBGTK2]
   }
   config BR2_PACKAGE_LIBGLADE boolean {
    prompt "libglade" if [BR2_PACKAGE_LIBGTK2 && BR2_USE_WCHAR]
    depends on [BR2_PACKAGE_LIBGTK2]
    depends on [BR2_USE_WCHAR]
    select BR2_PACKAGE_LIBGLIB2 if [BR2_PACKAGE_LIBGTK2 && BR2_USE_WCHAR]
    select BR2_PACKAGE_ATK if [BR2_PACKAGE_LIBGTK2 && BR2_USE_WCHAR]
    select BR2_PACKAGE_LIBXML2 if [BR2_PACKAGE_LIBGTK2 && BR2_USE_WCHAR]
    inherited [BR2_PACKAGE_LIBGTK2 && BR2_USE_WCHAR]
   }
   config BR2_PACKAGE_LIBGTK2 boolean {
    prompt "libgtk2" if [(BR2_PACKAGE_XORG7 || BR2_PACKAGE_DIRECTFB && BR2_DEPRECATED) && BR2_USE_WCHAR && BR2_INSTALL_LIBSTDCPP]
    select BR2_PACKAGE_ATK if [(BR2_PACKAGE_XORG7 || BR2_PACKAGE_DIRECTFB && BR2_DEPRECATED) && BR2_USE_WCHAR && BR2_INSTALL_LIBSTDCPP]
    select BR2_PACKAGE_CAIRO if [(BR2_PACKAGE_XORG7 || BR2_PACKAGE_DIRECTFB && BR2_DEPRECATED) && BR2_USE_WCHAR && BR2_INSTALL_LIBSTDCPP]
    select BR2_PACKAGE_CAIRO_PS if [(BR2_PACKAGE_XORG7 || BR2_PACKAGE_DIRECTFB && BR2_DEPRECATED) && BR2_USE_WCHAR && BR2_INSTALL_LIBSTDCPP]
    select BR2_PACKAGE_CAIRO_PDF if [(BR2_PACKAGE_XORG7 || BR2_PACKAGE_DIRECTFB && BR2_DEPRECATED) && BR2_USE_WCHAR && BR2_INSTALL_LIBSTDCPP]
    select BR2_PACKAGE_LIBGLIB2 if [(BR2_PACKAGE_XORG7 || BR2_PACKAGE_DIRECTFB && BR2_DEPRECATED) && BR2_USE_WCHAR && BR2_INSTALL_LIBSTDCPP]
    select BR2_PACKAGE_PANGO if [(BR2_PACKAGE_XORG7 || BR2_PACKAGE_DIRECTFB && BR2_DEPRECATED) && BR2_USE_WCHAR && BR2_INSTALL_LIBSTDCPP]
    depends on [BR2_PACKAGE_XORG7 || BR2_PACKAGE_DIRECTFB && BR2_DEPRECATED]
    depends on [BR2_USE_WCHAR]
    depends on [BR2_INSTALL_LIBSTDCPP]
    inherited [(BR2_PACKAGE_XORG7 || BR2_PACKAGE_DIRECTFB && BR2_DEPRECATED) && BR2_USE_WCHAR && BR2_INSTALL_LIBSTDCPP]
   }
   config BR2_PACKAGE_LIBPNG boolean {
    prompt "libpng" if []
    select BR2_PACKAGE_ZLIB if []
   }
   config BR2_PACKAGE_LIBSVGTINY boolean {
    prompt "libsvgtiny" if []
    select BR2_PACKAGE_LIBXML2 if []
   }
   config BR2_PACKAGE_LIBUNGIF boolean {
    prompt "libungif" if []
   }
   config BR2_PACKAGE_PANGO boolean {
    prompt "pango" if [BR2_USE_WCHAR && BR2_INSTALL_LIBSTDCPP]
    depends on [BR2_USE_WCHAR]
    depends on [BR2_INSTALL_LIBSTDCPP]
    select BR2_PACKAGE_LIBGLIB2 if [BR2_USE_WCHAR && BR2_INSTALL_LIBSTDCPP]
    select BR2_PACKAGE_EXPAT if [BR2_USE_WCHAR && BR2_INSTALL_LIBSTDCPP]
    select BR2_PACKAGE_CAIRO if [BR2_USE_WCHAR && BR2_INSTALL_LIBSTDCPP]
    select BR2_PACKAGE_GETTEXT if [BR2_USE_WCHAR && BR2_INSTALL_LIBSTDCPP && BR2_NEEDS_GETTEXT_IF_LOCALE]
    select BR2_PACKAGE_LIBINTL if [BR2_USE_WCHAR && BR2_INSTALL_LIBSTDCPP && BR2_NEEDS_GETTEXT_IF_LOCALE]
    inherited [BR2_USE_WCHAR && BR2_INSTALL_LIBSTDCPP]
   }
   config BR2_PACKAGE_PIXMAN boolean {
    prompt "pixman" if []
   }
   config BR2_PACKAGE_TIFF boolean {
    prompt "tiff" if []
    select BR2_PACKAGE_ZLIB if []
    select BR2_PACKAGE_JPEG if []
   }
   config BR2_PACKAGE_WEBKIT boolean {
    prompt "webkit" if [BR2_INSTALL_LIBSTDCPP && BR2_USE_WCHAR && BR2_PACKAGE_LIBGTK2]
    depends on [BR2_INSTALL_LIBSTDCPP]
    depends on [BR2_USE_WCHAR]
    depends on [BR2_PACKAGE_LIBGTK2]
    select BR2_PACKAGE_ICU if [BR2_INSTALL_LIBSTDCPP && BR2_USE_WCHAR && BR2_PACKAGE_LIBGTK2]
    select BR2_PACKAGE_CURL if [BR2_INSTALL_LIBSTDCPP && BR2_USE_WCHAR && BR2_PACKAGE_LIBGTK2]
    select BR2_PACKAGE_LIBXML2 if [BR2_INSTALL_LIBSTDCPP && BR2_USE_WCHAR && BR2_PACKAGE_LIBGTK2]
    select BR2_PACKAGE_LIBXSLT if [BR2_INSTALL_LIBSTDCPP && BR2_USE_WCHAR && BR2_PACKAGE_LIBGTK2]
    select BR2_PACKAGE_SQLITE if [BR2_INSTALL_LIBSTDCPP && BR2_USE_WCHAR && BR2_PACKAGE_LIBGTK2]
    select BR2_PACKAGE_ENCHANT if [BR2_INSTALL_LIBSTDCPP && BR2_USE_WCHAR && BR2_PACKAGE_LIBGTK2]
    select BR2_PACKAGE_LIBSOUP if [BR2_INSTALL_LIBSTDCPP && BR2_USE_WCHAR && BR2_PACKAGE_LIBGTK2]
    select BR2_PACKAGE_CAIRO_PNG if [BR2_INSTALL_LIBSTDCPP && BR2_USE_WCHAR && BR2_PACKAGE_LIBGTK2]
    select BR2_PACKAGE_LIBGAIL if [BR2_INSTALL_LIBSTDCPP && BR2_USE_WCHAR && BR2_PACKAGE_LIBGTK2]
    select BR2_PACKAGE_XLIB_LIBXT if [BR2_INSTALL_LIBSTDCPP && BR2_USE_WCHAR && BR2_PACKAGE_LIBGTK2 && BR2_PACKAGE_XORG7]
    inherited [BR2_INSTALL_LIBSTDCPP && BR2_USE_WCHAR && BR2_PACKAGE_LIBGTK2]
   }
  }
  menu "Hardware handling" {
   config BR2_PACKAGE_LIBAIO boolean {
    prompt "libaio" if []
   }
   config BR2_PACKAGE_LIBRAW1394 boolean {
    prompt "libraw1394" if []
   }
   config BR2_PACKAGE_TSLIB boolean {
    prompt "libts - The Touchscreen tslib Library" if []
   }
   config BR2_PACKAGE_LIBUSB boolean {
    prompt "libusb" if []
    config BR2_PACKAGE_LIBUSB_COMPAT boolean {
     prompt "libusb-compat" if [BR2_PACKAGE_LIBUSB]
     depends on [BR2_PACKAGE_LIBUSB]
     inherited [BR2_PACKAGE_LIBUSB]
    }
   }
  }
  if [BROKEN] {
   menu "Java" {
    depends on [BROKEN]
    config BR2_PACKAGE_CLASSPATH boolean {
     prompt "classpath" if [BROKEN]
     inherited [BROKEN]
    }
    config BR2_PACKAGE_CONCIERGE boolean {
     prompt "concierge" if [BROKEN && BR2_PACKAGE_JAMVM]
     depends on [BR2_PACKAGE_JAMVM]
     inherited [BROKEN && BR2_PACKAGE_JAMVM]
    }
   }
  }
  menu "Networking" {
   config BR2_PACKAGE_LIBCGI boolean {
    prompt "libcgi" if []
   }
   config BR2_PACKAGE_LIBCGICC boolean {
    prompt "libcgicc" if [BR2_INSTALL_LIBSTDCPP]
    depends on [BR2_INSTALL_LIBSTDCPP]
    inherited [BR2_INSTALL_LIBSTDCPP]
   }
   config BR2_PACKAGE_LIBCURL boolean {
    prompt "libcurl" if []
    config BR2_PACKAGE_CURL boolean {
     prompt "curl binary" if [BR2_PACKAGE_LIBCURL]
     depends on [BR2_PACKAGE_LIBCURL]
     inherited [BR2_PACKAGE_LIBCURL]
    }
   }
   config BR2_PACKAGE_LIBDNET boolean {
    prompt "libdnet" if []
    config BR2_PACKAGE_LIBDNET_PYTHON boolean {
     prompt "libdnet python module" if [BR2_PACKAGE_LIBDNET && BR2_PACKAGE_PYTHON]
     depends on [BR2_PACKAGE_LIBDNET && BR2_PACKAGE_PYTHON]
     inherited [BR2_PACKAGE_LIBDNET && BR2_PACKAGE_PYTHON]
    }
   }
   config BR2_PACKAGE_LIBEXOSIP2 boolean {
    prompt "libeXosip2" if []
    select BR2_PACKAGE_LIBOSIP2 if []
   }
   config BR2_PACKAGE_LIBIDN boolean {
    prompt "libidn" if []
    select BR2_PACKAGE_GETTEXT if [BR2_NEEDS_GETTEXT_IF_LOCALE]
    config BR2_PACKAGE_LIBIDN_BINARY boolean {
     prompt "idn binary" if [BR2_PACKAGE_LIBIDN]
     depends on [BR2_PACKAGE_LIBIDN]
     inherited [BR2_PACKAGE_LIBIDN]
    }
   }
   config BR2_PACKAGE_LIBMICROHTTPD boolean {
    prompt "libmicrohttpd" if []
    select BR2_PACKAGE_LIBGCRYPT if []
   }
   config BR2_PACKAGE_NEON boolean {
    prompt "libneon" if []
    config BR2_PACKAGE_NEON_ZLIB boolean {
     prompt "ZLIB support" if [BR2_PACKAGE_NEON]
     depends on [BR2_PACKAGE_NEON]
     select BR2_PACKAGE_ZLIB if [BR2_PACKAGE_NEON]
     inherited [BR2_PACKAGE_NEON]
    }
    config BR2_PACKAGE_NEON_SSL boolean {
     prompt "SSL support" if [BR2_PACKAGE_NEON]
     depends on [BR2_PACKAGE_NEON]
     select BR2_PACKAGE_OPENSSL if [BR2_PACKAGE_NEON]
     inherited [BR2_PACKAGE_NEON]
    }
    choice boolean {
     prompt "XML Support" if [BR2_PACKAGE_NEON]
     default [BR2_PACKAGE_NEON_NOXML] if [BR2_PACKAGE_NEON]
     depends on [BR2_PACKAGE_NEON]
     config BR2_PACKAGE_NEON_EXPAT boolean {
      prompt "expat" if [<choice> && BR2_PACKAGE_EXPAT]
      depends on [BR2_PACKAGE_EXPAT]
      inherited [<choice> && BR2_PACKAGE_EXPAT]
     }
     config BR2_PACKAGE_NEON_LIBXML2 boolean {
      prompt "libxml2" if [<choice> && BR2_PACKAGE_LIBXML2]
      depends on [BR2_PACKAGE_LIBXML2]
      inherited [<choice> && BR2_PACKAGE_LIBXML2]
     }
     config BR2_PACKAGE_NEON_NOXML boolean {
      prompt "none" if [<choice>]
      inherited [<choice>]
     }
    }
   }
   config BR2_PACKAGE_LIBNL boolean {
    prompt "libnl" if []
   }
   config BR2_PACKAGE_LIBPCAP boolean {
    prompt "libpcap" if []
    select BR2_PACKAGE_ZLIB if []
   }
   config BR2_PACKAGE_LIBOSIP2 boolean {
    prompt "libosip2" if []
   }
   config BR2_PACKAGE_LIBRSYNC boolean {
    prompt "librsync" if []
    select BR2_PACKAGE_ZLIB if []
    select BR2_PACKAGE_BZIP2 if []
    select BR2_PACKAGE_POPT if []
   }
   config BR2_PACKAGE_LIBSOUP boolean {
    prompt "libsoup" if [BR2_USE_WCHAR]
    depends on [BR2_USE_WCHAR]
    select BR2_PACKAGE_LIBXML2 if [BR2_USE_WCHAR]
    select BR2_PACKAGE_LIBGLIB2 if [BR2_USE_WCHAR]
    select BR2_PACKAGE_GETTEXT if [BR2_USE_WCHAR && BR2_NEEDS_GETTEXT]
    select BR2_PACKAGE_LIBINTL if [BR2_USE_WCHAR && BR2_NEEDS_GETTEXT]
    inherited [BR2_USE_WCHAR]
   }
   config BR2_PACKAGE_LIBUPNP boolean {
    prompt "libupnp" if [BR2_LARGEFILE]
    depends on [BR2_LARGEFILE]
    inherited [BR2_LARGEFILE]
   }
  }
  menu "Other" {
   config BR2_PACKAGE_LIBATOMIC_OPS boolean {
    prompt "libatomic_ops" if []
   }
   config BR2_PACKAGE_LIBCAP boolean {
    prompt "libcap" if []
   }
   config BR2_PACKAGE_LIBDAEMON boolean {
    prompt "libdaemon" if []
   }
   config BR2_PACKAGE_LIBELF boolean {
    prompt "libelf" if []
   }
   config BR2_PACKAGE_LIBEVENT boolean {
    prompt "libevent" if []
   }
   config BR2_PACKAGE_LIBFLOAT boolean {
    prompt "libfloat" if [BR2_DEPRECATED]
    depends on [BR2_DEPRECATED]
    inherited [BR2_DEPRECATED]
   }
   config BR2_PACKAGE_LIBGLIB2 boolean {
    prompt "libglib2" if [BR2_USE_WCHAR]
    select BR2_PACKAGE_GETTEXT if [BR2_USE_WCHAR && BR2_NEEDS_GETTEXT]
    select BR2_PACKAGE_LIBINTL if [BR2_USE_WCHAR && BR2_NEEDS_GETTEXT]
    select BR2_PACKAGE_LIBICONV if [BR2_USE_WCHAR && !BR2_ENABLE_LOCALE]
    select BR2_PACKAGE_ZLIB if [BR2_USE_WCHAR]
    depends on [BR2_USE_WCHAR]
    inherited [BR2_USE_WCHAR]
   }
   config BR2_PACKAGE_LIBOIL boolean {
    prompt "liboil" if []
   }
   config BR2_PACKAGE_STARTUP_NOTIFICATION boolean {
    prompt "startup-notification" if [BR2_PACKAGE_XORG7]
    select BR2_PACKAGE_XLIB_LIBX11 if [BR2_PACKAGE_XORG7]
    depends on [BR2_PACKAGE_XORG7]
    inherited [BR2_PACKAGE_XORG7]
   }
  }
  menu "Text and terminal handling" {
   config BR2_PACKAGE_ENCHANT boolean {
    prompt "enchant" if [BR2_INSTALL_LIBSTDCPP && BR2_USE_WCHAR]
    depends on [BR2_INSTALL_LIBSTDCPP]
    depends on [BR2_USE_WCHAR]
    select BR2_PACKAGE_LIBGLIB2 if [BR2_INSTALL_LIBSTDCPP && BR2_USE_WCHAR]
    inherited [BR2_INSTALL_LIBSTDCPP && BR2_USE_WCHAR]
   }
   config BR2_PACKAGE_ICU boolean {
    prompt "icu" if [BR2_INSTALL_LIBSTDCPP && BR2_USE_WCHAR]
    depends on [BR2_INSTALL_LIBSTDCPP]
    depends on [BR2_USE_WCHAR]
    inherited [BR2_INSTALL_LIBSTDCPP && BR2_USE_WCHAR]
   }
   config BR2_PACKAGE_LIBICONV boolean {
    prompt "libiconv" if [!BR2_ENABLE_LOCALE]
    depends on [!BR2_ENABLE_LOCALE]
    inherited [!BR2_ENABLE_LOCALE]
   }
   config BR2_PACKAGE_NCURSES boolean {
    prompt "ncurses" if []
    config BR2_PACKAGE_NCURSES_TARGET_PANEL boolean {
     prompt "ncurses libpanel in target" if [BR2_PACKAGE_NCURSES]
     depends on [BR2_PACKAGE_NCURSES]
     inherited [BR2_PACKAGE_NCURSES]
    }
    config BR2_PACKAGE_NCURSES_TARGET_FORM boolean {
     prompt "ncurses libform in target" if [BR2_PACKAGE_NCURSES]
     depends on [BR2_PACKAGE_NCURSES]
     inherited [BR2_PACKAGE_NCURSES]
    }
    config BR2_PACKAGE_NCURSES_TARGET_MENU boolean {
     prompt "ncurses libmenu in target" if [BR2_PACKAGE_NCURSES]
     depends on [BR2_PACKAGE_NCURSES]
     inherited [BR2_PACKAGE_NCURSES]
    }
   }
   config BR2_PACKAGE_NEWT boolean {
    prompt "newt" if []
    select BR2_PACKAGE_SLANG if []
   }
   config BR2_PACKAGE_PCRE boolean {
    prompt "pcre" if []
   }
   config BR2_PACKAGE_POPT boolean {
    prompt "popt" if []
   }
   config BR2_PACKAGE_READLINE boolean {
    prompt "readline" if []
    select BR2_PACKAGE_NCURSES if []
   }
   config BR2_PACKAGE_SLANG boolean {
    prompt "slang" if []
   }
  }
  menu "XML" {
   config BR2_PACKAGE_EXPAT boolean {
    prompt "expat" if []
   }
   config BR2_PACKAGE_EZXML boolean {
    prompt "ezxml" if []
   }
   config BR2_PACKAGE_LIBXML_PARSER_PERL boolean {
    prompt "libxml-parser-perl" if [BR2_HOST_ONLY]
    select BR2_PACKAGE_EXPAT if [BR2_HOST_ONLY]
    depends on [BR2_HOST_ONLY]
    inherited [BR2_HOST_ONLY]
   }
   config BR2_PACKAGE_LIBXML2 boolean {
    prompt "libxml2" if []
   }
   config BR2_PACKAGE_LIBXSLT boolean {
    prompt "libxslt" if []
    select BR2_PACKAGE_LIBXML2 if []
   }
   config BR2_PACKAGE_XERCES boolean {
    prompt "xerces-c++" if [BR2_INSTALL_LIBSTDCPP]
    depends on [BR2_INSTALL_LIBSTDCPP]
    select BR2_PACKAGE_LIBICONV if [BR2_INSTALL_LIBSTDCPP && !BR2_ENABLE_LOCALE]
    inherited [BR2_INSTALL_LIBSTDCPP]
   }
  }
 }
 menu "Miscellaneous" {
  config BR2_PACKAGE_NG_SPICE_REWORK boolean {
   prompt "ng-spice-rework" if [BR2_PACKAGE_XORG7]
   depends on [BR2_PACKAGE_XORG7]
   select BR2_PACKAGE_XLIB_LIBXAW if [BR2_PACKAGE_XORG7]
   inherited [BR2_PACKAGE_XORG7]
  }
  config BR2_PACKAGE_SHARED_MIME_INFO boolean {
   prompt "shared-mime-info" if [BR2_USE_WCHAR]
   depends on [BR2_USE_WCHAR]
   select BR2_PACKAGE_LIBGLIB2 if [BR2_USE_WCHAR]
   select BR2_PACKAGE_LIBXML2 if [BR2_USE_WCHAR]
   inherited [BR2_USE_WCHAR]
  }
 }
 menu "Networking applications" {
  config BR2_PACKAGE_ARGUS boolean {
   prompt "argus" if []
   select BR2_PACKAGE_LIBPCAP if []
  }
  config BR2_PACKAGE_AVAHI boolean {
   prompt "avahi" if []
   select BR2_PACKAGE_GETTEXT if [BR2_NEEDS_GETTEXT_IF_LOCALE]
   select BR2_PACKAGE_LIBINTL if [BR2_NEEDS_GETTEXT_IF_LOCALE]
   config BR2_PACKAGE_AVAHI_AUTOIPD boolean {
    prompt "IPv4LL network address configuration daemon" if [BR2_PACKAGE_AVAHI]
    default [y] if [BR2_PACKAGE_AVAHI]
    depends on [BR2_PACKAGE_AVAHI]
    select BR2_PACKAGE_LIBDAEMON if [BR2_PACKAGE_AVAHI]
    inherited [BR2_PACKAGE_AVAHI]
   }
   config BR2_PACKAGE_AVAHI_DAEMON boolean {
    prompt "mDNS/DNS-SD daemon" if [BR2_PACKAGE_AVAHI]
    depends on [BR2_PACKAGE_AVAHI]
    select BR2_PACKAGE_LIBDAEMON if [BR2_PACKAGE_AVAHI]
    select BR2_PACKAGE_EXPAT if [BR2_PACKAGE_AVAHI]
    inherited [BR2_PACKAGE_AVAHI]
   }
  }
  config BR2_PACKAGE_AXEL boolean {
   prompt "axel" if []
   select BR2_PACKAGE_GETTEXT if [BR2_NEEDS_GETTEXT_IF_LOCALE]
   select BR2_PACKAGE_LIBINTL if [BR2_NEEDS_GETTEXT_IF_LOCALE]
  }
  if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS] {
   config BR2_PACKAGE_BOA boolean {
    prompt "boa" if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS]
    inherited [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS]
   }
  }
  config BR2_PACKAGE_BIND boolean {
   prompt "bind" if [BR2_LARGEFILE]
   depends on [BR2_LARGEFILE]
   inherited [BR2_LARGEFILE]
   config BR2_PACKAGE_BIND_TOOLS boolean {
    prompt "Install tools" if [BR2_PACKAGE_BIND]
    depends on [BR2_PACKAGE_BIND]
    inherited [BR2_PACKAGE_BIND]
   }
  }
  config BR2_PACKAGE_BMON boolean {
   prompt "bmon" if [BR2_INET_IPV6]
   depends on [BR2_INET_IPV6]
   select BR2_PACKAGE_NCURSES if [BR2_INET_IPV6]
   inherited [BR2_INET_IPV6]
  }
  config BR2_PACKAGE_BRIDGE boolean {
   prompt "bridge-utils" if []
  }
  config BR2_PACKAGE_CTORRENT boolean {
   prompt "ctorrent" if [BR2_INSTALL_LIBSTDCPP]
   depends on [BR2_INSTALL_LIBSTDCPP]
   inherited [BR2_INSTALL_LIBSTDCPP]
  }
  config BR2_PACKAGE_CUPS boolean {
   prompt "cups" if []
   if [BR2_PACKAGE_CUPS] {
    config BR2_PACKAGE_CUPS_PDFTOPS boolean {
     prompt "pdftops support" if [BR2_PACKAGE_CUPS && BR2_INSTALL_LIBSTDCPP]
     depends on [BR2_INSTALL_LIBSTDCPP]
     inherited [BR2_PACKAGE_CUPS && BR2_INSTALL_LIBSTDCPP]
    }
   }
  }
  if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS] {
   config BR2_PACKAGE_DHCP boolean {
    prompt "DHCP support" if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS]
    inherited [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS]
    config BR2_PACKAGE_DHCP_SERVER boolean {
     prompt "dhcp server" if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_PACKAGE_DHCP]
     depends on [BR2_PACKAGE_DHCP]
     inherited [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_PACKAGE_DHCP]
    }
    config BR2_PACKAGE_DHCP_RELAY boolean {
     prompt "dhcp relay" if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_PACKAGE_DHCP]
     depends on [BR2_PACKAGE_DHCP]
     inherited [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_PACKAGE_DHCP]
    }
    config BR2_PACKAGE_DHCP_CLIENT boolean {
     prompt "dhcp client" if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_PACKAGE_DHCP]
     depends on [BR2_PACKAGE_DHCP]
     inherited [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_PACKAGE_DHCP]
    }
   }
  }
  config BR2_PACKAGE_DNSMASQ boolean {
   prompt "dnsmasq" if []
   config BR2_PACKAGE_DNSMASQ_TFTP boolean {
    prompt "tftp support" if [BR2_PACKAGE_DNSMASQ]
    default [y] if [BR2_PACKAGE_DNSMASQ]
    depends on [BR2_PACKAGE_DNSMASQ]
    inherited [BR2_PACKAGE_DNSMASQ]
   }
   config BR2_PACKAGE_DNSMASQ_DHCP boolean {
    prompt "dhcp support" if [BR2_PACKAGE_DNSMASQ]
    default [y] if [BR2_PACKAGE_DNSMASQ]
    depends on [BR2_PACKAGE_DNSMASQ]
    inherited [BR2_PACKAGE_DNSMASQ]
   }
   config BR2_PACKAGE_DNSMASQ_IDN boolean {
    prompt "IDN support (BIG!)" if [BR2_PACKAGE_DNSMASQ]
    depends on [BR2_PACKAGE_DNSMASQ]
    select BR2_PACKAGE_LIBINTL if [BR2_PACKAGE_DNSMASQ]
    select BR2_PACKAGE_LIBIDN if [BR2_PACKAGE_DNSMASQ]
    inherited [BR2_PACKAGE_DNSMASQ]
   }
  }
  config BR2_PACKAGE_DROPBEAR boolean {
   prompt "dropbear" if []
   select BR2_PACKAGE_ZLIB if []
   config BR2_PACKAGE_DROPBEAR_DISABLE_REVERSEDNS boolean {
    prompt "disable reverse DNS lookups" if [BR2_PACKAGE_DROPBEAR]
    depends on [BR2_PACKAGE_DROPBEAR]
    inherited [BR2_PACKAGE_DROPBEAR]
   }
  }
  config BR2_PACKAGE_ETHTOOL boolean {
   prompt "ethtool" if []
  }
  config BR2_PACKAGE_HOSTAPD boolean {
   prompt "hostapd" if []
   select BR2_PACKAGE_LIBNL if []
   config BR2_PACKAGE_HOSTAPD_EXTRA_EAP boolean {
    prompt "Enable EAP TLS/TTLS/MSCHAPv2/PEAP" if [BR2_PACKAGE_HOSTAPD]
    depends on [BR2_PACKAGE_HOSTAPD]
    select BR2_PACKAGE_OPENSSL if [BR2_PACKAGE_HOSTAPD]
    inherited [BR2_PACKAGE_HOSTAPD]
   }
   config BR2_PACKAGE_HOSTAPD_WPS boolean {
    prompt "Enable WPS" if [BR2_PACKAGE_HOSTAPD]
    depends on [BR2_PACKAGE_HOSTAPD]
    select BR2_PACKAGE_OPENSSL if [BR2_PACKAGE_HOSTAPD]
    inherited [BR2_PACKAGE_HOSTAPD]
   }
  }
  config BR2_PACKAGE_IFPLUGD boolean {
   prompt "ifplugd" if []
   select BR2_PACKAGE_LIBDAEMON if []
  }
  config BR2_PACKAGE_IPERF boolean {
   prompt "iperf" if [BR2_INSTALL_LIBSTDCPP]
   depends on [BR2_INSTALL_LIBSTDCPP]
   inherited [BR2_INSTALL_LIBSTDCPP]
  }
  config BR2_PACKAGE_IPROUTE2 boolean {
   prompt "iproute2" if [BR2_INET_IPV6]
   depends on [BR2_INET_IPV6]
   inherited [BR2_INET_IPV6]
  }
  config BR2_PACKAGE_IPSEC_TOOLS boolean {
   prompt "ipsec-tools" if []
   select BR2_PACKAGE_OPENSSL if []
   select BR2_PACKAGE_FLEX if []
   select BR2_PACKAGE_FLEX_LIBFL if []
   if [BR2_PACKAGE_IPSEC_TOOLS] {
    config BR2_PACKAGE_IPSEC_TOOLS_ADMINPORT boolean {
     default [y] if [BR2_PACKAGE_IPSEC_TOOLS]
     prompt "Enable racoonctl(8)." if [BR2_PACKAGE_IPSEC_TOOLS]
     inherited [BR2_PACKAGE_IPSEC_TOOLS]
    }
    config BR2_PACKAGE_IPSEC_TOOLS_NATT boolean {
     prompt "Enable NAT-Traversal" if [BR2_PACKAGE_IPSEC_TOOLS]
     inherited [BR2_PACKAGE_IPSEC_TOOLS]
    }
    config BR2_PACKAGE_IPSEC_TOOLS_FRAG boolean {
     prompt "Enable IKE fragmentation." if [BR2_PACKAGE_IPSEC_TOOLS]
     inherited [BR2_PACKAGE_IPSEC_TOOLS]
    }
    config BR2_PACKAGE_IPSEC_TOOLS_STATS boolean {
     default [y] if [BR2_PACKAGE_IPSEC_TOOLS]
     prompt "Enable statistics logging function." if [BR2_PACKAGE_IPSEC_TOOLS]
     inherited [BR2_PACKAGE_IPSEC_TOOLS]
    }
    config BR2_PACKAGE_IPSEC_TOOLS_READLINE boolean {
     select BR2_PACKAGE_READLINE if [BR2_PACKAGE_IPSEC_TOOLS]
     prompt "Enable readline input support if available." if [BR2_PACKAGE_IPSEC_TOOLS]
     inherited [BR2_PACKAGE_IPSEC_TOOLS]
    }
    choice boolean {
     prompt "Security context" if [BR2_PACKAGE_IPSEC_TOOLS]
     default [BR2_PACKAGE_IPSEC_SECCTX_DISABLE] if [BR2_PACKAGE_IPSEC_TOOLS]
     config BR2_PACKAGE_IPSEC_SECCTX_DISABLE boolean {
      prompt "Disable security context support" if [<choice>]
      inherited [<choice>]
     }
     config BR2_PACKAGE_IPSEC_SECCTX_ENABLE boolean {
      prompt "Enable SELinux security context support" if [<choice>]
      inherited [<choice>]
     }
     config BR2_PACKAGE_IPSEC_SECCTX_KERNEL boolean {
      prompt "Enable kernel security context" if [<choice>]
      inherited [<choice>]
     }
    }
   }
  }
  config BR2_PACKAGE_IPTABLES boolean {
   prompt "iptables" if [BR2_LARGEFILE]
   depends on [BR2_LARGEFILE]
   inherited [BR2_LARGEFILE]
  }
  config BR2_PACKAGE_IW boolean {
   prompt "iw" if []
   select BR2_PACKAGE_LIBNL if []
  }
  config BR2_PACKAGE_KISMET boolean {
   prompt "kismet" if [BR2_INSTALL_LIBSTDCPP]
   depends on [BR2_INSTALL_LIBSTDCPP]
   select BR2_PACKAGE_NCURSES if [BR2_INSTALL_LIBSTDCPP]
   select BR2_PACKAGE_NCURSES_TARGET_PANEL if [BR2_INSTALL_LIBSTDCPP]
   select BR2_PACKAGE_LIBPCAP if [BR2_INSTALL_LIBSTDCPP]
   inherited [BR2_INSTALL_LIBSTDCPP]
   config BR2_PACKAGE_KISMET_CLIENT boolean {
    prompt "Install client" if [BR2_PACKAGE_KISMET]
    depends on [BR2_PACKAGE_KISMET]
    inherited [BR2_PACKAGE_KISMET]
   }
   config BR2_PACKAGE_KISMET_DRONE boolean {
    prompt "Install drone" if [BR2_PACKAGE_KISMET]
    depends on [BR2_PACKAGE_KISMET]
    inherited [BR2_PACKAGE_KISMET]
   }
   config BR2_PACKAGE_KISMET_SERVER boolean {
    prompt "Install server" if [BR2_PACKAGE_KISMET]
    default [y] if [BR2_PACKAGE_KISMET]
    depends on [BR2_PACKAGE_KISMET]
    inherited [BR2_PACKAGE_KISMET]
   }
  }
  config BR2_PACKAGE_L2TP boolean {
   prompt "l2tp" if []
  }
  if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS] {
   config BR2_PACKAGE_LIGHTTPD boolean {
    prompt "lighttpd" if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS]
    inherited [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS]
    if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_PACKAGE_LIGHTTPD] {
     menu "lighttpd packages" {
      depends on [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_PACKAGE_LIGHTTPD]
      config BR2_PACKAGE_LIGHTTPD_OPENSSL boolean {
       prompt "lighttpd openssl support" if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_PACKAGE_LIGHTTPD]
       depends on [BR2_PACKAGE_LIGHTTPD]
       select BR2_PACKAGE_OPENSSL if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_PACKAGE_LIGHTTPD]
       inherited [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_PACKAGE_LIGHTTPD]
      }
      config BR2_PACKAGE_LIGHTTPD_ZLIB boolean {
       prompt "lighttpd zlib support" if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_PACKAGE_LIGHTTPD]
       depends on [BR2_PACKAGE_LIGHTTPD]
       select BR2_PACKAGE_ZLIB if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_PACKAGE_LIGHTTPD]
       inherited [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_PACKAGE_LIGHTTPD]
      }
      config BR2_PACKAGE_LIGHTTPD_BZIP2 boolean {
       prompt "lighttpd bzip2 support" if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_PACKAGE_LIGHTTPD]
       depends on [BR2_PACKAGE_LIGHTTPD]
       select BR2_PACKAGE_BZIP2 if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_PACKAGE_LIGHTTPD]
       inherited [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_PACKAGE_LIGHTTPD]
      }
      config BR2_PACKAGE_LIGHTTPD_PCRE boolean {
       prompt "pcre" if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_PACKAGE_LIGHTTPD]
       depends on [BR2_PACKAGE_LIGHTTPD]
       select BR2_PACKAGE_PCRE if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_PACKAGE_LIGHTTPD]
       inherited [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_PACKAGE_LIGHTTPD]
      }
     }
    }
   }
  }
  config BR2_PACKAGE_LINKS boolean {
   prompt "links" if []
  }
  config BR2_PACKAGE_LRZSZ boolean {
   prompt "lrzsz" if []
  }
  if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS] {
   config BR2_PACKAGE_MICROCOM boolean {
    depends on [BR2_DEPRECATED]
    prompt "microcom" if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_DEPRECATED]
    inherited [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_DEPRECATED]
   }
  }
  config BR2_PACKAGE_MIIDIAG boolean {
   prompt "mii-diag" if []
  }
  config BR2_PACKAGE_MROUTED boolean {
   prompt "mrouted" if []
  }
  config BR2_PACKAGE_MUTT boolean {
   prompt "mutt" if [BR2_USE_WCHAR]
   depends on [BR2_USE_WCHAR]
   select BR2_PACKAGE_NCURSES if [BR2_USE_WCHAR]
   inherited [BR2_USE_WCHAR]
  }
  config BR2_PACKAGE_NBD boolean {
   prompt "nbd" if [BR2_USE_WCHAR]
   depends on [BR2_USE_WCHAR]
   select BR2_PACKAGE_LIBGLIB2 if [BR2_USE_WCHAR]
   inherited [BR2_USE_WCHAR]
  }
  if [BR2_PACKAGE_NBD] {
   config BR2_NBD_CLIENT boolean {
    prompt "nbd client" if [BR2_PACKAGE_NBD]
    default [y] if [BR2_PACKAGE_NBD]
    inherited [BR2_PACKAGE_NBD]
   }
   config BR2_NBD_SERVER boolean {
    prompt "nbd server" if [BR2_PACKAGE_NBD]
    inherited [BR2_PACKAGE_NBD]
   }
  }
  config BR2_PACKAGE_NCFTP boolean {
   prompt "ncftp" if [BR2_LARGEFILE]
   depends on [BR2_LARGEFILE]
   inherited [BR2_LARGEFILE]
   menu "ncFTP tools selection" {
    depends on [BR2_PACKAGE_NCFTP]
    config BR2_PACKAGE_NCFTP_GET boolean {
     prompt "NcFTPGet - command-line utility program" if [BR2_PACKAGE_NCFTP]
     default [y] if [BR2_PACKAGE_NCFTP]
     inherited [BR2_PACKAGE_NCFTP]
    }
    config BR2_PACKAGE_NCFTP_PUT boolean {
     prompt "NcFTPPut - command-line utility program" if [BR2_PACKAGE_NCFTP]
     default [y] if [BR2_PACKAGE_NCFTP]
     inherited [BR2_PACKAGE_NCFTP]
    }
    config BR2_PACKAGE_NCFTP_LS boolean {
     prompt "NcFTPLs - command-line utility program" if [BR2_PACKAGE_NCFTP]
     default [y] if [BR2_PACKAGE_NCFTP]
     inherited [BR2_PACKAGE_NCFTP]
    }
    config BR2_PACKAGE_NCFTP_BATCH boolean {
     prompt "NcFTPBatch & NcFTPSpooler - background FTP program for individual users" if [BR2_PACKAGE_NCFTP]
     default [y] if [BR2_PACKAGE_NCFTP]
     inherited [BR2_PACKAGE_NCFTP]
    }
    config BR2_PACKAGE_NCFTP_BOOKMARKS boolean {
     prompt "NcFTPBookmarks - ncurses based Bookmark Editor" if [BR2_PACKAGE_NCFTP]
     select BR2_PACKAGE_NCURSES if [BR2_PACKAGE_NCFTP]
     inherited [BR2_PACKAGE_NCFTP]
    }
   }
  }
  if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS] {
   config BR2_PACKAGE_NETCAT boolean {
    prompt "netcat" if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS]
    inherited [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS]
   }
   config BR2_PACKAGE_NETKITBASE boolean {
    prompt "netkitbase" if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_INET_RPC]
    depends on [BR2_INET_RPC]
    inherited [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_INET_RPC]
   }
   config BR2_PACKAGE_NETKITTELNET boolean {
    prompt "netkittelnet" if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_INET_RPC]
    depends on [BR2_INET_RPC]
    select BR2_PACKAGE_NETKITBASE if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_INET_RPC]
    inherited [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_INET_RPC]
   }
  }
  config BR2_PACKAGE_NETPLUG boolean {
   prompt "netplug" if []
  }
  config BR2_PACKAGE_NETSNMP boolean {
   prompt "netsnmp" if []
  }
  config BR2_PACKAGE_NETSTAT_NAT boolean {
   prompt "netstat-nat" if []
  }
  config BR2_PACKAGE_NFS_UTILS boolean {
   prompt "nfs-utils" if [BR2_INET_RPC]
   depends on [BR2_INET_RPC]
   inherited [BR2_INET_RPC]
  }
  menu "NFS utilities selection" {
   depends on [BR2_PACKAGE_NFS_UTILS]
   config BR2_PACKAGE_NFS_UTILS_RPCDEBUG boolean {
    prompt "rpcdebug" if [BR2_PACKAGE_NFS_UTILS]
    depends on [BR2_PACKAGE_NFS_UTILS]
    inherited [BR2_PACKAGE_NFS_UTILS]
   }
   config BR2_PACKAGE_NFS_UTILS_RPC_LOCKD boolean {
    prompt "rpc.lockd" if [BR2_PACKAGE_NFS_UTILS]
    depends on [BR2_PACKAGE_NFS_UTILS]
    inherited [BR2_PACKAGE_NFS_UTILS]
   }
   config BR2_PACKAGE_NFS_UTILS_RPC_RQUOTAD boolean {
    prompt "rpc.rquotad" if [BR2_PACKAGE_NFS_UTILS]
    depends on [BR2_PACKAGE_NFS_UTILS]
    inherited [BR2_PACKAGE_NFS_UTILS]
   }
  }
  config BR2_PACKAGE_NTP boolean {
   prompt "ntp" if []
   config BR2_PACKAGE_NTP_SNTP boolean {
    prompt "sntp" if [BR2_PACKAGE_NTP]
    depends on [BR2_PACKAGE_NTP]
    inherited [BR2_PACKAGE_NTP]
   }
   config BR2_PACKAGE_NTP_NTP_KEYGEN boolean {
    prompt "ntp-keygen" if [BR2_PACKAGE_NTP]
    depends on [BR2_PACKAGE_NTP]
    inherited [BR2_PACKAGE_NTP]
   }
   config BR2_PACKAGE_NTP_NTP_WAIT boolean {
    prompt "ntp-wait" if [BR2_PACKAGE_MICROPERL && BR2_PACKAGE_NTP]
    depends on [BR2_PACKAGE_MICROPERL]
    depends on [BR2_PACKAGE_NTP]
    inherited [BR2_PACKAGE_MICROPERL && BR2_PACKAGE_NTP]
   }
   config BR2_PACKAGE_NTP_NTPDC boolean {
    prompt "ntpdc" if [BR2_PACKAGE_NTP]
    depends on [BR2_PACKAGE_NTP]
    inherited [BR2_PACKAGE_NTP]
   }
   config BR2_PACKAGE_NTP_NTPQ boolean {
    prompt "ntpq" if [BR2_PACKAGE_NTP]
    depends on [BR2_PACKAGE_NTP]
    inherited [BR2_PACKAGE_NTP]
   }
   config BR2_PACKAGE_NTP_NTPTRACE boolean {
    prompt "ntptrace" if [BR2_PACKAGE_MICROPERL && BR2_PACKAGE_NTP]
    depends on [BR2_PACKAGE_MICROPERL]
    depends on [BR2_PACKAGE_NTP]
    inherited [BR2_PACKAGE_MICROPERL && BR2_PACKAGE_NTP]
   }
   config BR2_PACKAGE_NTP_TICKADJ boolean {
    prompt "tickadj" if [BR2_PACKAGE_NTP]
    depends on [BR2_PACKAGE_NTP]
    inherited [BR2_PACKAGE_NTP]
   }
  }
  config BR2_PACKAGE_OLSR boolean {
   prompt "OLSR mesh networking Daemon" if [BR2_INET_IPV6]
   depends on [BR2_INET_IPV6]
   inherited [BR2_INET_IPV6]
  }
  config BR2_PACKAGE_OPENNTPD boolean {
   prompt "OpenNTPD" if []
  }
  config BR2_PACKAGE_OPENSSH boolean {
   prompt "openssh" if []
   select BR2_PACKAGE_OPENSSL if []
   select BR2_PACKAGE_ZLIB if []
  }
  config BR2_PACKAGE_OPENVPN boolean {
   prompt "openvpn" if []
   config BR2_PACKAGE_OPENVPN_LZO boolean {
    prompt "LZO compression" if [BR2_PACKAGE_OPENVPN]
    default [y] if [BR2_PACKAGE_OPENVPN]
    depends on [BR2_PACKAGE_OPENVPN]
    select BR2_PACKAGE_LZO if [BR2_PACKAGE_OPENVPN]
    inherited [BR2_PACKAGE_OPENVPN]
   }
   config BR2_PACKAGE_OPENVPN_OPENSSL boolean {
    prompt "OpenSSL support" if [BR2_PACKAGE_OPENVPN]
    default [y] if [BR2_PACKAGE_OPENVPN]
    depends on [BR2_PACKAGE_OPENVPN]
    select BR2_PACKAGE_OPENSSL if [BR2_PACKAGE_OPENVPN]
    inherited [BR2_PACKAGE_OPENVPN]
   }
  }
  config BR2_PACKAGE_PORTMAP boolean {
   prompt "portmap" if [BR2_INET_RPC]
   depends on [BR2_INET_RPC]
   inherited [BR2_INET_RPC]
  }
  config BR2_PACKAGE_PPPD boolean {
   prompt "pppd" if []
   config BR2_PACKAGE_PPPD_FILTER boolean {
    depends on [BR2_PACKAGE_PPPD]
    select BR2_PACKAGE_LIBPCAP if [BR2_PACKAGE_PPPD]
    prompt "filtering" if [BR2_PACKAGE_PPPD]
    inherited [BR2_PACKAGE_PPPD]
   }
  }
  config BR2_PACKAGE_RADVD boolean {
   prompt "radvd" if [BR2_INET_IPV6]
   select BR2_PACKAGE_FLEX if [BR2_INET_IPV6]
   select BR2_PACKAGE_FLEX_LIBFL if [BR2_INET_IPV6]
   depends on [BR2_INET_IPV6]
   inherited [BR2_INET_IPV6]
  }
  config BR2_PACKAGE_RP_PPPOE boolean {
   prompt "pppoe" if [BR2_DEPRECATED]
   depends on [BR2_DEPRECATED]
   inherited [BR2_DEPRECATED]
  }
  config BR2_PACKAGE_PPTP_LINUX boolean {
   prompt "pptp-linux" if []
  }
  config BR2_PACKAGE_PROFTPD boolean {
   prompt "proftpd" if []
  }
  config BR2_PACKAGE_QUAGGA boolean {
   prompt "quagga" if []
   if [BR2_PACKAGE_QUAGGA] {
    config BR2_PACKAGE_QUAGGA_ZEBRA boolean {
     prompt "zebra daemon" if [BR2_PACKAGE_QUAGGA]
     inherited [BR2_PACKAGE_QUAGGA]
    }
    config BR2_PACKAGE_QUAGGA_BGPD boolean {
     prompt "bgpd support" if [BR2_PACKAGE_QUAGGA]
     inherited [BR2_PACKAGE_QUAGGA]
    }
    config BR2_PACKAGE_QUAGGA_RIPD boolean {
     prompt "ripd support" if [BR2_PACKAGE_QUAGGA]
     inherited [BR2_PACKAGE_QUAGGA]
    }
    config BR2_PACKAGE_QUAGGA_RIPNGD boolean {
     prompt "ripngd support" if [BR2_PACKAGE_QUAGGA && BR2_INET_IPV6]
     depends on [BR2_INET_IPV6]
     inherited [BR2_PACKAGE_QUAGGA && BR2_INET_IPV6]
    }
    config BR2_PACKAGE_QUAGGA_OSPFD boolean {
     prompt "ospfd support" if [BR2_PACKAGE_QUAGGA]
     inherited [BR2_PACKAGE_QUAGGA]
    }
    config BR2_PACKAGE_QUAGGA_OSPF6D boolean {
     prompt "ospf6d support" if [BR2_PACKAGE_QUAGGA && BR2_INET_IPV6]
     depends on [BR2_INET_IPV6]
     inherited [BR2_PACKAGE_QUAGGA && BR2_INET_IPV6]
    }
    config BR2_PACKAGE_QUAGGA_WATCHQUAGGA boolean {
     prompt "watchquagga support" if [BR2_PACKAGE_QUAGGA]
     inherited [BR2_PACKAGE_QUAGGA]
    }
    config BR2_PACKAGE_QUAGGA_ISISD boolean {
     prompt "isisd support" if [BR2_PACKAGE_QUAGGA]
     inherited [BR2_PACKAGE_QUAGGA]
    }
    config BR2_PACKAGE_QUAGGA_BGP_ANNOUNCE boolean {
     prompt "BGP route announcement" if [BR2_PACKAGE_QUAGGA]
     inherited [BR2_PACKAGE_QUAGGA]
    }
    config BR2_PACKAGE_QUAGGA_NETLINK boolean {
     prompt "use linux netlink interface" if [BR2_PACKAGE_QUAGGA]
     default [y] if [BR2_PACKAGE_QUAGGA]
     inherited [BR2_PACKAGE_QUAGGA]
    }
    config BR2_PACKAGE_QUAGGA_SNMP boolean {
     prompt "SNMP support" if [BR2_PACKAGE_QUAGGA && !BR2_TOOLCHAIN_EXTERNAL]
     depends on [!BR2_TOOLCHAIN_EXTERNAL]
     select BR2_PACKAGE_NETSNMP if [BR2_PACKAGE_QUAGGA && !BR2_TOOLCHAIN_EXTERNAL]
     inherited [BR2_PACKAGE_QUAGGA && !BR2_TOOLCHAIN_EXTERNAL]
    }
    config BR2_PACKAGE_QUAGGA_TCP_ZEBRA boolean {
     prompt "TCP/IP socket connection between zebra and proto daemon" if [BR2_PACKAGE_QUAGGA]
     inherited [BR2_PACKAGE_QUAGGA]
    }
    config BR2_PACKAGE_QUAGGA_OPAGUE_LSA boolean {
     prompt "OSPF Opaque-LSA with OSPFAPI support (RFC2370)" if [BR2_PACKAGE_QUAGGA]
     inherited [BR2_PACKAGE_QUAGGA]
    }
   }
  }
  config BR2_PACKAGE_RSYNC boolean {
   prompt "rsync" if []
  }
  config BR2_PACKAGE_SAMBA boolean {
   prompt "samba" if []
   select BR2_PACKAGE_LIBICONV if [!BR2_ENABLE_LOCALE]
   menu "Samba tools selection" {
    depends on [BR2_PACKAGE_SAMBA]
    config BR2_PACKAGE_SAMBA_CIFS boolean {
     prompt "cifs" if [BR2_PACKAGE_SAMBA]
     default [y] if [BR2_PACKAGE_SAMBA]
     depends on [BR2_PACKAGE_SAMBA]
     inherited [BR2_PACKAGE_SAMBA]
    }
    config BR2_PACKAGE_SAMBA_EVENTLOGADM boolean {
     prompt "eventlogadm" if [BR2_PACKAGE_SAMBA]
     default [y] if [BR2_PACKAGE_SAMBA]
     depends on [BR2_PACKAGE_SAMBA]
     inherited [BR2_PACKAGE_SAMBA]
    }
    config BR2_PACKAGE_SAMBA_FINDSMB boolean {
     prompt "findsmb" if [BR2_PACKAGE_SAMBA && BR2_PACKAGE_SAMBA_SMBCLIENT && BR2_PACKAGE_SAMBA_NMBLOOKUP && BR2_PACKAGE_MICROPERL]
     default [y] if [BR2_PACKAGE_SAMBA && BR2_PACKAGE_SAMBA_SMBCLIENT && BR2_PACKAGE_SAMBA_NMBLOOKUP && BR2_PACKAGE_MICROPERL]
     depends on [BR2_PACKAGE_SAMBA_SMBCLIENT]
     depends on [BR2_PACKAGE_SAMBA_NMBLOOKUP]
     depends on [BR2_PACKAGE_MICROPERL]
     inherited [BR2_PACKAGE_SAMBA && BR2_PACKAGE_SAMBA_SMBCLIENT && BR2_PACKAGE_SAMBA_NMBLOOKUP && BR2_PACKAGE_MICROPERL]
    }
    config BR2_PACKAGE_SAMBA_NET boolean {
     prompt "net" if [BR2_PACKAGE_SAMBA]
     default [y] if [BR2_PACKAGE_SAMBA]
     depends on [BR2_PACKAGE_SAMBA]
     inherited [BR2_PACKAGE_SAMBA]
    }
    config BR2_PACKAGE_SAMBA_NMBD boolean {
     prompt "nmbd" if [BR2_PACKAGE_SAMBA]
     default [y] if [BR2_PACKAGE_SAMBA]
     depends on [BR2_PACKAGE_SAMBA]
     inherited [BR2_PACKAGE_SAMBA]
    }
    config BR2_PACKAGE_SAMBA_NMBLOOKUP boolean {
     prompt "nmblookup" if [BR2_PACKAGE_SAMBA]
     default [y] if [BR2_PACKAGE_SAMBA]
     depends on [BR2_PACKAGE_SAMBA]
     inherited [BR2_PACKAGE_SAMBA]
    }
    config BR2_PACKAGE_SAMBA_NTLM_AUTH boolean {
     prompt "ntlm_auth" if [BR2_PACKAGE_SAMBA]
     default [y] if [BR2_PACKAGE_SAMBA]
     depends on [BR2_PACKAGE_SAMBA]
     inherited [BR2_PACKAGE_SAMBA]
    }
    config BR2_PACKAGE_SAMBA_PDBEDIT boolean {
     prompt "pdbedit" if [BR2_PACKAGE_SAMBA]
     default [y] if [BR2_PACKAGE_SAMBA]
     depends on [BR2_PACKAGE_SAMBA]
     inherited [BR2_PACKAGE_SAMBA]
    }
    config BR2_PACKAGE_SAMBA_PROFILES boolean {
     prompt "profiles" if [BR2_PACKAGE_SAMBA]
     default [y] if [BR2_PACKAGE_SAMBA]
     depends on [BR2_PACKAGE_SAMBA]
     inherited [BR2_PACKAGE_SAMBA]
    }
    config BR2_PACKAGE_SAMBA_RPCCLIENT boolean {
     prompt "rpcclient" if [BR2_PACKAGE_SAMBA]
     select BR2_PACKAGE_READLINE if [BR2_PACKAGE_SAMBA]
     default [y] if [BR2_PACKAGE_SAMBA]
     depends on [BR2_PACKAGE_SAMBA]
     inherited [BR2_PACKAGE_SAMBA]
    }
    config BR2_PACKAGE_SAMBA_SMBCACLS boolean {
     prompt "smbcacls" if [BR2_PACKAGE_SAMBA]
     default [y] if [BR2_PACKAGE_SAMBA]
     depends on [BR2_PACKAGE_SAMBA]
     inherited [BR2_PACKAGE_SAMBA]
    }
    config BR2_PACKAGE_SAMBA_SMBCLIENT boolean {
     prompt "smbclient" if [BR2_PACKAGE_SAMBA]
     select BR2_PACKAGE_READLINE if [BR2_PACKAGE_SAMBA]
     default [y] if [BR2_PACKAGE_SAMBA]
     depends on [BR2_PACKAGE_SAMBA]
     inherited [BR2_PACKAGE_SAMBA]
    }
    config BR2_PACKAGE_SAMBA_SMBCONTROL boolean {
     prompt "smbcontrol" if [BR2_PACKAGE_SAMBA]
     default [y] if [BR2_PACKAGE_SAMBA]
     depends on [BR2_PACKAGE_SAMBA]
     inherited [BR2_PACKAGE_SAMBA]
    }
    config BR2_PACKAGE_SAMBA_SMBCQUOTAS boolean {
     prompt "smbcquotas" if [BR2_PACKAGE_SAMBA]
     default [y] if [BR2_PACKAGE_SAMBA]
     depends on [BR2_PACKAGE_SAMBA]
     inherited [BR2_PACKAGE_SAMBA]
    }
    config BR2_PACKAGE_SAMBA_SMBGET boolean {
     prompt "smbget" if [BR2_PACKAGE_SAMBA]
     default [y] if [BR2_PACKAGE_SAMBA]
     depends on [BR2_PACKAGE_SAMBA]
     inherited [BR2_PACKAGE_SAMBA]
    }
    config BR2_PACKAGE_SAMBA_SMBLDBTOOLS boolean {
     prompt "smbldbtools" if [BR2_PACKAGE_SAMBA]
     default [y] if [BR2_PACKAGE_SAMBA]
     depends on [BR2_PACKAGE_SAMBA]
     inherited [BR2_PACKAGE_SAMBA]
    }
    config BR2_PACKAGE_SAMBA_SMBPASSWD boolean {
     prompt "smbpasswd" if [BR2_PACKAGE_SAMBA]
     default [y] if [BR2_PACKAGE_SAMBA]
     depends on [BR2_PACKAGE_SAMBA]
     inherited [BR2_PACKAGE_SAMBA]
    }
    config BR2_PACKAGE_SAMBA_SMBSHARESEC boolean {
     prompt "smbsharesec" if [BR2_PACKAGE_SAMBA]
     default [y] if [BR2_PACKAGE_SAMBA]
     depends on [BR2_PACKAGE_SAMBA]
     inherited [BR2_PACKAGE_SAMBA]
    }
    config BR2_PACKAGE_SAMBA_SMBSPOOL boolean {
     prompt "smbspool" if [BR2_PACKAGE_SAMBA]
     default [y] if [BR2_PACKAGE_SAMBA]
     depends on [BR2_PACKAGE_SAMBA]
     inherited [BR2_PACKAGE_SAMBA]
    }
    config BR2_PACKAGE_SAMBA_SMBSTATUS boolean {
     prompt "smbstatus" if [BR2_PACKAGE_SAMBA]
     default [y] if [BR2_PACKAGE_SAMBA]
     depends on [BR2_PACKAGE_SAMBA]
     inherited [BR2_PACKAGE_SAMBA]
    }
    config BR2_PACKAGE_SAMBA_SMBTREE boolean {
     prompt "smbtree" if [BR2_PACKAGE_SAMBA]
     default [y] if [BR2_PACKAGE_SAMBA]
     depends on [BR2_PACKAGE_SAMBA]
     inherited [BR2_PACKAGE_SAMBA]
    }
    config BR2_PACKAGE_SAMBA_SWAT boolean {
     prompt "swat" if [BR2_PACKAGE_SAMBA]
     default [y] if [BR2_PACKAGE_SAMBA]
     depends on [BR2_PACKAGE_SAMBA]
     inherited [BR2_PACKAGE_SAMBA]
    }
    config BR2_PACKAGE_SAMBA_SMBTAR boolean {
     prompt "smbtar" if [BR2_PACKAGE_SAMBA && BR2_PACKAGE_SAMBA_SMBCLIENT]
     default [y] if [BR2_PACKAGE_SAMBA && BR2_PACKAGE_SAMBA_SMBCLIENT]
     depends on [BR2_PACKAGE_SAMBA_SMBCLIENT]
     inherited [BR2_PACKAGE_SAMBA && BR2_PACKAGE_SAMBA_SMBCLIENT]
    }
    config BR2_PACKAGE_SAMBA_TDB boolean {
     prompt "tdb" if [BR2_PACKAGE_SAMBA]
     default [y] if [BR2_PACKAGE_SAMBA]
     depends on [BR2_PACKAGE_SAMBA]
     inherited [BR2_PACKAGE_SAMBA]
    }
    config BR2_PACKAGE_SAMBA_TESTPARM boolean {
     prompt "testparm" if [BR2_PACKAGE_SAMBA]
     default [y] if [BR2_PACKAGE_SAMBA]
     depends on [BR2_PACKAGE_SAMBA]
     inherited [BR2_PACKAGE_SAMBA]
    }
    config BR2_PACKAGE_SAMBA_WINBINDD boolean {
     prompt "winbindd" if [BR2_PACKAGE_SAMBA]
     default [y] if [BR2_PACKAGE_SAMBA]
     depends on [BR2_PACKAGE_SAMBA]
     inherited [BR2_PACKAGE_SAMBA]
     config BR2_PACKAGE_SAMBA_WBINFO boolean {
      prompt "wbinfo" if [BR2_PACKAGE_SAMBA && BR2_PACKAGE_SAMBA_WINBINDD]
      default [y] if [BR2_PACKAGE_SAMBA && BR2_PACKAGE_SAMBA_WINBINDD]
      depends on [BR2_PACKAGE_SAMBA_WINBINDD]
      inherited [BR2_PACKAGE_SAMBA && BR2_PACKAGE_SAMBA_WINBINDD]
     }
    }
   }
   menu "Samba libraries selection" {
    depends on [BR2_PACKAGE_SAMBA]
    config BR2_PACKAGE_SAMBA_LIBSMBCLIENT boolean {
     prompt "libsmbclient" if [BR2_PACKAGE_SAMBA]
     depends on [BR2_PACKAGE_SAMBA]
     inherited [BR2_PACKAGE_SAMBA]
    }
   }
   menu "Samba support selection" {
    depends on [BR2_PACKAGE_SAMBA]
    config BR2_PACKAGE_SAMBA_AVAHI boolean {
     prompt "support avahi" if [BR2_PACKAGE_SAMBA && BR2_PACKAGE_AVAHI_DAEMON && BR2_PACKAGE_DBUS]
     default [y] if [BR2_PACKAGE_SAMBA && BR2_PACKAGE_AVAHI_DAEMON && BR2_PACKAGE_DBUS]
     depends on [BR2_PACKAGE_SAMBA]
     depends on [BR2_PACKAGE_AVAHI_DAEMON]
     depends on [BR2_PACKAGE_DBUS]
     inherited [BR2_PACKAGE_SAMBA && BR2_PACKAGE_AVAHI_DAEMON && BR2_PACKAGE_DBUS]
    }
    config BR2_PACKAGE_SAMBA_GAMIN boolean {
     prompt "support gamin" if [BR2_PACKAGE_SAMBA && BR2_PACKAGE_GAMIN]
     default [y] if [BR2_PACKAGE_SAMBA && BR2_PACKAGE_GAMIN]
     depends on [BR2_PACKAGE_SAMBA]
     depends on [BR2_PACKAGE_GAMIN]
     inherited [BR2_PACKAGE_SAMBA && BR2_PACKAGE_GAMIN]
    }
   }
  }
  config BR2_PACKAGE_SER2NET boolean {
   prompt "ser2net" if []
  }
  menuconfig BR2_PACKAGE_SOCAT boolean {
   prompt "socat" if []
   if [BR2_PACKAGE_SOCAT] {
    config BR2_PACKAGE_SOCAT_PREDEF_CRDLY_SHIFT string {
     prompt "CRDLY_SHIFT" if [BR2_PACKAGE_SOCAT]
     default ["9"] if [BR2_PACKAGE_SOCAT]
     inherited [BR2_PACKAGE_SOCAT]
    }
    config BR2_PACKAGE_SOCAT_PREDEF_TABDLY_SHIFT string {
     prompt "TABDLY_SHIFT" if [BR2_PACKAGE_SOCAT]
     default ["11"] if [BR2_PACKAGE_SOCAT]
     inherited [BR2_PACKAGE_SOCAT]
    }
    config BR2_PACKAGE_SOCAT_PREDEF_CSIZE_SHIFT string {
     prompt "CSIZE_SHIFT" if [BR2_PACKAGE_SOCAT]
     default ["4"] if [BR2_PACKAGE_SOCAT]
     inherited [BR2_PACKAGE_SOCAT]
    }
   }
  }
  config BR2_PACKAGE_SPAWN_FCGI boolean {
   prompt "spawn-fcgi" if []
  }
  config BR2_PACKAGE_SQUID boolean {
   prompt "squid" if [BR2_INSTALL_LIBSTDCPP]
   depends on [BR2_INSTALL_LIBSTDCPP]
   inherited [BR2_INSTALL_LIBSTDCPP]
  }
  config BR2_PACKAGE_TCPDUMP boolean {
   prompt "tcpdump" if []
   select BR2_PACKAGE_LIBPCAP if []
   config BR2_PACKAGE_TCPDUMP_SMB boolean {
    prompt "smb dump support" if [BR2_PACKAGE_TCPDUMP]
    depends on [BR2_PACKAGE_TCPDUMP]
    inherited [BR2_PACKAGE_TCPDUMP]
   }
  }
  config BR2_PACKAGE_DHCPDUMP boolean {
   prompt "dhcpdump" if []
   select BR2_PACKAGE_LIBPCAP if []
  }
  config BR2_PACKAGE_TCPREPLAY boolean {
   prompt "tcpreplay" if []
   select BR2_PACKAGE_LIBPCAP if []
  }
  if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS] {
   config BR2_PACKAGE_TFTPD boolean {
    prompt "tftpd" if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS]
    inherited [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS]
   }
   config BR2_PACKAGE_THTTPD boolean {
    prompt "thttpd" if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS]
    inherited [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS]
   }
   config BR2_PACKAGE_TINYHTTPD boolean {
    prompt "tinyhttpd" if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS]
    inherited [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS]
   }
  }
  config BR2_PACKAGE_TN5250 boolean {
   prompt "tn5250" if []
   select BR2_PACKAGE_NCURSES if []
  }
  config BR2_PACKAGE_TTCP boolean {
   prompt "ttcp" if []
  }
  config BR2_PACKAGE_UDPCAST boolean {
   prompt "udpcast" if [BR2_LARGEFILE]
   depends on [BR2_LARGEFILE]
   inherited [BR2_LARGEFILE]
  }
  menu "udpcast tools selection" {
   depends on [BR2_PACKAGE_UDPCAST]
   config BR2_PACKAGE_UDPCAST_SENDER boolean {
    prompt "sender" if [BR2_PACKAGE_UDPCAST]
    depends on [BR2_PACKAGE_UDPCAST]
    inherited [BR2_PACKAGE_UDPCAST]
   }
   config BR2_PACKAGE_UDPCAST_RECEIVER boolean {
    prompt "receiver" if [BR2_PACKAGE_UDPCAST]
    depends on [BR2_PACKAGE_UDPCAST]
    inherited [BR2_PACKAGE_UDPCAST]
   }
  }
  config BR2_PACKAGE_VPNC boolean {
   prompt "vpnc" if []
   select BR2_PACKAGE_LIBGCRYPT if []
   select BR2_PACKAGE_LIBGPG_ERROR if []
  }
  config BR2_PACKAGE_VSFTPD boolean {
   prompt "vsftpd" if []
  }
  config BR2_PACKAGE_VTUN boolean {
   prompt "vtun - BEWARE: read package/vtun/README.txt before use" if []
   select BR2_PACKAGE_LZO if []
   select BR2_PACKAGE_OPENSSL if []
  }
  config BR2_PACKAGE_WEBIF boolean {
   prompt "webif - Status Console" if [BR2_PACKAGE_BUSYBOX]
   depends on [BR2_PACKAGE_BUSYBOX]
   select BR2_PACKAGE_HASERL if [BR2_PACKAGE_BUSYBOX]
   inherited [BR2_PACKAGE_BUSYBOX]
   config BR2_PACKAGE_WEBIF_INSTALL_INDEX_HTML boolean {
    prompt "instal index.html in /www which redirects to webif" if [BR2_PACKAGE_WEBIF]
    depends on [BR2_PACKAGE_WEBIF]
    inherited [BR2_PACKAGE_WEBIF]
   }
   config BR2_PACKAGE_WEBIF_LANGUAGES boolean {
    prompt "install language support" if [BR2_PACKAGE_WEBIF]
    depends on [BR2_PACKAGE_WEBIF]
    inherited [BR2_PACKAGE_WEBIF]
   }
  }
  if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS] {
   config BR2_PACKAGE_WGET boolean {
    prompt "wget" if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_USE_WCHAR]
    depends on [BR2_USE_WCHAR]
    inherited [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_USE_WCHAR]
   }
  }
  config BR2_PACKAGE_WIRELESS_TOOLS boolean {
   prompt "wireless tools" if []
  }
  config BR2_PACKAGE_WPA_SUPPLICANT boolean {
   prompt "wpa_supplicant" if []
   config BR2_PACKAGE_WPA_SUPPLICANT_EAP boolean {
    prompt "Enable WPA with EAP" if [BR2_PACKAGE_WPA_SUPPLICANT]
    depends on [BR2_PACKAGE_WPA_SUPPLICANT]
    inherited [BR2_PACKAGE_WPA_SUPPLICANT]
    config BR2_PACKAGE_WPA_SUPPLICANT_OPENSSL boolean {
     prompt "Use openssl TLS (recommended)" if [BR2_PACKAGE_WPA_SUPPLICANT && BR2_PACKAGE_WPA_SUPPLICANT_EAP]
     depends on [BR2_PACKAGE_WPA_SUPPLICANT && BR2_PACKAGE_WPA_SUPPLICANT_EAP]
     select BR2_PACKAGE_OPENSSL if [BR2_PACKAGE_WPA_SUPPLICANT && BR2_PACKAGE_WPA_SUPPLICANT_EAP]
     inherited [BR2_PACKAGE_WPA_SUPPLICANT && BR2_PACKAGE_WPA_SUPPLICANT_EAP]
    }
   }
   config BR2_PACKAGE_WPA_SUPPLICANT_CLI boolean {
    prompt "Install wpa_cli binary" if [BR2_PACKAGE_WPA_SUPPLICANT]
    depends on [BR2_PACKAGE_WPA_SUPPLICANT]
    inherited [BR2_PACKAGE_WPA_SUPPLICANT]
   }
   config BR2_PACKAGE_WPA_SUPPLICANT_PASSPHRASE boolean {
    prompt "Install wpa_passphrase binary" if [BR2_PACKAGE_WPA_SUPPLICANT]
    depends on [BR2_PACKAGE_WPA_SUPPLICANT]
    inherited [BR2_PACKAGE_WPA_SUPPLICANT]
   }
  }
 }
 menu "Package managers" {
  config BR2_PACKAGE_IPKG boolean {
   prompt "ipkg" if []
  }
  if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS] {
   config BR2_PACKAGE_RPM boolean {
    prompt "rpm" if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_PACKAGE_NEON && !BR2_PACKAGE_NEON_NOXML]
    select BR2_PACKAGE_BEECRYPT if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_PACKAGE_NEON && !BR2_PACKAGE_NEON_NOXML]
    select BR2_PACKAGE_POPT if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_PACKAGE_NEON && !BR2_PACKAGE_NEON_NOXML]
    select BR2_PACKAGE_OPENSSL if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_PACKAGE_NEON && !BR2_PACKAGE_NEON_NOXML]
    depends on [BR2_PACKAGE_NEON]
    depends on [!BR2_PACKAGE_NEON_NOXML]
    select BR2_PACKAGE_NEON_ZLIB if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_PACKAGE_NEON && !BR2_PACKAGE_NEON_NOXML]
    select BR2_PACKAGE_NEON_SSL if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_PACKAGE_NEON && !BR2_PACKAGE_NEON_NOXML]
    inherited [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_PACKAGE_NEON && !BR2_PACKAGE_NEON_NOXML]
    config BR2_PACKAGE_RPM_BZIP2_PAYLOADS boolean {
     prompt "support for bzip2 payloads" if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_PACKAGE_RPM]
     depends on [BR2_PACKAGE_RPM]
     select BR2_PACKAGE_BZIP2 if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_PACKAGE_RPM]
     inherited [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_PACKAGE_RPM]
    }
    config BR2_PACKAGE_RPM_XZ_PAYLOADS boolean {
     prompt "support for xz payloads" if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_PACKAGE_RPM && BR2_GCC_CROSS_CXX]
     depends on [BR2_PACKAGE_RPM]
     depends on [BR2_GCC_CROSS_CXX]
     inherited [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_PACKAGE_RPM && BR2_GCC_CROSS_CXX]
    }
   }
  }
 }
 menu "Shell and utilities" {
  config BR2_PACKAGE_AT boolean {
   prompt "at" if []
  }
  if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS] {
   config BR2_PACKAGE_BASH boolean {
    prompt "bash" if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS]
    select BR2_PACKAGE_NCURSES if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS]
    inherited [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS]
   }
   config BR2_PACKAGE_DASH boolean {
    prompt "dash" if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS]
    inherited [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS]
   }
  }
  config BR2_PACKAGE_DIALOG boolean {
   prompt "dialog" if []
   select BR2_PACKAGE_NCURSES if []
  }
  config BR2_PACKAGE_FILE boolean {
   prompt "file" if []
   select BR2_PACKAGE_ZLIB if []
  }
  config BR2_PACKAGE_LOCKFILE_PROGS boolean {
   prompt "lockfile programs" if []
   select BR2_PACKAGE_LIBLOCKFILE if []
  }
  config BR2_PACKAGE_LOGROTATE boolean {
   prompt "logrotate" if [BR2_USE_WCHAR]
   select BR2_PACKAGE_POPT if [BR2_USE_WCHAR]
   depends on [BR2_USE_WCHAR]
   inherited [BR2_USE_WCHAR]
  }
  config BR2_PACKAGE_SCREEN boolean {
   prompt "screen" if []
   select BR2_PACKAGE_NCURSES if []
  }
  config BR2_PACKAGE_SUDO boolean {
   prompt "sudo" if []
  }
  config BR2_PACKAGE_WHICH boolean {
   prompt "which" if []
  }
 }
 menu "System tools" {
  if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS] {
   config BR2_PACKAGE_BOOTUTILS boolean {
    prompt "bootutils" if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_LARGEFILE]
    depends on [BR2_LARGEFILE]
    inherited [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_LARGEFILE]
   }
   config BR2_PACKAGE_MODULE_INIT_TOOLS boolean {
    prompt "module-init-tools" if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS]
    inherited [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS]
   }
   config BR2_PACKAGE_PROCPS boolean {
    prompt "procps" if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS]
    select BR2_PACKAGE_NCURSES if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS]
    inherited [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS]
   }
   config BR2_PACKAGE_PSMISC boolean {
    prompt "psmisc" if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS]
    select BR2_PACKAGE_NCURSES if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS]
    select BR2_PACKAGE_GETTEXT if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_NEEDS_GETTEXT_IF_LOCALE]
    select BR2_PACKAGE_LIBINTL if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_NEEDS_GETTEXT_IF_LOCALE]
    inherited [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS]
   }
   config BR2_PACKAGE_SYSKLOGD boolean {
    prompt "syslogd & klogd" if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_LARGEFILE]
    depends on [BR2_LARGEFILE]
    inherited [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_LARGEFILE]
   }
   config BR2_PACKAGE_SYSVINIT boolean {
    prompt "sysvinit" if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS]
    inherited [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS]
   }
   config BR2_PACKAGE_UTIL-LINUX boolean {
    prompt "util-linux" if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_INET_RPC]
    select BR2_PACKAGE_GETTEXT if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_INET_RPC && BR2_NEEDS_GETTEXT_IF_LOCALE]
    select BR2_PACKAGE_LIBINTL if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_INET_RPC && BR2_NEEDS_GETTEXT_IF_LOCALE]
    depends on [BR2_INET_RPC]
    inherited [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_INET_RPC]
   }
  }
 }
 menu "Text editors and viewers" {
  config BR2_PACKAGE_ED boolean {
   prompt "ed" if []
  }
  if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS] {
   config BR2_PACKAGE_LESS boolean {
    prompt "less" if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS]
    select BR2_PACKAGE_NCURSES if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS]
    inherited [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS]
   }
  }
  config BR2_PACKAGE_NANO boolean {
   prompt "nano" if []
   select BR2_PACKAGE_NCURSES if []
  }
  config BR2_PACKAGE_UEMACS boolean {
   prompt "uemacs" if []
   select BR2_PACKAGE_NCURSES if []
  }
  if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS] {
   config BR2_PACKAGE_VIM boolean {
    prompt "vim" if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS]
    select BR2_PACKAGE_NCURSES if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS]
    inherited [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS]
    config BR2_PACKAGE_VIM_RUNTIME boolean {
     prompt "install runtime" if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_PACKAGE_VIM]
     default [y] if [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_PACKAGE_VIM]
     depends on [BR2_PACKAGE_VIM]
     inherited [BR2_PACKAGE_BUSYBOX_SHOW_OTHERS && BR2_PACKAGE_VIM]
    }
   }
  }
 }
}
menu "Target filesystem options" {
 config BR2_ROOTFS_POST_BUILD_SCRIPT string {
  prompt "Custom script to run before packing files" if []
  default [""] if []
 }
 config BR2_ROOTFS_DEVICE_TABLE string {
  prompt "Path to the device table" if []
  default ["target/generic/device_table.txt"] if []
 }
 choice boolean {
  prompt "Root FS skeleton" if []
  config BR2_ROOTFS_SKELETON_DEFAULT boolean {
   prompt "default target skeleton" if [<choice>]
   inherited [<choice>]
  }
  config BR2_ROOTFS_SKELETON_CUSTOM boolean {
   prompt "custom target skeleton" if [<choice>]
   inherited [<choice>]
  }
 }
 if [BR2_ROOTFS_SKELETON_CUSTOM] {
  config BR2_ROOTFS_SKELETON_CUSTOM_PATH string {
   prompt "custom target skeleton path" if [BR2_ROOTFS_SKELETON_CUSTOM]
   default ["fs/skeleton"] if [BR2_ROOTFS_SKELETON_CUSTOM]
   inherited [BR2_ROOTFS_SKELETON_CUSTOM]
  }
 }
 config BR2_TARGET_ROOTFS_CRAMFS boolean {
  prompt "cramfs root filesystem" if []
 }
 config BR2_TARGET_ROOTFS_CLOOP boolean {
  prompt "cloop root filesystem for the target device" if []
 }
 config BR2_TARGET_ROOTFS_EXT2 boolean {
  prompt "ext2 root filesystem" if []
  default [y] if []
  config BR2_TARGET_ROOTFS_EXT2_BLOCKS integer {
   prompt "size in blocks (leave at 0 for auto calculation)" if [BR2_TARGET_ROOTFS_EXT2]
   depends on [BR2_TARGET_ROOTFS_EXT2]
   default [0] if [BR2_TARGET_ROOTFS_EXT2]
   inherited [BR2_TARGET_ROOTFS_EXT2]
  }
  config BR2_TARGET_ROOTFS_EXT2_INODES integer {
   prompt "inodes (leave at 0 for auto calculation)" if [BR2_TARGET_ROOTFS_EXT2]
   depends on [BR2_TARGET_ROOTFS_EXT2]
   default [0] if [BR2_TARGET_ROOTFS_EXT2]
   inherited [BR2_TARGET_ROOTFS_EXT2]
  }
  config BR2_TARGET_ROOTFS_EXT2_RESBLKS integer {
   prompt "reserved blocks percentage" if [BR2_TARGET_ROOTFS_EXT2]
   depends on [BR2_TARGET_ROOTFS_EXT2]
   default [0] if [BR2_TARGET_ROOTFS_EXT2]
   inherited [BR2_TARGET_ROOTFS_EXT2]
  }
  config BR2_TARGET_ROOTFS_EXT2_SQUASH boolean {
   prompt "Make all files be owned by root" if [BR2_TARGET_ROOTFS_EXT2]
   depends on [BR2_TARGET_ROOTFS_EXT2]
   default [y] if [BR2_TARGET_ROOTFS_EXT2]
   inherited [BR2_TARGET_ROOTFS_EXT2]
  }
  choice boolean {
   prompt "Compression method" if [BR2_TARGET_ROOTFS_EXT2]
   default [BR2_TARGET_ROOTFS_EXT2_NONE] if [BR2_TARGET_ROOTFS_EXT2]
   depends on [BR2_TARGET_ROOTFS_EXT2]
   config BR2_TARGET_ROOTFS_EXT2_NONE boolean {
    prompt "no compression" if [<choice>]
    inherited [<choice>]
   }
   config BR2_TARGET_ROOTFS_EXT2_GZIP boolean {
    prompt "gzip" if [<choice>]
    inherited [<choice>]
   }
   config BR2_TARGET_ROOTFS_EXT2_BZIP2 boolean {
    prompt "bzip2" if [<choice>]
    inherited [<choice>]
   }
   config BR2_TARGET_ROOTFS_EXT2_LZMA boolean {
    prompt "lzma" if [<choice>]
    inherited [<choice>]
   }
  }
 }
 config BR2_TARGET_ROOTFS_JFFS2 boolean {
  prompt "jffs2 root filesystem" if []
  if [BR2_TARGET_ROOTFS_JFFS2] {
   choice boolean {
    prompt "Flash Type" if [BR2_TARGET_ROOTFS_JFFS2]
    default [BR2_TARGET_ROOTFS_JFFS2_FLASH_128] if [BR2_TARGET_ROOTFS_JFFS2]
    config BR2_TARGET_ROOTFS_JFFS2_DATAFLASH_1056 boolean {
     prompt "AT45 dataflash with 1056 byte pagesize" if [<choice>]
     select BR2_TARGET_ROOTFS_JFFS2_NOCLEANMARKER if [<choice>]
     inherited [<choice>]
    }
    config BR2_TARGET_ROOTFS_JFFS2_DATAFLASH_528 boolean {
     prompt "AT45 dataflash with 528 byte pagesize" if [<choice>]
     select BR2_TARGET_ROOTFS_JFFS2_NOCLEANMARKER if [<choice>]
     inherited [<choice>]
    }
    config BR2_TARGET_ROOTFS_JFFS2_NANDFLASH_512_16K boolean {
     prompt "NAND flash with 512B Page and 16 kB erasesize" if [<choice>]
     select BR2_TARGET_ROOTFS_JFFS2_NOCLEANMARKER if [<choice>]
     inherited [<choice>]
    }
    config BR2_TARGET_ROOTFS_JFFS2_NANDFLASH_2K_128K boolean {
     prompt "NAND flash with 2kB Page and 128 kB erasesize" if [<choice>]
     select BR2_TARGET_ROOTFS_JFFS2_NOCLEANMARKER if [<choice>]
     inherited [<choice>]
    }
    config BR2_TARGET_ROOTFS_JFFS2_FLASH_128 boolean {
     prompt "Parallel flash with 4 kB pagesize and 128 kB erase size" if [<choice>]
     inherited [<choice>]
    }
    config BR2_TARGET_ROOTFS_JFFS2_FLASH_64 boolean {
     prompt "Parallel flash with 4 kB pagesize and 64 kB erase size" if [<choice>]
     inherited [<choice>]
    }
    config BR2_TARGET_ROOTFS_JFFS2_CUSTOM boolean {
     prompt "Select custom page and erase size" if [<choice>]
     inherited [<choice>]
    }
   }
   config BR2_TARGET_ROOTFS_JFFS2_CUSTOM_PAGESIZE hex {
    prompt "Page Size" if [BR2_TARGET_ROOTFS_JFFS2 && BR2_TARGET_ROOTFS_JFFS2_CUSTOM]
    depends on [BR2_TARGET_ROOTFS_JFFS2_CUSTOM]
    default [0x1000] if [BR2_TARGET_ROOTFS_JFFS2 && BR2_TARGET_ROOTFS_JFFS2_CUSTOM]
    inherited [BR2_TARGET_ROOTFS_JFFS2 && BR2_TARGET_ROOTFS_JFFS2_CUSTOM]
   }
   config BR2_TARGET_ROOTFS_JFFS2_CUSTOM_EBSIZE hex {
    prompt "Erase block size" if [BR2_TARGET_ROOTFS_JFFS2 && BR2_TARGET_ROOTFS_JFFS2_CUSTOM]
    depends on [BR2_TARGET_ROOTFS_JFFS2_CUSTOM]
    default [0x20000] if [BR2_TARGET_ROOTFS_JFFS2 && BR2_TARGET_ROOTFS_JFFS2_CUSTOM]
    inherited [BR2_TARGET_ROOTFS_JFFS2 && BR2_TARGET_ROOTFS_JFFS2_CUSTOM]
   }
   config BR2_TARGET_ROOTFS_JFFS2_PAGESIZE hex {
    default [0x420] if [BR2_TARGET_ROOTFS_JFFS2 && BR2_TARGET_ROOTFS_JFFS2_DATAFLASH_1056]
    default [0x210] if [BR2_TARGET_ROOTFS_JFFS2 && BR2_TARGET_ROOTFS_JFFS2_DATAFLASH_528]
    default [0x200] if [BR2_TARGET_ROOTFS_JFFS2 && BR2_TARGET_ROOTFS_JFFS2_NANDFLASH_512_16K]
    default [0x800] if [BR2_TARGET_ROOTFS_JFFS2 && BR2_TARGET_ROOTFS_JFFS2_NANDFLASH_2K_128K]
    default [0x1000] if [BR2_TARGET_ROOTFS_JFFS2 && BR2_TARGET_ROOTFS_JFFS2_FLASH_128]
    default [0x1000] if [BR2_TARGET_ROOTFS_JFFS2 && BR2_TARGET_ROOTFS_JFFS2_FLASH_64]
    default [BR2_TARGET_ROOTFS_JFFS2_CUSTOM_PAGESIZE] if [BR2_TARGET_ROOTFS_JFFS2 && BR2_TARGET_ROOTFS_JFFS2_CUSTOM]
    inherited [BR2_TARGET_ROOTFS_JFFS2]
   }
   config BR2_TARGET_ROOTFS_JFFS2_EBSIZE hex {
    default [0x2100] if [BR2_TARGET_ROOTFS_JFFS2 && BR2_TARGET_ROOTFS_JFFS2_DATAFLASH_1056]
    default [0x1080] if [BR2_TARGET_ROOTFS_JFFS2 && BR2_TARGET_ROOTFS_JFFS2_DATAFLASH_528]
    default [0x4000] if [BR2_TARGET_ROOTFS_JFFS2 && BR2_TARGET_ROOTFS_JFFS2_NANDFLASH_512_16K]
    default [0x20000] if [BR2_TARGET_ROOTFS_JFFS2 && BR2_TARGET_ROOTFS_JFFS2_NANDFLASH_2K_128K]
    default [0x20000] if [BR2_TARGET_ROOTFS_JFFS2 && BR2_TARGET_ROOTFS_JFFS2_FLASH_128]
    default [0x10000] if [BR2_TARGET_ROOTFS_JFFS2 && BR2_TARGET_ROOTFS_JFFS2_FLASH_64]
    default [BR2_TARGET_ROOTFS_JFFS2_CUSTOM_EBSIZE] if [BR2_TARGET_ROOTFS_JFFS2 && BR2_TARGET_ROOTFS_JFFS2_CUSTOM]
    inherited [BR2_TARGET_ROOTFS_JFFS2]
   }
   config BR2_TARGET_ROOTFS_JFFS2_NOCLEANMARKER boolean {
    prompt "Do not use Cleanmarker" if [BR2_TARGET_ROOTFS_JFFS2]
    default [y] if [BR2_TARGET_ROOTFS_JFFS2 && BR2_TARGET_ROOTFS_JFFS2_DATAFLASH_1056]
    default [y] if [BR2_TARGET_ROOTFS_JFFS2 && BR2_TARGET_ROOTFS_JFFS2_DATAFLASH_528]
    default [y] if [BR2_TARGET_ROOTFS_JFFS2 && BR2_TARGET_ROOTFS_JFFS2_NANDFLASH_512_16K]
    default [y] if [BR2_TARGET_ROOTFS_JFFS2 && BR2_TARGET_ROOTFS_JFFS2_NANDFLASH_2K_128K]
    inherited [BR2_TARGET_ROOTFS_JFFS2]
   }
   config BR2_JFFS2_TARGET_SREC boolean {
    prompt "RootFS in SREC file format" if [BR2_TARGET_ROOTFS_JFFS2]
    inherited [BR2_TARGET_ROOTFS_JFFS2]
   }
   config BR2_TARGET_ROOTFS_JFFS2_PAD boolean {
    prompt "Pad output" if [BR2_TARGET_ROOTFS_JFFS2]
    inherited [BR2_TARGET_ROOTFS_JFFS2]
    config BR2_TARGET_ROOTFS_JFFS2_PADSIZE hex {
     prompt "Pad output size (0x0 = to end of EB)" if [BR2_TARGET_ROOTFS_JFFS2 && BR2_TARGET_ROOTFS_JFFS2_PAD]
     depends on [BR2_TARGET_ROOTFS_JFFS2_PAD]
     default [0x0] if [BR2_TARGET_ROOTFS_JFFS2 && BR2_TARGET_ROOTFS_JFFS2_PAD]
     inherited [BR2_TARGET_ROOTFS_JFFS2 && BR2_TARGET_ROOTFS_JFFS2_PAD]
    }
   }
   choice boolean {
    prompt "Endianess" if [BR2_TARGET_ROOTFS_JFFS2]
    default [BR2_TARGET_ROOTFS_JFFS2_BE] if [BR2_TARGET_ROOTFS_JFFS2 && (BR2_alpha || BR2_armeb || BR2_avr32 || BR2_m68k || BR2_mips || BR2_powerpc || BR2_sh2a_nofpueb || BR2_sh2eb || BR2_sh3eb || BR2_sh4eb || BR2_sparc || BR2_sparc64)]
    config BR2_TARGET_ROOTFS_JFFS2_LE boolean {
     prompt "little-endian" if [<choice>]
     inherited [<choice>]
    }
    config BR2_TARGET_ROOTFS_JFFS2_BE boolean {
     prompt "big-endian" if [<choice>]
     inherited [<choice>]
    }
   }
   config BR2_TARGET_ROOTFS_JFFS2_SUMMARY boolean {
    prompt "Produce a summarized JFFS2 image" if [BR2_TARGET_ROOTFS_JFFS2]
    inherited [BR2_TARGET_ROOTFS_JFFS2]
   }
  }
 }
 config BR2_TARGET_ROOTFS_UBIFS boolean {
  prompt "ubifs root filesystem" if []
  config BR2_TARGET_ROOTFS_UBIFS_LEBSIZE hex {
   prompt "UBI logical erase block size" if [BR2_TARGET_ROOTFS_UBIFS]
   depends on [BR2_TARGET_ROOTFS_UBIFS]
   default [0x1f800] if [BR2_TARGET_ROOTFS_UBIFS]
   inherited [BR2_TARGET_ROOTFS_UBIFS]
  }
  config BR2_TARGET_ROOTFS_UBIFS_MINIOSIZE hex {
   prompt "UBI minimum I/O size" if [BR2_TARGET_ROOTFS_UBIFS]
   depends on [BR2_TARGET_ROOTFS_UBIFS]
   default [0x800] if [BR2_TARGET_ROOTFS_UBIFS]
   inherited [BR2_TARGET_ROOTFS_UBIFS]
  }
  config BR2_TARGET_ROOTFS_UBIFS_MAXLEBCNT integer {
   prompt "Maximum LEB count" if [BR2_TARGET_ROOTFS_UBIFS]
   depends on [BR2_TARGET_ROOTFS_UBIFS]
   default [2048] if [BR2_TARGET_ROOTFS_UBIFS]
   inherited [BR2_TARGET_ROOTFS_UBIFS]
  }
  choice boolean {
   prompt "ubifs runtime compression" if [BR2_TARGET_ROOTFS_UBIFS]
   default [BR2_TARGET_ROOTFS_UBIFS_RT_LZO] if [BR2_TARGET_ROOTFS_UBIFS]
   depends on [BR2_TARGET_ROOTFS_UBIFS]
   config BR2_TARGET_ROOTFS_UBIFS_RT_NONE boolean {
    prompt "no compression" if [<choice>]
    inherited [<choice>]
   }
   config BR2_TARGET_ROOTFS_UBIFS_RT_ZLIB boolean {
    prompt "gzip" if [<choice>]
    inherited [<choice>]
   }
   config BR2_TARGET_ROOTFS_UBIFS_RT_LZO boolean {
    prompt "lzo" if [<choice>]
    inherited [<choice>]
   }
  }
  choice boolean {
   prompt "Compression method" if [BR2_TARGET_ROOTFS_UBIFS]
   default [BR2_TARGET_ROOTFS_UBIFS_NONE] if [BR2_TARGET_ROOTFS_UBIFS]
   depends on [BR2_TARGET_ROOTFS_UBIFS]
   config BR2_TARGET_ROOTFS_UBIFS_NONE boolean {
    prompt "no compression" if [<choice>]
    inherited [<choice>]
   }
   config BR2_TARGET_ROOTFS_UBIFS_GZIP boolean {
    prompt "gzip" if [<choice>]
    inherited [<choice>]
   }
   config BR2_TARGET_ROOTFS_UBIFS_BZIP2 boolean {
    prompt "bzip2" if [<choice>]
    inherited [<choice>]
   }
   config BR2_TARGET_ROOTFS_UBIFS_LZMA boolean {
    prompt "lzma" if [<choice>]
    inherited [<choice>]
   }
  }
 }
 config BR2_TARGET_ROOTFS_SQUASHFS boolean {
  prompt "squashfs root filesystem" if []
  if [BR2_TARGET_ROOTFS_SQUASHFS] {
   choice boolean {
    prompt "SquashFS version" if [BR2_TARGET_ROOTFS_SQUASHFS]
    default [BR2_TARGET_ROOTFS_SQUASHFS4] if [BR2_TARGET_ROOTFS_SQUASHFS]
    config BR2_TARGET_ROOTFS_SQUASHFS4 boolean {
     prompt "4.x" if [<choice>]
     inherited [<choice>]
    }
    config BR2_TARGET_ROOTFS_SQUASHFS3 boolean {
     depends on [BR2_DEPRECATED]
     prompt "3.x" if [<choice> && BR2_DEPRECATED]
     inherited [<choice> && BR2_DEPRECATED]
    }
   }
   choice boolean {
    prompt "Compression algorithm" if [BR2_TARGET_ROOTFS_SQUASHFS && BR2_TARGET_ROOTFS_SQUASHFS4]
    default [BR2_TARGET_ROOTFS_SQUASHFS4_GZIP] if [BR2_TARGET_ROOTFS_SQUASHFS && BR2_TARGET_ROOTFS_SQUASHFS4]
    depends on [BR2_TARGET_ROOTFS_SQUASHFS4]
    config BR2_TARGET_ROOTFS_SQUASHFS4_GZIP boolean {
     prompt "gzip" if [<choice>]
     inherited [<choice>]
    }
    config BR2_TARGET_ROOTFS_SQUASHFS4_LZMA boolean {
     prompt "lzma" if [<choice>]
     inherited [<choice>]
    }
    config BR2_TARGET_ROOTFS_SQUASHFS4_LZO boolean {
     prompt "lzo" if [<choice>]
     inherited [<choice>]
    }
   }
  }
 }
 config BR2_TARGET_ROOTFS_TAR boolean {
  prompt "tar the root filesystem" if []
  choice boolean {
   prompt "Compression method" if [BR2_TARGET_ROOTFS_TAR]
   default [BR2_TARGET_ROOTFS_TAR_NONE] if [BR2_TARGET_ROOTFS_TAR]
   depends on [BR2_TARGET_ROOTFS_TAR]
   config BR2_TARGET_ROOTFS_TAR_NONE boolean {
    prompt "no compression" if [<choice>]
    inherited [<choice>]
   }
   config BR2_TARGET_ROOTFS_TAR_GZIP boolean {
    prompt "gzip" if [<choice>]
    inherited [<choice>]
   }
   config BR2_TARGET_ROOTFS_TAR_BZIP2 boolean {
    prompt "bzip2" if [<choice>]
    inherited [<choice>]
   }
   config BR2_TARGET_ROOTFS_TAR_LZMA boolean {
    prompt "lzma" if [<choice>]
    inherited [<choice>]
   }
  }
  config BR2_TARGET_ROOTFS_TAR_OPTIONS string {
   prompt "other random options to pass to tar" if [BR2_TARGET_ROOTFS_TAR]
   depends on [BR2_TARGET_ROOTFS_TAR]
   default [""] if [BR2_TARGET_ROOTFS_TAR]
   inherited [BR2_TARGET_ROOTFS_TAR]
  }
 }
 config BR2_TARGET_ROOTFS_CPIO boolean {
  prompt "cpio the root filesystem" if []
  choice boolean {
   prompt "Compression method" if [BR2_TARGET_ROOTFS_CPIO]
   default [BR2_TARGET_ROOTFS_CPIO_NONE] if [BR2_TARGET_ROOTFS_CPIO]
   depends on [BR2_TARGET_ROOTFS_CPIO]
   config BR2_TARGET_ROOTFS_CPIO_NONE boolean {
    prompt "no compression" if [<choice>]
    inherited [<choice>]
   }
   config BR2_TARGET_ROOTFS_CPIO_GZIP boolean {
    prompt "gzip" if [<choice>]
    inherited [<choice>]
   }
   config BR2_TARGET_ROOTFS_CPIO_BZIP2 boolean {
    prompt "bzip2" if [<choice>]
    inherited [<choice>]
   }
   config BR2_TARGET_ROOTFS_CPIO_LZMA boolean {
    prompt "lzma" if [<choice>]
    inherited [<choice>]
   }
  }
 }
 config BR2_TARGET_ROOTFS_ISO9660 boolean {
  prompt "iso image" if [(BR2_i386 || BR2_x86_64) && BR2_LINUX_KERNEL]
  depends on [BR2_i386 || BR2_x86_64]
  depends on [BR2_LINUX_KERNEL]
  select BR2_TARGET_ROOTFS_EXT2 if [(BR2_i386 || BR2_x86_64) && BR2_LINUX_KERNEL]
  select BR2_TARGET_GRUB if [(BR2_i386 || BR2_x86_64) && BR2_LINUX_KERNEL]
  inherited [(BR2_i386 || BR2_x86_64) && BR2_LINUX_KERNEL]
  config BR2_TARGET_ROOTFS_ISO9660_BOOT_MENU string {
   prompt "Boot menu.lst file" if [BR2_TARGET_ROOTFS_ISO9660]
   depends on [BR2_TARGET_ROOTFS_ISO9660]
   default ["fs/iso9660/menu.lst"] if [BR2_TARGET_ROOTFS_ISO9660]
   inherited [BR2_TARGET_ROOTFS_ISO9660]
  }
 }
 config BR2_TARGET_ROOTFS_INITRAMFS boolean {
  prompt "initramfs for initial ramdisk of linux kernel" if [BR2_LINUX_KERNEL]
  depends on [BR2_LINUX_KERNEL]
  inherited [BR2_LINUX_KERNEL]
 }
 config BR2_TARGET_ROOTFS_ROMFS boolean {
  prompt "romfs root filesystem" if []
 }
}
menu "Bootloaders" {
 menuconfig BR2_TARGET_BAREBOX boolean {
  prompt "Barebox" if []
  if [BR2_TARGET_BAREBOX] {
   config BR2_TARGET_BAREBOX_BOARD_DEFCONFIG string {
    prompt "board defconfig" if [BR2_TARGET_BAREBOX]
    inherited [BR2_TARGET_BAREBOX]
   }
  }
 }
 config BR2_TARGET_GRUB boolean {
  prompt "grub" if [BR2_i386 || BR2_x86_64]
  depends on [BR2_i386 || BR2_x86_64]
  inherited [BR2_i386 || BR2_x86_64]
  config BR2_TARGET_GRUB_SPLASH boolean {
   prompt "Splashimage support" if [BR2_TARGET_GRUB]
   depends on [BR2_TARGET_GRUB]
   inherited [BR2_TARGET_GRUB]
  }
  config BR2_TARGET_GRUB_DISKLESS boolean {
   prompt "diskless support" if [BR2_TARGET_GRUB]
   depends on [BR2_TARGET_GRUB]
   inherited [BR2_TARGET_GRUB]
  }
  config BR2_TARGET_GRUB_3c595 boolean {
   prompt "3Com595 driver" if [BR2_TARGET_GRUB]
   depends on [BR2_TARGET_GRUB]
   inherited [BR2_TARGET_GRUB]
  }
  config BR2_TARGET_GRUB_3c90x boolean {
   prompt "3Com90x driver" if [BR2_TARGET_GRUB]
   depends on [BR2_TARGET_GRUB]
   inherited [BR2_TARGET_GRUB]
  }
  config BR2_TARGET_GRUB_davicom boolean {
   prompt "Davicom driver" if [BR2_TARGET_GRUB]
   depends on [BR2_TARGET_GRUB]
   inherited [BR2_TARGET_GRUB]
  }
  config BR2_TARGET_GRUB_e1000 boolean {
   prompt "Etherexpress Pro/1000 driver" if [BR2_TARGET_GRUB]
   depends on [BR2_TARGET_GRUB]
   inherited [BR2_TARGET_GRUB]
  }
  config BR2_TARGET_GRUB_eepro100 boolean {
   prompt "Etherexpress Pro/100 driver" if [BR2_TARGET_GRUB]
   depends on [BR2_TARGET_GRUB]
   inherited [BR2_TARGET_GRUB]
  }
  config BR2_TARGET_GRUB_epic100 boolean {
   prompt "SMC 83c170 EPIC/100 driver" if [BR2_TARGET_GRUB]
   depends on [BR2_TARGET_GRUB]
   inherited [BR2_TARGET_GRUB]
  }
  config BR2_TARGET_GRUB_forcedeth boolean {
   prompt "Nvidia Geforce driver" if [BR2_TARGET_GRUB]
   depends on [BR2_TARGET_GRUB]
   inherited [BR2_TARGET_GRUB]
  }
  config BR2_TARGET_GRUB_natsemi boolean {
   prompt "NatSemi DP8381x driver" if [BR2_TARGET_GRUB]
   depends on [BR2_TARGET_GRUB]
   inherited [BR2_TARGET_GRUB]
  }
  config BR2_TARGET_GRUB_ns83820 boolean {
   prompt "NS83820 driver" if [BR2_TARGET_GRUB]
   depends on [BR2_TARGET_GRUB]
   inherited [BR2_TARGET_GRUB]
  }
  config BR2_TARGET_GRUB_ns8390 boolean {
   prompt "NE2000 PCI driver" if [BR2_TARGET_GRUB]
   depends on [BR2_TARGET_GRUB]
   inherited [BR2_TARGET_GRUB]
  }
  config BR2_TARGET_GRUB_pcnet32 boolean {
   prompt "AMD Lance/PCI PCNet/32 driver" if [BR2_TARGET_GRUB]
   depends on [BR2_TARGET_GRUB]
   inherited [BR2_TARGET_GRUB]
  }
  config BR2_TARGET_GRUB_pnic boolean {
   prompt "Bochs Pseudo Nic driver" if [BR2_TARGET_GRUB]
   depends on [BR2_TARGET_GRUB]
   inherited [BR2_TARGET_GRUB]
  }
  config BR2_TARGET_GRUB_rtl8139 boolean {
   prompt "Realtek 8139 driver" if [BR2_TARGET_GRUB]
   depends on [BR2_TARGET_GRUB]
   inherited [BR2_TARGET_GRUB]
  }
  config BR2_TARGET_GRUB_r8169 boolean {
   prompt "Realtek 8169 driver" if [BR2_TARGET_GRUB]
   depends on [BR2_TARGET_GRUB]
   inherited [BR2_TARGET_GRUB]
  }
  config BR2_TARGET_GRUB_sis900 boolean {
   prompt "SIS 900 and SIS 7016 driver" if [BR2_TARGET_GRUB]
   depends on [BR2_TARGET_GRUB]
   inherited [BR2_TARGET_GRUB]
  }
  config BR2_TARGET_GRUB_tg3 boolean {
   prompt "Broadcom Tigon3 driver" if [BR2_TARGET_GRUB]
   depends on [BR2_TARGET_GRUB]
   inherited [BR2_TARGET_GRUB]
  }
  config BR2_TARGET_GRUB_tulip boolean {
   prompt "Tulip driver" if [BR2_TARGET_GRUB]
   depends on [BR2_TARGET_GRUB]
   inherited [BR2_TARGET_GRUB]
  }
  config BR2_TARGET_GRUB_tlan boolean {
   prompt "TI ThunderLAN driver" if [BR2_TARGET_GRUB]
   depends on [BR2_TARGET_GRUB]
   inherited [BR2_TARGET_GRUB]
  }
  config BR2_TARGET_GRUB_undi boolean {
   prompt "PXE UNDI driver" if [BR2_TARGET_GRUB]
   depends on [BR2_TARGET_GRUB]
   inherited [BR2_TARGET_GRUB]
  }
  config BR2_TARGET_GRUB_via_rhine boolean {
   prompt "Rhine-I/II driver" if [BR2_TARGET_GRUB]
   depends on [BR2_TARGET_GRUB]
   inherited [BR2_TARGET_GRUB]
  }
  config BR2_TARGET_GRUB_w89c840 boolean {
   prompt "Winbond W89c840 driver" if [BR2_TARGET_GRUB]
   depends on [BR2_TARGET_GRUB]
   inherited [BR2_TARGET_GRUB]
  }
 }
 config BR2_TARGET_GRUB2 boolean {
  prompt "grub2" if [(BR2_i386 || BR2_powerpc) && BROKEN]
  depends on [BR2_i386 || BR2_powerpc]
  depends on [BROKEN]
  inherited [(BR2_i386 || BR2_powerpc) && BROKEN]
 }
 config BR2_TARGET_SYSLINUX boolean {
  prompt "syslinux" if [BR2_i386]
  depends on [BR2_i386]
  inherited [BR2_i386]
 }
 config BR2_TARGET_PXELINUX boolean {
  prompt "pxelinux" if [BR2_i386 || BR2_x86_64]
  depends on [BR2_i386 || BR2_x86_64]
  inherited [BR2_i386 || BR2_x86_64]
 }
 menuconfig BR2_TARGET_UBOOT boolean {
  prompt "U-Boot" if []
  if [BR2_TARGET_UBOOT] {
   config BR2_TARGET_UBOOT_BOARDNAME string {
    prompt "U-Boot board name" if [BR2_TARGET_UBOOT]
    inherited [BR2_TARGET_UBOOT]
   }
   choice boolean {
    prompt "U-Boot Version" if [BR2_TARGET_UBOOT]
    default [BR2_TARGET_UBOOT_2010_06] if [BR2_TARGET_UBOOT]
    config BR2_TARGET_UBOOT_2010_06 boolean {
     prompt "2010.06" if [<choice>]
     inherited [<choice>]
    }
    config BR2_TARGET_UBOOT_2010_03 boolean {
     prompt "2010.03" if [<choice>]
     inherited [<choice>]
    }
    config BR2_TARGET_UBOOT_2009_11 boolean {
     prompt "2009.11" if [<choice>]
     inherited [<choice>]
    }
    config BR2_TARGET_UBOOT_2009_08 boolean {
     prompt "2009.08" if [<choice>]
     inherited [<choice>]
    }
    config BR2_TARGET_UBOOT_CUSTOM_TARBALL boolean {
     prompt "Custom tarball" if [<choice>]
     inherited [<choice>]
    }
   }
   if [BR2_TARGET_UBOOT && BR2_TARGET_UBOOT_CUSTOM_TARBALL] {
    config BR2_TARGET_UBOOT_CUSTOM_TARBALL_LOCATION string {
     prompt "URL of custom U-Boot tarball" if [BR2_TARGET_UBOOT && BR2_TARGET_UBOOT_CUSTOM_TARBALL]
     inherited [BR2_TARGET_UBOOT && BR2_TARGET_UBOOT_CUSTOM_TARBALL]
    }
   }
   config BR2_TARGET_UBOOT_VERSION string {
    default ["2010.06"] if [BR2_TARGET_UBOOT && BR2_TARGET_UBOOT_2010_06]
    default ["2010.03"] if [BR2_TARGET_UBOOT && BR2_TARGET_UBOOT_2010_03]
    default ["2009.11"] if [BR2_TARGET_UBOOT && BR2_TARGET_UBOOT_2009_11]
    default ["2009.08"] if [BR2_TARGET_UBOOT && BR2_TARGET_UBOOT_2009_08]
    default ["custom"] if [BR2_TARGET_UBOOT && BR2_TARGET_UBOOT_CUSTOM_TARBALL]
    inherited [BR2_TARGET_UBOOT]
   }
   config BR2_TARGET_UBOOT_CUSTOM_PATCH_DIR string {
    prompt "custom patch dir" if [BR2_TARGET_UBOOT]
    inherited [BR2_TARGET_UBOOT]
   }
   choice boolean {
    prompt "U-Boot binary format" if [BR2_TARGET_UBOOT]
    config BR2_TARGET_UBOOT_FORMAT_BIN boolean {
     prompt "u-boot.bin" if [<choice>]
     inherited [<choice>]
    }
    config BR2_TARGET_UBOOT_FORMAT_KWB boolean {
     depends on [BR2_arm]
     prompt "u-boot.kwb (Marvell)" if [<choice> && BR2_arm]
     inherited [<choice> && BR2_arm]
    }
   }
   config BR2_TARGET_UBOOT_TOOL_MKIMAGE boolean {
    prompt "mkimage tool in target" if [BR2_TARGET_UBOOT]
    inherited [BR2_TARGET_UBOOT]
   }
   config BR2_TARGET_UBOOT_TOOL_ENV boolean {
    prompt "fw_printenv tool in target" if [BR2_TARGET_UBOOT]
    inherited [BR2_TARGET_UBOOT]
   }
   menuconfig BR2_TARGET_UBOOT_NETWORK boolean {
    prompt "Network Settings" if [BR2_TARGET_UBOOT]
    default [y] if [BR2_TARGET_UBOOT]
    inherited [BR2_TARGET_UBOOT]
    if [BR2_TARGET_UBOOT && BR2_TARGET_UBOOT_NETWORK] {
     config BR2_TARGET_UBOOT_SERVERIP string {
      prompt "server ip" if [BR2_TARGET_UBOOT && BR2_TARGET_UBOOT_NETWORK]
      default ["10.175.196.221"] if [BR2_TARGET_UBOOT && BR2_TARGET_UBOOT_NETWORK]
      inherited [BR2_TARGET_UBOOT && BR2_TARGET_UBOOT_NETWORK]
     }
     config BR2_TARGET_UBOOT_IPADDR string {
      prompt "ip address" if [BR2_TARGET_UBOOT && BR2_TARGET_UBOOT_NETWORK]
      default ["10.175.196.18"] if [BR2_TARGET_UBOOT && BR2_TARGET_UBOOT_NETWORK]
      inherited [BR2_TARGET_UBOOT && BR2_TARGET_UBOOT_NETWORK]
     }
     config BR2_TARGET_UBOOT_GATEWAY string {
      prompt "gateway ip" if [BR2_TARGET_UBOOT && BR2_TARGET_UBOOT_NETWORK]
      default ["10.175.196.1"] if [BR2_TARGET_UBOOT && BR2_TARGET_UBOOT_NETWORK]
      inherited [BR2_TARGET_UBOOT && BR2_TARGET_UBOOT_NETWORK]
     }
     config BR2_TARGET_UBOOT_NETMASK string {
      prompt "netmask" if [BR2_TARGET_UBOOT && BR2_TARGET_UBOOT_NETWORK]
      default ["255.255.255.0"] if [BR2_TARGET_UBOOT && BR2_TARGET_UBOOT_NETWORK]
      inherited [BR2_TARGET_UBOOT && BR2_TARGET_UBOOT_NETWORK]
     }
     config BR2_TARGET_UBOOT_ETHADDR string {
      prompt "ethernet address" if [BR2_TARGET_UBOOT && BR2_TARGET_UBOOT_NETWORK]
      default ["04:25:fe:ed:00:18"] if [BR2_TARGET_UBOOT && BR2_TARGET_UBOOT_NETWORK]
      inherited [BR2_TARGET_UBOOT && BR2_TARGET_UBOOT_NETWORK]
     }
     config BR2_TARGET_UBOOT_ETH1ADDR string {
      prompt "ethernet 2 address" if [BR2_TARGET_UBOOT && BR2_TARGET_UBOOT_NETWORK]
      inherited [BR2_TARGET_UBOOT && BR2_TARGET_UBOOT_NETWORK]
     }
    }
   }
  }
 }
 menuconfig BR2_TARGET_AT91BOOTSTRAP boolean {
  depends on [BR2_arm]
  prompt "AT91 Bootstrap" if [BR2_arm]
  inherited [BR2_arm]
  if [BR2_TARGET_AT91BOOTSTRAP] {
   config BR2_TARGET_AT91BOOTSTRAP_BOARD string {
    prompt "Bootstrap board" if [BR2_TARGET_AT91BOOTSTRAP]
    default [""] if [BR2_TARGET_AT91BOOTSTRAP]
    inherited [BR2_TARGET_AT91BOOTSTRAP]
   }
   choice boolean {
    prompt "Boot Memory" if [BR2_TARGET_AT91BOOTSTRAP]
    default [BR2_TARGET_AT91BOOT_DATAFLASHCARD] if [BR2_TARGET_AT91BOOTSTRAP]
    config BR2_TARGET_AT91BOOT_DATAFLASH boolean {
     prompt "AT45 Dataflash" if [<choice>]
     inherited [<choice>]
    }
    config BR2_TARGET_AT91BOOT_DATAFLASHCARD boolean {
     prompt "AT45 Dataflash Card" if [<choice>]
     inherited [<choice>]
    }
    config BR2_TARGET_AT91BOOT_NANDFLASH boolean {
     prompt "NAND Flash" if [<choice>]
     inherited [<choice>]
    }
    config BR2_TARGET_AT91BOOT_FLASH boolean {
     prompt "Internal Flash or external parallel flash" if [<choice>]
     inherited [<choice>]
    }
    config BR2_TARGET_AT91BOOT_SDCARD boolean {
     prompt "SD-Card" if [<choice>]
     inherited [<choice>]
    }
    config BR2_TARGET_AT91BOOT_EEPROM boolean {
     prompt "EEPROM" if [<choice>]
     inherited [<choice>]
    }
   }
   config BR2_TARGET_AT91BOOTSTRAP_MEMORY string {
    default ["dataflash"] if [BR2_TARGET_AT91BOOTSTRAP && BR2_TARGET_AT91BOOT_DATAFLASH]
    default ["dataflashcard"] if [BR2_TARGET_AT91BOOTSTRAP && BR2_TARGET_AT91BOOT_DATAFLASHCARD]
    default ["nandflash"] if [BR2_TARGET_AT91BOOTSTRAP && BR2_TARGET_AT91BOOT_NANDFLASH]
    default ["flash"] if [BR2_TARGET_AT91BOOTSTRAP && BR2_TARGET_AT91BOOT_FLASH]
    default ["sdcard"] if [BR2_TARGET_AT91BOOTSTRAP && BR2_TARGET_AT91BOOT_SDCARD]
    default ["eeprom"] if [BR2_TARGET_AT91BOOTSTRAP && BR2_TARGET_AT91BOOT_EEPROM]
    inherited [BR2_TARGET_AT91BOOTSTRAP]
   }
   config BR2_AT91BOOTSTRAP_IMG_SIZE string {
    prompt "Image Size to copy to SDRAM" if [BR2_TARGET_AT91BOOTSTRAP]
    default ["0x32000"] if [BR2_TARGET_AT91BOOTSTRAP && BR2_TARGET_AT91BOOT_DATAFLASH]
    default ["0x32000"] if [BR2_TARGET_AT91BOOTSTRAP && BR2_TARGET_AT91BOOT_DATAFLASHCARD]
    default ["0x30000"] if [BR2_TARGET_AT91BOOTSTRAP && BR2_TARGET_AT91BOOT_NANDFLASH]
    default ["0x100000"] if [BR2_TARGET_AT91BOOTSTRAP && BR2_TARGET_AT91BOOT_FLASH]
    default ["0x30000"] if [BR2_TARGET_AT91BOOTSTRAP && BR2_TARGET_AT91BOOT_SDCARD]
    default ["0x30000"] if [BR2_TARGET_AT91BOOTSTRAP && BR2_TARGET_AT91BOOT_EEPROM]
    inherited [BR2_TARGET_AT91BOOTSTRAP]
   }
   choice boolean {
    prompt "Start address of application" if [BR2_TARGET_AT91BOOTSTRAP]
    default [BR2_AT91BOOTSTRAP_JUMP_TO_DEFAULT] if [BR2_TARGET_AT91BOOTSTRAP]
    config BR2_AT91BOOTSTRAP_JUMP_TO_DEFAULT boolean {
     prompt "Copy to the default U-Boot start location in the SDRAM" if [<choice>]
     inherited [<choice>]
    }
    config BR2_AT91BOOTSTRAP_JUMP_TO_HIGH_SDRAM boolean {
     prompt "Copy to the last Megabyte of the SDRAM" if [<choice>]
     inherited [<choice>]
    }
    config BR2_AT91BOOTSTRAP_JUMP_TO_START_OF_SDRAM boolean {
     prompt "Copy to the start of the SDRAM" if [<choice>]
     inherited [<choice>]
    }
   }
   config BR2_AT91BOOTSTRAP_JUMP_ADDR string {
    default ["0x23F00000"] if [BR2_TARGET_AT91BOOTSTRAP && BR2_AT91BOOTSTRAP_JUMP_TO_DEFAULT]
    default ["0x23F00000"] if [BR2_TARGET_AT91BOOTSTRAP && BR2_AT91BOOTSTRAP_JUMP_TO_HIGH_SDRAM]
    default ["0x20000000"] if [BR2_TARGET_AT91BOOTSTRAP && BR2_AT91BOOTSTRAP_JUMP_TO_START_OF_SDRAM]
    inherited [BR2_TARGET_AT91BOOTSTRAP]
   }
  }
 }
 menuconfig BR2_TARGET_DATAFLASHBOOT boolean {
  depends on [BR2_arm]
  prompt "AT91 DataFlashBoot" if [BR2_arm]
  inherited [BR2_arm]
  if [BR2_TARGET_DATAFLASHBOOT] {
   choice boolean {
    prompt "Target Architecture" if [BR2_TARGET_DATAFLASHBOOT]
    default [BR2_TARGET_DATAFLASHBOOT_AT91RM9200] if [BR2_TARGET_DATAFLASHBOOT]
    config BR2_TARGET_DATAFLASHBOOT_AT91RM9200 boolean {
     prompt "AT91RM9200" if [<choice>]
     inherited [<choice>]
    }
    config BR2_TARGET_DATAFLASHBOOT_AT91SAM9261 boolean {
     prompt "AT91SAM9261" if [<choice>]
     inherited [<choice>]
    }
    config BR2_TARGET_DATAFLASHBOOT_AT91SAM9261S boolean {
     prompt "AT91SAM9261S" if [<choice>]
     inherited [<choice>]
    }
   }
  }
 }
}
menu "Kernel" {
 config BR2_LINUX_KERNEL boolean {
  prompt "Linux Kernel" if []
  if [BR2_LINUX_KERNEL] {
   choice boolean {
    prompt "Kernel version" if [BR2_LINUX_KERNEL]
    default [BR2_LINUX_KERNEL_2_6_35] if [BR2_LINUX_KERNEL]
    config BR2_LINUX_KERNEL_2_6_35 boolean {
     prompt "2.6.35.6" if [<choice>]
     inherited [<choice>]
    }
    config BR2_LINUX_KERNEL_SAME_AS_HEADERS boolean {
     prompt "Same as toolchain kernel headers" if [<choice> && BR2_TOOLCHAIN_BUILDROOT]
     depends on [BR2_TOOLCHAIN_BUILDROOT]
     inherited [<choice> && BR2_TOOLCHAIN_BUILDROOT]
    }
    config BR2_LINUX_KERNEL_CUSTOM_VERSION boolean {
     prompt "Custom version" if [<choice>]
     inherited [<choice>]
    }
    config BR2_LINUX_KERNEL_CUSTOM_TARBALL boolean {
     prompt "Custom tarball" if [<choice>]
     inherited [<choice>]
    }
   }
   config BR2_LINUX_KERNEL_CUSTOM_VERSION_VALUE string {
    prompt "Kernel version" if [BR2_LINUX_KERNEL && BR2_LINUX_KERNEL_CUSTOM_VERSION]
    depends on [BR2_LINUX_KERNEL_CUSTOM_VERSION]
    default ["2.6.35.6"] if [BR2_LINUX_KERNEL && BR2_LINUX_KERNEL_CUSTOM_VERSION]
    inherited [BR2_LINUX_KERNEL && BR2_LINUX_KERNEL_CUSTOM_VERSION]
   }
   config BR2_LINUX_KERNEL_CUSTOM_TARBALL_LOCATION string {
    prompt "URL of custom kernel tarball" if [BR2_LINUX_KERNEL && BR2_LINUX_KERNEL_CUSTOM_TARBALL]
    depends on [BR2_LINUX_KERNEL_CUSTOM_TARBALL]
    inherited [BR2_LINUX_KERNEL && BR2_LINUX_KERNEL_CUSTOM_TARBALL]
   }
   config BR2_LINUX_KERNEL_VERSION string {
    default ["2.6.35.6"] if [BR2_LINUX_KERNEL && BR2_LINUX_KERNEL_2_6_35]
    default ["BR2_DEFAULT_KERNEL_HEADERS"] if [BR2_LINUX_KERNEL && BR2_LINUX_KERNEL_SAME_AS_HEADERS]
    default ["BR2_LINUX_KERNEL_CUSTOM_VERSION_VALUE"] if [BR2_LINUX_KERNEL && BR2_LINUX_KERNEL_CUSTOM_VERSION]
    default ["custom"] if [BR2_LINUX_KERNEL && BR2_LINUX_KERNEL_CUSTOM_TARBALL]
    inherited [BR2_LINUX_KERNEL]
   }
   config BR2_LINUX_KERNEL_PATCH string {
    prompt "Custom kernel patch" if [BR2_LINUX_KERNEL]
    inherited [BR2_LINUX_KERNEL]
   }
   choice boolean {
    prompt "Kernel configuration" if [BR2_LINUX_KERNEL]
    default [BR2_LINUX_KERNEL_USE_DEFCONFIG] if [BR2_LINUX_KERNEL]
    config BR2_LINUX_KERNEL_USE_DEFCONFIG boolean {
     prompt "Using a defconfig" if [<choice>]
     inherited [<choice>]
    }
    config BR2_LINUX_KERNEL_USE_CUSTOM_CONFIG boolean {
     prompt "Using a custom config file" if [<choice>]
     inherited [<choice>]
    }
   }
   config BR2_LINUX_KERNEL_DEFCONFIG string {
    prompt "Defconfig name" if [BR2_LINUX_KERNEL && BR2_LINUX_KERNEL_USE_DEFCONFIG]
    depends on [BR2_LINUX_KERNEL_USE_DEFCONFIG]
    inherited [BR2_LINUX_KERNEL && BR2_LINUX_KERNEL_USE_DEFCONFIG]
   }
   config BR2_LINUX_KERNEL_CUSTOM_CONFIG_FILE string {
    prompt "Configuration file path" if [BR2_LINUX_KERNEL && BR2_LINUX_KERNEL_USE_CUSTOM_CONFIG]
    depends on [BR2_LINUX_KERNEL_USE_CUSTOM_CONFIG]
    inherited [BR2_LINUX_KERNEL && BR2_LINUX_KERNEL_USE_CUSTOM_CONFIG]
   }
   choice boolean {
    prompt "Kernel binary format" if [BR2_LINUX_KERNEL]
    config BR2_LINUX_KERNEL_UIMAGE boolean {
     prompt "uImage" if [<choice> && (BR2_arm || BR2_armeb || BR2_powerpc || BR2_avr32 || BR2_sh || BR2_sh64)]
     depends on [BR2_arm || BR2_armeb || BR2_powerpc || BR2_avr32 || BR2_sh || BR2_sh64]
     inherited [<choice> && (BR2_arm || BR2_armeb || BR2_powerpc || BR2_avr32 || BR2_sh || BR2_sh64)]
    }
    config BR2_LINUX_KERNEL_BZIMAGE boolean {
     prompt "bzImage" if [<choice> && (BR2_i386 || BR2_x86_64)]
     depends on [BR2_i386 || BR2_x86_64]
     inherited [<choice> && (BR2_i386 || BR2_x86_64)]
    }
    config BR2_LINUX_KERNEL_ZIMAGE boolean {
     prompt "zImage" if [<choice> && (BR2_arm || BR2_armeb || BR2_powerpc || BR2_sparc || BR2_sh || BR2_sh64 || BR2_xtensa)]
     depends on [BR2_arm || BR2_armeb || BR2_powerpc || BR2_sparc || BR2_sh || BR2_sh64 || BR2_xtensa]
     inherited [<choice> && (BR2_arm || BR2_armeb || BR2_powerpc || BR2_sparc || BR2_sh || BR2_sh64 || BR2_xtensa)]
    }
    config BR2_LINUX_KERNEL_VMLINUX_BIN boolean {
     prompt "vmlinux.bin" if [<choice> && (BR2_mips || BR2_mipsel || BR2_sh || BR2_sh64)]
     depends on [BR2_mips || BR2_mipsel || BR2_sh || BR2_sh64]
     inherited [<choice> && (BR2_mips || BR2_mipsel || BR2_sh || BR2_sh64)]
    }
   }
  }
 }
}
